





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-7a12427f1445.css" integrity="sha512-ehJCfxRFqU8Lt/+Hwc4cvp41sPisCp1U2d03SlbM3aKVZcxiYDTVmBsAtOVgAtZ912JFOebwrPXr/JcDNd6bGA==" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-d48e9398f9dd.css" integrity="sha512-1I6TmPndxMSu5+zpdxMHBW0TT8WRokgY/ocqtSd+DZRpKCgIqyJw1c9//CmfSyZJpmCuRCyo93Fp7G2UGHD3MA==" media="all" rel="stylesheet" />
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>velocity/velocity.js at master Â· julianshapiro/velocity</title>
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta content="https://avatars2.githubusercontent.com/u/655026?s=400&amp;v=4" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="julianshapiro/velocity" property="og:title" /><meta content="https://github.com/julianshapiro/velocity" property="og:url" /><meta content="velocity - Accelerated JavaScript animation." property="og:description" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MjMzNzQwMjM1OmI4YTAzY2RlNjBkYTgzNDk0NmE4OGFmODc3N2ExMjRkZGViNGU2MmNkODZhM2EwMTUyYTc1Zjc2YmU4N2MyMzU=--4d68ad5a9ab6376344f9e7361f090102bbaf32e6">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="FB15:16C92:61FDB:9EE25:5A929C27" data-pjax-transient>
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
  <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
  <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="FB15:16C92:61FDB:9EE25:5A929C27" name="octolytics-dimension-request_id" /><meta content="sea" name="octolytics-dimension-region_edge" /><meta content="iad" name="octolytics-dimension-region_render" /><meta content="23278992" name="octolytics-actor-id" /><meta content="john-rocky" name="octolytics-actor-login" /><meta content="31f70c736ee9b606d51025044dfb78c8c9ef3add61714d852b37271f699b6892" name="octolytics-actor-hash" />
<meta content="https://github.com/hydro_browser_events" name="hydro-events-url" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />




  <meta class="js-ga-set" name="dimension1" content="Logged In">


  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="john-rocky">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="ZTJhMWJmYWMyNDk2NDg1ZjI0YWExNjc0YzA3MmIwYTlmNGMzMDEwNDA2ZjBjNjljNTIyY2Q0NTliOWI3OGMxMHx7InJlbW90ZV9hZGRyZXNzIjoiMTA2LjE2MS4xNzkuMjUwIiwicmVxdWVzdF9pZCI6IkZCMTU6MTZDOTI6NjFGREI6OUVFMjU6NUE5MjlDMjciLCJ0aW1lc3RhbXAiOjE1MTk1NTc2ODMsImhvc3QiOiJnaXRodWIuY29tIn0=">

    <meta name="enabled-features" content="UNIVERSE_BANNER,FREE_TRIALS,MARKETPLACE_HERO_CARD_UPLOADER,MARKETPLACE_INSIGHTS,MARKETPLACE_INSIGHTS_CONVERSION_PERCENTAGES">

  <meta name="html-safe-nonce" content="eab45194369a3e3ee5dc47012d57949eb9f2e952">

  <meta http-equiv="x-pjax-version" content="6818251a6f2d1562b5a6ff794ec3e848">
  

      <link href="https://github.com/julianshapiro/velocity/commits/master.atom" rel="alternate" title="Recent Commits to velocity:master" type="application/atom+xml">

  <meta name="description" content="velocity - Accelerated JavaScript animation.">
  <meta name="go-import" content="github.com/julianshapiro/velocity git https://github.com/julianshapiro/velocity.git">

  <meta content="655026" name="octolytics-dimension-user_id" /><meta content="julianshapiro" name="octolytics-dimension-user_login" /><meta content="18611173" name="octolytics-dimension-repository_id" /><meta content="julianshapiro/velocity" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="18611173" name="octolytics-dimension-repository_network_root_id" /><meta content="julianshapiro/velocity" name="octolytics-dimension-repository_network_root_nwo" /><meta content="false" name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" />


    <link rel="canonical" href="https://github.com/julianshapiro/velocity/blob/master/velocity.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

<link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-in env-production emoji-size-boost page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="bg-black text-white p-3 show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        
<header class="Header  f5" role="banner">
  <div class="d-flex px-3 flex-justify-between container-lg">
    <div class="d-flex flex-justify-between ">
      <div class="">
        <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>

      </div>

    </div>

    <div class="HeaderMenu d-flex flex-justify-between flex-auto">
      <div class="d-flex">
            <div class="">
              <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/julianshapiro/velocity/search" class="js-site-search-form" data-scoped-search-url="/julianshapiro/velocity/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
        <a href="/julianshapiro/velocity/blob/master/velocity.js" class="header-search-scope no-underline">This repository</a>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>

            </div>

          <ul class="d-flex pl-2 flex-items-center text-bold list-style-none" role="navigation">
            <li>
              <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
                Pull requests
</a>            </li>
            <li>
              <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
                Issues
</a>            </li>
                <li>
                  <a href="/marketplace" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-selected-links=" /marketplace">
                    Marketplace
</a>                </li>
            <li>
              <a href="/explore" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore">
                Explore
</a>            </li>
          </ul>
      </div>

      <div class="d-flex">
        
<ul class="user-nav d-flex flex-items-center list-style-none" id="user-links">
  <li class="dropdown js-menu-container">
    <span class="d-inline-block  px-2">
      

    </span>
  </li>

  <li class="dropdown js-menu-container">
    <details class="dropdown-details details-reset js-dropdown-details d-flex px-2 flex-items-center">
      <summary class="HeaderNavlink"
         aria-label="Create newâ¦"
         data-ga-click="Header, create new, icon:add">
        <svg aria-hidden="true" class="octicon octicon-plus float-left mr-1 mt-1" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
        <span class="dropdown-caret mt-1"></span>
      </summary>

      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="julianshapiro/velocity">This repository</span>
  </div>
    <a class="dropdown-item" href="/julianshapiro/velocity/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </details>
  </li>

  <li class="dropdown js-menu-container">

    <details class="dropdown-details details-reset js-dropdown-details d-flex pl-2 flex-items-center">
      <summary class="HeaderNavlink name mt-1"
        aria-label="View profile and more"
        data-ga-click="Header, show menu, icon:avatar">
        <img alt="@john-rocky" class="avatar float-left mr-1" src="https://avatars1.githubusercontent.com/u/23278992?s=40&amp;v=4" height="20" width="20">
        <span class="dropdown-caret"></span>
      </summary>

      <ul class="dropdown-menu dropdown-menu-sw">
        <li class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">john-rocky</strong>
        </li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="/john-rocky" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a></li>
        <li><a class="dropdown-item" href="/john-rocky?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a></li>
          <li><a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, your gists, text:your gists">Your gists</a></li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a></li>

        <li><a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a></li>

        <li><!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="CJzwVxiQuY2PVylQJaC7CQHOw0g6l7/Q37fwKoH5odrBR9kON8u+BXZUiQDboXJiRR3fwl7j10YOn8Uw0uJjJw==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
        </form></li>
      </ul>
    </details>
  </li>
</ul>



        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="sr-only right-0" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Wpl02U4pu/f6jvgrFCsY3b19LSSeA2wgPpD62mwEk5qTQl2AYXK8fwONWHvqKtG2+a4xrvp3BLbvuM/APx9RZw==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </div>
</header>

      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main" class="application-main ">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <div id="js-repo-pjax-container" data-pjax-container >
      







  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav  ">
    <div class="repohead-details-container clearfix container">

      <ul class="pagehead-actions">
  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="9FmMb2Ts26kzZJhnPVYQMeYXdg0BD/tYnK5+DPyzEfNBmbN6ylE5ZseEK2IkXU6CcsSVwj1HPF3FWEu94ACWSQ==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="18611173" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/julianshapiro/velocity/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target"
            role="button"
            aria-haspopup="true"
            aria-expanded="false"
            aria-label="Toggle repository notifications menu"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
                <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                Watch
            </span>
          </a>
          <a class="social-count js-social-count"
            href="/julianshapiro/velocity/watchers"
            aria-label="451 users are watching this repository">
            451
          </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                        Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                        Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/julianshapiro/velocity/unstar" class="starred js-social-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="6U25iNehsyOYAEff3X49BXMgIdLgz6Xv+nKKX7UavctE0NX1e8WXMU3ANLc04uxtcbOfj/Mw7OOMiZguvgo1oA==" /></div>
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar julianshapiro/velocity"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/julianshapiro/velocity/stargazers"
           aria-label="14212 users starred this repository">
          14,212
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/julianshapiro/velocity/star" class="unstarred js-social-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="mLJySOaUXIhUWJ/muAwyoG2MBKP3gCOjuayg5fX+ec4LQ01CsgTwXWvARupO16jn1baFM140BKK8IJraATxDpg==" /></div>
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star julianshapiro/velocity"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/julianshapiro/velocity/stargazers"
           aria-label="14212 users starred this repository">
          14,212
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/julianshapiro/velocity/fork" class="btn-with-count" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="IMt4tud79bzhcpXR+njJIw2VZDK1Ncn+Fn5oCIeQr8EuRrR2jidrQiz+EJHopmcja10+IAJ9Y613ANgd6xwm2w==" /></div>
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of julianshapiro/velocity to your account"
                aria-label="Fork your own copy of julianshapiro/velocity to your account">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
            </button>
</form>
    <a href="/julianshapiro/velocity/network" class="social-count"
       aria-label="1383 users forked this repository">
      1,383
    </a>
  </li>
</ul>

      <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/julianshapiro" class="url fn" rel="author">julianshapiro</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/julianshapiro/velocity" data-pjax="#js-repo-pjax-container">velocity</a></strong>

</h1>

    </div>
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax container"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/julianshapiro/velocity" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /julianshapiro/velocity" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/julianshapiro/velocity/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /julianshapiro/velocity/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">67</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/julianshapiro/velocity/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls checks /julianshapiro/velocity/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">5</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a href="/julianshapiro/velocity/projects" class="js-selected-navigation-item reponav-item" data-hotkey="g b" data-selected-links="repo_projects new_repo_project repo_project /julianshapiro/velocity/projects">
      <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >1</span>
</a>
    <a href="/julianshapiro/velocity/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /julianshapiro/velocity/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

  <a href="/julianshapiro/velocity/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse /julianshapiro/velocity/pulse">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Insights
</a>

</nav>


  </div>

<div class="container new-discussion-timeline experiment-repo-nav  ">
  <div class="repository-content ">

    
  <a href="/julianshapiro/velocity/blob/92f6981723e51895855812366739a04fef93176b/velocity.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:8ff08b3060526efa250c110262299458 -->

  <div class="file-navigation js-zeroclipboard-container">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/julianshapiro/velocity/blob/develop/velocity.js"
               data-name="develop"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                develop
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/julianshapiro/velocity/blob/master/velocity.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/julianshapiro/velocity/blob/v1/velocity.js"
               data-name="v1"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                v1
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/2.0.1/velocity.js"
              data-name="2.0.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="2.0.1">
                2.0.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/2.0.0/velocity.js"
              data-name="2.0.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="2.0.0">
                2.0.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.5.1/velocity.js"
              data-name="1.5.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.5.1">
                1.5.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.5.0/velocity.js"
              data-name="1.5.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.5.0">
                1.5.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.4.3/velocity.js"
              data-name="1.4.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.4.3">
                1.4.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.4.2/velocity.js"
              data-name="1.4.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.4.2">
                1.4.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.4.1/velocity.js"
              data-name="1.4.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.4.1">
                1.4.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.4.0/velocity.js"
              data-name="1.4.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.4.0">
                1.4.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.3.2/velocity.js"
              data-name="1.3.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.2">
                1.3.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.3.1/velocity.js"
              data-name="1.3.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.1">
                1.3.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.3.0/velocity.js"
              data-name="1.3.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.0">
                1.3.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.2.3/velocity.js"
              data-name="1.2.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.2.3">
                1.2.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.2.2/velocity.js"
              data-name="1.2.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.2.2">
                1.2.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.2.1/velocity.js"
              data-name="1.2.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.2.1">
                1.2.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.2.0/velocity.js"
              data-name="1.2.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.2.0">
                1.2.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.1.0/velocity.js"
              data-name="1.1.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.1.0">
                1.1.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/1.0.0/velocity.js"
              data-name="1.0.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0.0">
                1.0.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.11.9/velocity.js"
              data-name="0.11.9"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.9">
                0.11.9
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.11.8/velocity.js"
              data-name="0.11.8"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.8">
                0.11.8
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.11.7/velocity.js"
              data-name="0.11.7"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.7">
                0.11.7
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.11.6/velocity.js"
              data-name="0.11.6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.6">
                0.11.6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.11.5/velocity.js"
              data-name="0.11.5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.5">
                0.11.5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.11.2/velocity.js"
              data-name="0.11.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.2">
                0.11.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.11.1/velocity.js"
              data-name="0.11.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.1">
                0.11.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.11.0/velocity.js"
              data-name="0.11.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.11.0">
                0.11.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.10.1/velocity.js"
              data-name="0.10.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.10.1">
                0.10.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.10.0/velocity.js"
              data-name="0.10.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.10.0">
                0.10.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.9.0/velocity.js"
              data-name="0.9.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.9.0">
                0.9.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.8.0/velocity.js"
              data-name="0.8.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.8.0">
                0.8.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.7.0/velocity.js"
              data-name="0.7.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.7.0">
                0.7.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.6.0/velocity.js"
              data-name="0.6.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.6.0">
                0.6.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.5.3/velocity.js"
              data-name="0.5.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.5.3">
                0.5.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.5.2/velocity.js"
              data-name="0.5.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.5.2">
                0.5.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.5.1/velocity.js"
              data-name="0.5.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.5.1">
                0.5.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.5.0/velocity.js"
              data-name="0.5.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.5.0">
                0.5.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.4.1/velocity.js"
              data-name="0.4.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.4.1">
                0.4.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.4.0/velocity.js"
              data-name="0.4.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.4.0">
                0.4.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.3.0/velocity.js"
              data-name="0.3.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.3.0">
                0.3.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.2.1/velocity.js"
              data-name="0.2.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.2.1">
                0.2.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.2.0/velocity.js"
              data-name="0.2.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.2.0">
                0.2.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.1.0/velocity.js"
              data-name="0.1.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.1.0">
                0.1.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.23/velocity.js"
              data-name="0.0.23"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.23">
                0.0.23
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.22/velocity.js"
              data-name="0.0.22"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.22">
                0.0.22
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.21/velocity.js"
              data-name="0.0.21"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.21">
                0.0.21
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.20/velocity.js"
              data-name="0.0.20"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.20">
                0.0.20
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.19/velocity.js"
              data-name="0.0.19"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.19">
                0.0.19
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.18/velocity.js"
              data-name="0.0.18"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.18">
                0.0.18
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.16/velocity.js"
              data-name="0.0.16"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.16">
                0.0.16
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.15/velocity.js"
              data-name="0.0.15"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.15">
                0.0.15
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.14/velocity.js"
              data-name="0.0.14"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.14">
                0.0.14
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.13/velocity.js"
              data-name="0.0.13"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.13">
                0.0.13
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.12/velocity.js"
              data-name="0.0.12"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.12">
                0.0.12
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.10/velocity.js"
              data-name="0.0.10"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.10">
                0.0.10
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.9/velocity.js"
              data-name="0.0.9"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.9">
                0.0.9
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.1/velocity.js"
              data-name="0.0.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.1">
                0.0.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/julianshapiro/velocity/tree/0.0.0/velocity.js"
              data-name="0.0.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.0.0">
                0.0.0
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/julianshapiro/velocity/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
    </div>
    <div class="breadcrumb js-zeroclipboard-target">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/julianshapiro/velocity" data-pjax="true"><span>velocity</span></a></span></span><span class="separator">/</span><strong class="final-path">velocity.js</strong>
    </div>
  </div>


  
  <div class="commit-tease">
      <span class="float-right">
        <a class="commit-tease-sha" href="/julianshapiro/velocity/commit/92f6981723e51895855812366739a04fef93176b" data-pjax>
          92f6981
        </a>
        <relative-time datetime="2018-02-24T07:35:19Z">Feb 24, 2018</relative-time>
      </span>
      <div>
        <img alt="@Rycochet" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/290714?s=40&amp;v=4" width="20" />
        <a href="/Rycochet" class="user-mention" rel="contributor">Rycochet</a>
          <a href="/julianshapiro/velocity/commit/92f6981723e51895855812366739a04fef93176b" class="message" data-pjax="true" title="Fixes and updates in preparation for new sequence code
All HTMLElement css styles are now set/get via a normalization instead of by fallback code
Tweens are now an interface (object) instead of an enum indexed array
Normalization function is now cached in tween at animation start for performance and consistency
Internal version number is now set directly instead of indirectly

Fixes #849 - SVG attribute initialisation was crashing
Fixes #845 - Inconsistent handling of colour codes, now force rgba()
Fixes #839 - - Possibly mis-identification of lineHeight">Fixes and updates in preparation for new sequence code</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>18</strong>
         contributors
      </button>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="Rycochet" href="/julianshapiro/velocity/commits/master/velocity.js?author=Rycochet"><img alt="@Rycochet" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/290714?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="julianshapiro" href="/julianshapiro/velocity/commits/master/velocity.js?author=julianshapiro"><img alt="@julianshapiro" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/655026?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="Duskfall" href="/julianshapiro/velocity/commits/master/velocity.js?author=Duskfall"><img alt="@Duskfall" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/2528125?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="paulfalgout" href="/julianshapiro/velocity/commits/master/velocity.js?author=paulfalgout"><img alt="@paulfalgout" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/2028470?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="Iwasawafag" href="/julianshapiro/velocity/commits/master/velocity.js?author=Iwasawafag"><img alt="@Iwasawafag" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/5304842?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="304NotModified" href="/julianshapiro/velocity/commits/master/velocity.js?author=304NotModified"><img alt="@304NotModified" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/5808377?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="wyattoday" href="/julianshapiro/velocity/commits/master/velocity.js?author=wyattoday"><img alt="@wyattoday" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/11202536?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="prasannavl" href="/julianshapiro/velocity/commits/master/velocity.js?author=prasannavl"><img alt="@prasannavl" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/559409?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="philippklodt" href="/julianshapiro/velocity/commits/master/velocity.js?author=philippklodt"><img alt="@philippklodt" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/19172085?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="prewk" href="/julianshapiro/velocity/commits/master/velocity.js?author=prewk"><img alt="@prewk" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/640102?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="nicjansma" href="/julianshapiro/velocity/commits/master/velocity.js?author=nicjansma"><img alt="@nicjansma" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/1004649?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="a10nik" href="/julianshapiro/velocity/commits/master/velocity.js?author=a10nik"><img alt="@a10nik" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/4961696?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="amazeplc" href="/julianshapiro/velocity/commits/master/velocity.js?author=amazeplc"><img alt="@amazeplc" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/5079784?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="kenwheeler" href="/julianshapiro/velocity/commits/master/velocity.js?author=kenwheeler"><img alt="@kenwheeler" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/286616?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="vgel" href="/julianshapiro/velocity/commits/master/velocity.js?author=vgel"><img alt="@vgel" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/980096?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="nmussy" href="/julianshapiro/velocity/commits/master/velocity.js?author=nmussy"><img alt="@nmussy" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/2505696?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="codeslaw" href="/julianshapiro/velocity/commits/master/velocity.js?author=codeslaw"><img alt="@codeslaw" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/245217?s=40&amp;v=4" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="alampros" href="/julianshapiro/velocity/commits/master/velocity.js?author=alampros"><img alt="@alampros" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/297461?s=40&amp;v=4" width="20" /> </a>


    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <img alt="@Rycochet" height="24" src="https://avatars2.githubusercontent.com/u/290714?s=48&amp;v=4" width="24" />
            <a href="/Rycochet">Rycochet</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@julianshapiro" height="24" src="https://avatars0.githubusercontent.com/u/655026?s=48&amp;v=4" width="24" />
            <a href="/julianshapiro">julianshapiro</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@Duskfall" height="24" src="https://avatars3.githubusercontent.com/u/2528125?s=48&amp;v=4" width="24" />
            <a href="/Duskfall">Duskfall</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@paulfalgout" height="24" src="https://avatars2.githubusercontent.com/u/2028470?s=48&amp;v=4" width="24" />
            <a href="/paulfalgout">paulfalgout</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@Iwasawafag" height="24" src="https://avatars1.githubusercontent.com/u/5304842?s=48&amp;v=4" width="24" />
            <a href="/Iwasawafag">Iwasawafag</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@304NotModified" height="24" src="https://avatars3.githubusercontent.com/u/5808377?s=48&amp;v=4" width="24" />
            <a href="/304NotModified">304NotModified</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@wyattoday" height="24" src="https://avatars2.githubusercontent.com/u/11202536?s=48&amp;v=4" width="24" />
            <a href="/wyattoday">wyattoday</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@prasannavl" height="24" src="https://avatars1.githubusercontent.com/u/559409?s=48&amp;v=4" width="24" />
            <a href="/prasannavl">prasannavl</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@philippklodt" height="24" src="https://avatars3.githubusercontent.com/u/19172085?s=48&amp;v=4" width="24" />
            <a href="/philippklodt">philippklodt</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@prewk" height="24" src="https://avatars1.githubusercontent.com/u/640102?s=48&amp;v=4" width="24" />
            <a href="/prewk">prewk</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@nicjansma" height="24" src="https://avatars2.githubusercontent.com/u/1004649?s=48&amp;v=4" width="24" />
            <a href="/nicjansma">nicjansma</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@a10nik" height="24" src="https://avatars0.githubusercontent.com/u/4961696?s=48&amp;v=4" width="24" />
            <a href="/a10nik">a10nik</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@amazeplc" height="24" src="https://avatars3.githubusercontent.com/u/5079784?s=48&amp;v=4" width="24" />
            <a href="/amazeplc">amazeplc</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@kenwheeler" height="24" src="https://avatars3.githubusercontent.com/u/286616?s=48&amp;v=4" width="24" />
            <a href="/kenwheeler">kenwheeler</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@vgel" height="24" src="https://avatars1.githubusercontent.com/u/980096?s=48&amp;v=4" width="24" />
            <a href="/vgel">vgel</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@nmussy" height="24" src="https://avatars0.githubusercontent.com/u/2505696?s=48&amp;v=4" width="24" />
            <a href="/nmussy">nmussy</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@codeslaw" height="24" src="https://avatars1.githubusercontent.com/u/245217?s=48&amp;v=4" width="24" />
            <a href="/codeslaw">codeslaw</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@alampros" height="24" src="https://avatars1.githubusercontent.com/u/297461?s=48&amp;v=4" width="24" />
            <a href="/alampros">alampros</a>
          </li>
      </ul>
    </div>
  </div>


  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/julianshapiro/velocity/raw/master/velocity.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/julianshapiro/velocity/blame/master/velocity.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/julianshapiro/velocity/commits/master/velocity.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="x-github-client://openRepo/https://github.com/julianshapiro/velocity?branch=master&amp;filepath=velocity.js"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:mac">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

          <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/julianshapiro/velocity/edit/master/velocity.js" class="inline-form js-update-url-with-hash" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="OYwrMVQPzUC+rXSS1O3fKkL8EwOGKkt2TlVD/Mz1orjFyVY/wY1F+733AL7TjE/WNjBjONjePDlbfDiEaN9trA==" /></div>
            <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
              aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
              <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
            </button>
</form>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/julianshapiro/velocity/delete/master/velocity.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="uHd09d78/LapIJBQIR+/Vg27vwrXUH1idSObrmsHlUyraxqrP/ejbT9gHF3YqXS+pWW7MWiORZ0xXA8XGt3Xqg==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      4536 lines (4367 sloc)
      <span class="file-info-divider"></span>
    198 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="4">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span>! VelocityJS.org (2.0.1) (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">root</span>, <span class="pl-smi">factory</span>) {</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">if</span> (<span class="pl-k">typeof</span> define <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">define</span>.<span class="pl-smi">amd</span>) {</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line">		<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Velocity<span class="pl-pds">&#39;</span></span>, [], <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line">			<span class="pl-k">return</span> (root[<span class="pl-s"><span class="pl-pds">&#39;</span>Velocity<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-en">factory</span>());</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line">		});</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line">	} <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">module</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">module</span>.<span class="pl-smi">exports</span>) {</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">		<span class="pl-c1">module</span>.<span class="pl-smi">exports</span> <span class="pl-k">=</span> <span class="pl-en">factory</span>();</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line">	} <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line">		root[<span class="pl-s"><span class="pl-pds">&#39;</span>Velocity<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-en">factory</span>();</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line">	}</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">}(<span class="pl-c1">this</span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> __assign <span class="pl-k">=</span> <span class="pl-c1">this</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">this</span>.<span class="pl-smi">__assign</span> <span class="pl-k">||</span> <span class="pl-c1">Object</span>.<span class="pl-smi">assign</span> <span class="pl-k">||</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> s, i <span class="pl-k">=</span> <span class="pl-c1">1</span>, n <span class="pl-k">=</span> <span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line">        s <span class="pl-k">=</span> <span class="pl-c1">arguments</span>[i];</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> p <span class="pl-k">in</span> s) <span class="pl-k">if</span> (<span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">hasOwnProperty</span>.<span class="pl-c1">call</span>(s, p)) t[p] <span class="pl-k">=</span> s[p];</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> t;</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Constants and defaults. These values should never change without a MINOR</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * version bump.</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>[&quot;completeCall&quot;, &quot;CSS&quot;, &quot;State&quot;, &quot;getEasing&quot;, &quot;Easings&quot;, &quot;data&quot;, &quot;debug&quot;, &quot;defaults&quot;, &quot;hook&quot;, &quot;init&quot;, &quot;mock&quot;, &quot;pauseAll&quot;, &quot;queue&quot;, &quot;dequeue&quot;, &quot;freeAnimationCall&quot;, &quot;Redirects&quot;, &quot;RegisterEffect&quot;, &quot;resumeAll&quot;, &quot;RunSequence&quot;, &quot;lastTick&quot;, &quot;tick&quot;, &quot;timestamp&quot;, &quot;expandTween&quot;, &quot;version&quot;]</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">PUBLIC_MEMBERS</span> <span class="pl-k">=</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>version<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>RegisterEffect<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>patch<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>timestamp<span class="pl-pds">&quot;</span></span> ];</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Without this it will only un-prefix properties that have a valid &quot;normal&quot;</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * version.</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> <span class="pl-c1">ALL_VENDOR_PREFIXES</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DURATION_FAST</span> <span class="pl-k">=</span> <span class="pl-c1">200</span>;</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DURATION_NORMAL</span> <span class="pl-k">=</span> <span class="pl-c1">400</span>;</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DURATION_SLOW</span> <span class="pl-k">=</span> <span class="pl-c1">600</span>;</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">FUZZY_MS_PER_SECOND</span> <span class="pl-k">=</span> <span class="pl-c1">980</span>;</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_CACHE</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_DELAY</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_DURATION</span> <span class="pl-k">=</span> <span class="pl-c1">DURATION_NORMAL</span>;</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_EASING</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>swing<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_FPSLIMIT</span> <span class="pl-k">=</span> <span class="pl-c1">60</span>;</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_LOOP</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_PROMISE</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_PROMISE_REJECT_EMPTY</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_QUEUE</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_REPEAT</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_SPEED</span> <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DEFAULT_SYNC</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">TWEEN_NUMBER_REGEX</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\d</span><span class="pl-cce">\.</span>-]</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">CLASSNAME</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>velocity-animating<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> Duration <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line">    fast<span class="pl-k">:</span> <span class="pl-c1">DURATION_FAST</span>,</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line">    normal<span class="pl-k">:</span> <span class="pl-c1">DURATION_NORMAL</span>,</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line">    slow<span class="pl-k">:</span> <span class="pl-c1">DURATION_SLOW</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Runtime type checking methods.</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">isBoolean</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> variable <span class="pl-k">===</span> <span class="pl-c1">true</span> <span class="pl-k">||</span> variable <span class="pl-k">===</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isNumber</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">typeof</span> variable <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Faster way to parse a string/number as a number https://jsperf.com/number-vs-parseint-vs-plus/3</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> <span class="pl-smi">variable</span> The given string or number</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> <span class="pl-en">{variable is number}</span> Returns boolean true if it is a number, false otherwise</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">isNumberWhenParsed</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-c1">isNaN</span>(<span class="pl-c1">Number</span>(variable));</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isString</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">typeof</span> variable <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isFunction</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toString</span>.<span class="pl-c1">call</span>(variable) <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[object Function]<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isNode</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">!!</span>(variable <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">variable</span>.<span class="pl-c1">nodeType</span>);</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isVelocityResult</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> variable <span class="pl-k">&amp;&amp;</span> <span class="pl-en">isNumber</span>(<span class="pl-smi">variable</span>.<span class="pl-c1">length</span>) <span class="pl-k">&amp;&amp;</span> <span class="pl-en">isFunction</span>(<span class="pl-smi">variable</span>.<span class="pl-smi">velocity</span>);</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">propertyIsEnumerable</span>(<span class="pl-smi">object</span>, <span class="pl-smi">property</span>) {</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">propertyIsEnumerable</span>.<span class="pl-c1">call</span>(object, property);</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span> Determine if variable is an array-like wrapped jQuery, Zepto or similar element, or even a NodeList etc. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span> NOTE: HTMLFormElements also have a length. <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">isWrapped</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> variable <span class="pl-k">&amp;&amp;</span> variable <span class="pl-k">!==</span> <span class="pl-c1">window</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-en">isNumber</span>(<span class="pl-smi">variable</span>.<span class="pl-c1">length</span>) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">isString</span>(variable) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">isFunction</span>(variable) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">isNode</span>(variable) <span class="pl-k">&amp;&amp;</span> (<span class="pl-smi">variable</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> <span class="pl-en">isNode</span>(variable[<span class="pl-c1">0</span>]));</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isSVG</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">SVGElement</span> <span class="pl-k">&amp;&amp;</span> variable <span class="pl-k">instanceof</span> <span class="pl-c1">SVGElement</span>;</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isPlainObject</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>variable <span class="pl-k">||</span> <span class="pl-k">typeof</span> variable <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> <span class="pl-smi">variable</span>.<span class="pl-c1">nodeType</span> <span class="pl-k">||</span> <span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toString</span>.<span class="pl-c1">call</span>(variable) <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[object Object]<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> proto <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">getPrototypeOf</span>(variable);</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">!</span>proto <span class="pl-k">||</span> <span class="pl-smi">proto</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>constructor<span class="pl-pds">&quot;</span></span>) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">proto</span>.<span class="pl-c1">constructor</span> <span class="pl-k">===</span> <span class="pl-c1">Object</span>;</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isEmptyObject</span>(<span class="pl-smi">variable</span>) {</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> name_1 <span class="pl-k">in</span> variable) {</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">variable</span>.<span class="pl-en">hasOwnProperty</span>(name_1)) {</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The &lt;strong&gt;&lt;code&gt;defineProperty()&lt;/code&gt;&lt;/strong&gt; function provides a</span></td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * shortcut to defining a property that cannot be accidentally iterated across.</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">defineProperty</span>(<span class="pl-smi">proto</span>, <span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (proto) {</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(proto, name, {</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line">            configurable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line">            writable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line">            value<span class="pl-k">:</span> value</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Perform a deep copy of an object - also copies children so they&#39;re not</span></td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * going to be affected by changing original.</span></td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">_deepCopyObject</span>(<span class="pl-smi">target</span>) {</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> sources <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> _i <span class="pl-k">=</span> <span class="pl-c1">1</span>; _i <span class="pl-k">&lt;</span> <span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>; _i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line">        sources[_i <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">arguments</span>[_i];</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (target <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot convert undefined or null to object<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> to <span class="pl-k">=</span> <span class="pl-c1">Object</span>(target), hasOwnProperty <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">hasOwnProperty</span>;</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> source;</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (source <span class="pl-k">=</span> <span class="pl-smi">sources</span>.<span class="pl-c1">shift</span>()) {</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (source <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> source) {</td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">hasOwnProperty</span>.<span class="pl-c1">call</span>(source, key)) {</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> value <span class="pl-k">=</span> source[key];</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">_deepCopyObject</span>(to[key] <span class="pl-k">=</span> [], value);</td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">isPlainObject</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">_deepCopyObject</span>(to[key] <span class="pl-k">=</span> {}, value);</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line">                        to[key] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> to;</td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Shim to get the current milliseconds - on anything except old IE it&#39;ll use</span></td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Date.now() and save creating an object. If that doesn&#39;t exist then it&#39;ll</span></td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * create one that gets GC.</span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> _now <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-smi">now</span> <span class="pl-k">?</span> <span class="pl-c1">Date</span>.<span class="pl-smi">now</span> <span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Date</span>().<span class="pl-c1">getTime</span>();</td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Check whether a value belongs to an array</span></td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * https://jsperf.com/includes-vs-indexof-vs-while-loop/6</span></td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> <span class="pl-smi">array</span> The given array</span></td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> <span class="pl-smi">value</span> The given element to check if it is part of the array</span></td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> <span class="pl-en">{boolean}</span> True if it exists, false otherwise</span></td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">_inArray</span>(<span class="pl-smi">array</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (i <span class="pl-k">&lt;</span> <span class="pl-smi">array</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (array[i<span class="pl-k">++</span>] <span class="pl-k">===</span> value) {</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Convert an element or array-like element list into an array if needed.</span></td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">sanitizeElements</span>(<span class="pl-smi">elements</span>) {</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isNode</span>(elements)) {</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> [ elements ];</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> elements;</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">getValue</span>(<span class="pl-smi">args</span>) {</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, _args <span class="pl-k">=</span> <span class="pl-c1">arguments</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">_args</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _arg <span class="pl-k">=</span> _args[i];</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (_arg <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">&amp;&amp;</span> _arg <span class="pl-k">===</span> _arg) {</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> _arg;</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Add a single className to an Element.</span></td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">addClass</span>(<span class="pl-smi">element</span>, <span class="pl-smi">className</span>) {</td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (element <span class="pl-k">instanceof</span> <span class="pl-c1">Element</span>) {</td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">element</span>.<span class="pl-smi">classList</span>) {</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">element</span>.<span class="pl-smi">classList</span>.<span class="pl-c1">add</span>(className);</td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">removeClass</span>(element, className);</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">element</span>.<span class="pl-c1">className</span> <span class="pl-k">+=</span> (<span class="pl-smi">element</span>.<span class="pl-c1">className</span>.<span class="pl-c1">length</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> className;</td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Remove a single className from an Element.</span></td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">removeClass</span>(<span class="pl-smi">element</span>, <span class="pl-smi">className</span>) {</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (element <span class="pl-k">instanceof</span> <span class="pl-c1">Element</span>) {</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">element</span>.<span class="pl-smi">classList</span>) {</td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">element</span>.<span class="pl-smi">classList</span>.<span class="pl-c1">remove</span>(className);</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> TODO: Need some jsperf tests on performance - can we get rid of the regex and maybe use split / array manipulation?</span></td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">element</span>.<span class="pl-c1">className</span> <span class="pl-k">=</span> <span class="pl-smi">element</span>.<span class="pl-c1">className</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">replace</span>(<span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(^|<span class="pl-cce">\\</span>s)<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> className <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-cce">\\</span>s|$)<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>gi<span class="pl-pds">&quot;</span></span>), <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Actions that can be performed by passing a string instead of a propertiesMap.</span></td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Actions cannot be replaced if they are internal (hasOwnProperty is false</span></td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * but they still exist). Otherwise they can be replaced by users.</span></td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * All external method calls should be using actions rather than sub-calls</span></td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * of Velocity itself.</span></td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Actions</span> <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Used to register an action. This should never be called by users</span></td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * directly, instead it should be called via  an action:&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;code&gt;Velocity(&quot;registerAction&quot;, &quot;name&quot;, VelocityActionFn);&lt;/code&gt;</span></td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">registerAction</span>(<span class="pl-smi">args</span>, <span class="pl-smi">internal</span>) {</td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> name <span class="pl-k">=</span> args[<span class="pl-c1">0</span>], callback <span class="pl-k">=</span> args[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isString</span>(name)) {</td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;registerAction&#39; name to an invalid value:<span class="pl-pds">&quot;</span></span>, name);</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isFunction</span>(callback)) {</td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;registerAction&#39; callback to an invalid value:<span class="pl-pds">&quot;</span></span>, name, callback);</td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Actions</span>[name] <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">propertyIsEnumerable</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Actions</span>, name)) {</td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to override internal &#39;registerAction&#39; callback<span class="pl-pds">&quot;</span></span>, name);</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (internal <span class="pl-k">===</span> <span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">defineProperty</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Actions</span>, name, callback);</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Actions</span>[name] <span class="pl-k">=</span> callback;</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">registerAction</span> <span class="pl-k">=</span> registerAction;</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>registerAction<span class="pl-pds">&quot;</span></span>, registerAction ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;actions.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Default action.</span></td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * When the stop action is triggered, the elements&#39; currently active call is immediately stopped. The active call might have</span></td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * been applied to multiple elements, in which case all of the call&#39;s elements will be stopped. When an element</span></td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * is stopped, the next item in its animation queue is immediately triggered.</span></td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * An additional argument may be passed in to clear an element&#39;s remaining queued calls. Either true (which defaults to the &quot;fx&quot; queue)</span></td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * or a custom queue string can be passed in.</span></td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Note: The stop command runs prior to Velocity&#39;s Queueing phase since its behavior is intended to take effect *immediately*,</span></td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * regardless of the element&#39;s current queue state.</span></td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-en">{HTMLorSVGElement[]}</span> <span class="pl-smi">elements</span> The collection of HTML or SVG elements</span></td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-en">{StrictVelocityOptions}</span> <span class="pl-smi">The</span> strict Velocity options</span></td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-en">{Promise&lt;HTMLorSVGElement[]&gt;}</span> <span class="pl-smi">An</span> optional promise if the user uses promises</span></td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-en">{(value?: (HTMLorSVGElement[] | VelocityResult)) =&gt; void}</span> <span class="pl-smi">resolver</span> The resolve method of the promise</span></td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">defaultAction</span>(<span class="pl-smi">args</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">promiseHandler</span>, <span class="pl-smi">action</span>) {</td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: default is wrong, should be runSequence based, and needs all arguments</span></td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isString</span>(action) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Redirects</span>[action]) {</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> options <span class="pl-k">=</span> <span class="pl-en">isPlainObject</span>(args[<span class="pl-c1">0</span>]) <span class="pl-k">?</span> args[<span class="pl-c1">0</span>] <span class="pl-k">:</span> {}, opts_1 <span class="pl-k">=</span> <span class="pl-en">__assign</span>({}, options), durationOriginal_1 <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">options</span>.<span class="pl-smi">duration</span>), delayOriginal_1 <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">options</span>.<span class="pl-smi">delay</span>) <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> If the backwards option was passed in, reverse the element set so that elements animate from the last to the first. <span class="pl-c">*/</span></span>            <span class="pl-k">if</span> (<span class="pl-smi">opts_1</span>.<span class="pl-smi">backwards</span> <span class="pl-k">===</span> <span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line">                elements <span class="pl-k">=</span> <span class="pl-smi">elements</span>.<span class="pl-c1">reverse</span>();</td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Individually trigger the redirect for each element in the set to prevent users from having to handle iteration logic in their redirect. <span class="pl-c">*/</span></span>            <span class="pl-smi">elements</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">elementIndex</span>) {</td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> If the stagger option was passed in, successively delay each element by the stagger value (in ms). Retain the original delay value. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">parseFloat</span>(<span class="pl-smi">opts_1</span>.<span class="pl-smi">stagger</span>)) {</td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">opts_1</span>.<span class="pl-smi">delay</span> <span class="pl-k">=</span> delayOriginal_1 <span class="pl-k">+</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">opts_1</span>.<span class="pl-smi">stagger</span>) <span class="pl-k">*</span> elementIndex;</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">isFunction</span>(<span class="pl-smi">opts_1</span>.<span class="pl-smi">stagger</span>)) {</td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">opts_1</span>.<span class="pl-smi">delay</span> <span class="pl-k">=</span> delayOriginal_1 <span class="pl-k">+</span> <span class="pl-smi">opts_1</span>.<span class="pl-smi">stagger</span>.<span class="pl-c1">call</span>(element, elementIndex, <span class="pl-smi">elements</span>.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> If the drag option was passed in, successively increase/decrease (depending on the presense of opts.backwards)</span></td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 the duration of each element&#39;s animation, using floors to prevent producing very short durations. <span class="pl-c">*/</span></span>                <span class="pl-k">if</span> (<span class="pl-smi">opts_1</span>.<span class="pl-smi">drag</span>) {</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">/*</span> Default the duration of UI pack effects (callouts and transitions) to 1000ms instead of the usual default duration of 400ms. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">opts_1</span>.<span class="pl-smi">duration</span> <span class="pl-k">=</span> durationOriginal_1 <span class="pl-k">||</span> (<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(callout<span class="pl-k">|</span>transition)<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(action) <span class="pl-k">?</span> <span class="pl-c1">1e3</span> <span class="pl-k">:</span> <span class="pl-c1">DEFAULT_DURATION</span>);</td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">/*</span> For each element, take the greater duration of: A) animation completion percentage relative to the original duration,</span></td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                     B) 75% of the original duration, or C) a 200ms fallback (in case duration is already set to a low value).</span></td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                     The end result is a baseline of 75% of the redirect&#39;s duration that increases/decreases as the end of the element set is approached. <span class="pl-c">*/</span></span>                    <span class="pl-smi">opts_1</span>.<span class="pl-smi">duration</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">opts_1</span>.<span class="pl-smi">duration</span> <span class="pl-k">*</span> (<span class="pl-smi">opts_1</span>.<span class="pl-smi">backwards</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> elementIndex <span class="pl-k">/</span> <span class="pl-smi">elements</span>.<span class="pl-c1">length</span> <span class="pl-k">:</span> (elementIndex <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">/</span> <span class="pl-smi">elements</span>.<span class="pl-c1">length</span>), <span class="pl-smi">opts_1</span>.<span class="pl-smi">duration</span> <span class="pl-k">*</span> <span class="pl-c1">.75</span>, <span class="pl-c1">200</span>);</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Pass in the call&#39;s opts object so that the redirect can optionally extend it. It defaults to an empty object instead of null to</span></td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 reduce the opts checking logic required inside the redirect. <span class="pl-c">*/</span></span>                <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Redirects</span>[action].<span class="pl-c1">call</span>(element, element, opts_1, elementIndex, <span class="pl-smi">elements</span>.<span class="pl-c1">length</span>, elements, promiseHandler <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">promiseHandler</span>.<span class="pl-smi">_resolver</span>);</td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Since the animation logic resides within the redirect&#39;s own code, abort the remainder of this call.</span></td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             (The performance overhead up to this point is virtually non-existant.) <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Note: The jQuery call chain is kept intact by returning the complete element set. <span class="pl-c">*/</span></span>        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> abortError <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Velocity: First argument (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> action <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>) was not a property map, a known action, or a registered redirect. Aborting.<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (promiseHandler) {</td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">promiseHandler</span>.<span class="pl-en">_rejecter</span>(<span class="pl-k">new</span> <span class="pl-en">Error</span>(abortError));</td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-c1">window</span>.<span class="pl-smi">console</span>) {</td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">console</span>.<span class="pl-c1">log</span>(abortError);</td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>, defaultAction ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;actions.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Finish all animation.</span></td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Check if an animation should be finished, and if so we set the tweens to</span></td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * the final value for it, then call complete.</span></td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">checkAnimationShouldBeFinished</span>(<span class="pl-smi">animation</span>, <span class="pl-smi">queueName</span>, <span class="pl-smi">defaultQueue</span>) {</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">validateTweens</span>(animation);</td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (queueName <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">||</span> queueName <span class="pl-k">===</span> <span class="pl-en">getValue</span>(<span class="pl-smi">animation</span>.<span class="pl-smi">queue</span>, <span class="pl-smi">animation</span>.<span class="pl-c1">options</span>.<span class="pl-smi">queue</span>, defaultQueue)) {</td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-smi">animation</span>.<span class="pl-smi">_flags</span> <span class="pl-k">&amp;</span> <span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span> STARTED <span class="pl-c">*/</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Copied from tick.ts - ensure that the animation is completely</span></td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> valid and run begin() before complete().</span></td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> options <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-c1">options</span>;</td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> The begin callback is fired once per call, not once per</span></td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> element, and is passed the full raw DOM element set as both</span></td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> its context and its first argument.</span></td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (<span class="pl-smi">options</span>.<span class="pl-smi">_started</span><span class="pl-k">++</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">options</span>.<span class="pl-smi">_first</span> <span class="pl-k">=</span> animation;</td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-smi">options</span>.<span class="pl-smi">begin</span>) {</td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> Pass to an external fn with a try/catch block for optimisation</span></td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">callBegin</span>(animation);</td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> Only called once, even if reversed or repeated</span></td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-smi">options</span>.<span class="pl-smi">begin</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">animation</span>.<span class="pl-smi">_flags</span> <span class="pl-k">|=</span> <span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span> STARTED <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> property <span class="pl-k">in</span> <span class="pl-smi">animation</span>.<span class="pl-smi">tweens</span>) {</td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> tween_1 <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-smi">tweens</span>[property], pattern <span class="pl-k">=</span> <span class="pl-smi">tween_1</span>.<span class="pl-smi">pattern</span>;</td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> currentValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, i <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (pattern) {</td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> (;i <span class="pl-k">&lt;</span> <span class="pl-smi">pattern</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> endValue <span class="pl-k">=</span> <span class="pl-smi">tween_1</span>.<span class="pl-smi">end</span>[i];</td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code blob-code-inner js-file-line">                        currentValue <span class="pl-k">+=</span> endValue <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> pattern[i] <span class="pl-k">:</span> endValue;</td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">setPropertyValue</span>(<span class="pl-smi">animation</span>.<span class="pl-smi">element</span>, property, currentValue, <span class="pl-smi">tween_1</span>.<span class="pl-smi">fn</span>);</td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">completeCall</span>(animation);</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * When the finish action is triggered, the elements&#39; currently active call is</span></td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * immediately finished. When an element is finished, the next item in its</span></td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * animation queue is immediately triggered. If passed via a chained call</span></td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * then this will only target the animations in that call, and not the</span></td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * elements linked to it.</span></td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * A queue name may be passed in to specify that only animations on the</span></td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * named queue are finished. The default queue is named &quot;&quot;. In addition the</span></td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * value of `false` is allowed for the queue name.</span></td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * An final argument may be passed in to clear an element&#39;s remaining queued</span></td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * calls. This may only be the value `true`.</span></td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">finish</span>(<span class="pl-smi">args</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">promiseHandler</span>) {</td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> queueName <span class="pl-k">=</span> <span class="pl-en">validateQueue</span>(args[<span class="pl-c1">0</span>], <span class="pl-c1">true</span>), defaultQueue <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">queue</span>, finishAll <span class="pl-k">=</span> args[queueName <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>] <span class="pl-k">===</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(elements) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span>) {</td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, animations <span class="pl-k">=</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">animations</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">checkAnimationShouldBeFinished</span>(animations[i], queueName, defaultQueue);</td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span>, nextCall <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>) {</td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">validateTweens</span>(activeCall);</td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span>; activeCall <span class="pl-k">&amp;&amp;</span> (finishAll <span class="pl-k">||</span> activeCall <span class="pl-k">!==</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>); activeCall <span class="pl-k">=</span> nextCall <span class="pl-k">||</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>) {</td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code blob-code-inner js-file-line">                nextCall <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_next</span>;</td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>elements <span class="pl-k">||</span> <span class="pl-en">_inArray</span>(elements, <span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>)) {</td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">checkAnimationShouldBeFinished</span>(activeCall, queueName, defaultQueue);</td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (promiseHandler) {</td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(elements) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">then</span>) {</td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">elements</span>.<span class="pl-en">then</span>(<span class="pl-smi">promiseHandler</span>.<span class="pl-smi">_resolver</span>);</td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">promiseHandler</span>.<span class="pl-en">_resolver</span>(elements);</td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>finish<span class="pl-pds">&quot;</span></span>, finish ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;actions.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Get or set a value from one or more running animations.</span></td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Used to map getters for the various AnimationFlags.</span></td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> animationFlags <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code blob-code-inner js-file-line">        isExpanded<span class="pl-k">:</span> <span class="pl-c1">1</span> <span class="pl-c"><span class="pl-c">/*</span> EXPANDED <span class="pl-c">*/</span></span> ,</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code blob-code-inner js-file-line">        isReady<span class="pl-k">:</span> <span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span> READY <span class="pl-c">*/</span></span> ,</td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code blob-code-inner js-file-line">        isStarted<span class="pl-k">:</span> <span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span> STARTED <span class="pl-c">*/</span></span> ,</td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code blob-code-inner js-file-line">        isStopped<span class="pl-k">:</span> <span class="pl-c1">8</span> <span class="pl-c"><span class="pl-c">/*</span> STOPPED <span class="pl-c">*/</span></span> ,</td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code blob-code-inner js-file-line">        isPaused<span class="pl-k">:</span> <span class="pl-c1">16</span> <span class="pl-c"><span class="pl-c">/*</span> PAUSED <span class="pl-c">*/</span></span> ,</td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code blob-code-inner js-file-line">        isSync<span class="pl-k">:</span> <span class="pl-c1">32</span> <span class="pl-c"><span class="pl-c">/*</span> SYNC <span class="pl-c">*/</span></span> ,</td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code blob-code-inner js-file-line">        isReverse<span class="pl-k">:</span> <span class="pl-c1">64</span></td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">/*</span> REVERSE <span class="pl-c">*/</span></span>    };</td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Get or set an option or running AnimationCall data value. If there is no</span></td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * value passed then it will get, otherwise we will set.</span></td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * NOTE: When using &quot;get&quot; this will not touch the Promise as it is never</span></td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * returned to the user.</span></td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">option</span>(<span class="pl-smi">args</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">promiseHandler</span>, <span class="pl-smi">action</span>) {</td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> key <span class="pl-k">=</span> args[<span class="pl-c1">0</span>], queue <span class="pl-k">=</span> <span class="pl-smi">action</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>) <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-smi">action</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">.</span><span class="pl-k">*</span><span class="pl-cce">\.</span><span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">:</span> <span class="pl-c1">undefined</span>, queueName <span class="pl-k">=</span> queue <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-c1">false</span> <span class="pl-k">:</span> <span class="pl-en">validateQueue</span>(queue, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> animations, value <span class="pl-k">=</span> args[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>key) {</td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Cannot access a non-existant key!<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> If we&#39;re chaining the return value from Velocity then we are only</span></td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> interested in the values related to that call</span></td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(elements) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span>) {</td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code blob-code-inner js-file-line">            animations <span class="pl-k">=</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span>;</td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code blob-code-inner js-file-line">            animations <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span>; activeCall; activeCall <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_next</span>) {</td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">elements</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>) <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-en">getValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">queue</span>, <span class="pl-smi">activeCall</span>.<span class="pl-c1">options</span>.<span class="pl-smi">queue</span>) <span class="pl-k">===</span> queueName) {</td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">animations</span>.<span class="pl-c1">push</span>(activeCall);</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> If we&#39;re dealing with multiple elements that are pointing at a</span></td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> single running animation, then instead treat them as a single</span></td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> animation.</span></td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-smi">elements</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">animations</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span>, options <span class="pl-k">=</span> animations[<span class="pl-c1">0</span>].<span class="pl-c1">options</span>;</td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">while</span> (i <span class="pl-k">&lt;</span> <span class="pl-smi">animations</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (animations[i<span class="pl-k">++</span>].<span class="pl-c1">options</span> <span class="pl-k">!==</span> options) {</td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code blob-code-inner js-file-line">                        options <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> TODO: this needs to check that they&#39;re actually a sync:true animation to merge the results, otherwise the individual values may be different</span></td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (options) {</td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code blob-code-inner js-file-line">                    animations <span class="pl-k">=</span> [ animations[<span class="pl-c1">0</span>] ];</td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> GET</span></td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> result <span class="pl-k">=</span> [], flag <span class="pl-k">=</span> animationFlags[key];</td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">animations</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (flag <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> A normal key to get.</span></td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">result</span>.<span class="pl-c1">push</span>(<span class="pl-en">getValue</span>(animations[i][key], animations[i].<span class="pl-c1">options</span>[key]));</td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> A flag that we&#39;re checking against.</span></td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">result</span>.<span class="pl-c1">push</span>((animations[i].<span class="pl-smi">_flags</span> <span class="pl-k">&amp;</span> flag) <span class="pl-k">===</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">elements</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">animations</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> If only a single animation is found and we&#39;re only targetting a</span></td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> single element, then return the value directly</span></td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> result[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> result;</td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> SET</span></td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> isPercentComplete;</td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">switch</span> (key) {</td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>cache<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">=</span> <span class="pl-en">validateCache</span>(value);</td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>begin<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">=</span> <span class="pl-en">validateBegin</span>(value);</td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>complete<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">=</span> <span class="pl-en">validateComplete</span>(value);</td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>delay<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">=</span> <span class="pl-en">validateDelay</span>(value);</td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>duration<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">=</span> <span class="pl-en">validateDuration</span>(value);</td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>fpsLimit<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">=</span> <span class="pl-en">validateFpsLimit</span>(value);</td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>loop<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">=</span> <span class="pl-en">validateLoop</span>(value);</td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>percentComplete<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code blob-code-inner js-file-line">            isPercentComplete <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(value);</td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>repeat<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>repeatAgain<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">=</span> <span class="pl-en">validateRepeat</span>(value);</td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">default</span>:</td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (key[<span class="pl-c1">0</span>] <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> num <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(value);</td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">==</span> num) {</td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code blob-code-inner js-file-line">                    value <span class="pl-k">=</span> num;</td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> deliberate fallthrough</span></td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code blob-code-inner js-file-line">                      <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>queue<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>promise<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>promiseRejectEmpty<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>easing<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>started<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set a read-only key:<span class="pl-pds">&quot;</span></span>, key);</td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">||</span> value <span class="pl-k">!==</span> value) {</td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set an invalid value:<span class="pl-pds">&quot;</span></span>, key, <span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span>, value, <span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> args[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">animations</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> animation <span class="pl-k">=</span> animations[i];</td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isPercentComplete) {</td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">animation</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span> <span class="pl-k">-</span> <span class="pl-en">getValue</span>(<span class="pl-smi">animation</span>.<span class="pl-smi">duration</span>, <span class="pl-smi">animation</span>.<span class="pl-c1">options</span>.<span class="pl-smi">duration</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">duration</span>) <span class="pl-k">*</span> value;</td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code blob-code-inner js-file-line">                animation[key] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (promiseHandler) {</td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(elements) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">then</span>) {</td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">elements</span>.<span class="pl-en">then</span>(<span class="pl-smi">promiseHandler</span>.<span class="pl-smi">_resolver</span>);</td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">promiseHandler</span>.<span class="pl-en">_resolver</span>(elements);</td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>option<span class="pl-pds">&quot;</span></span>, option ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;actions.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Pause and resume animation.</span></td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Check if an animation should be paused / resumed.</span></td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">checkAnimation</span>(<span class="pl-smi">animation</span>, <span class="pl-smi">queueName</span>, <span class="pl-smi">defaultQueue</span>, <span class="pl-smi">isPaused</span>) {</td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (queueName <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">||</span> queueName <span class="pl-k">===</span> <span class="pl-en">getValue</span>(<span class="pl-smi">animation</span>.<span class="pl-smi">queue</span>, <span class="pl-smi">animation</span>.<span class="pl-c1">options</span>.<span class="pl-smi">queue</span>, defaultQueue)) {</td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isPaused) {</td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">animation</span>.<span class="pl-smi">_flags</span> <span class="pl-k">|=</span> <span class="pl-c1">16</span> <span class="pl-c"><span class="pl-c">/*</span> PAUSED <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">animation</span>.<span class="pl-smi">_flags</span> <span class="pl-k">&amp;=</span> <span class="pl-k">~</span><span class="pl-c1">16</span> <span class="pl-c"><span class="pl-c">/*</span> PAUSED <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Pause and Resume are call-wide (not on a per element basis). Thus, calling pause or resume on a</span></td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * single element will cause any calls that contain tweens for that element to be paused/resumed</span></td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * as well.</span></td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pauseResume</span>(<span class="pl-smi">args</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">promiseHandler</span>, <span class="pl-smi">action</span>) {</td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> isPaused <span class="pl-k">=</span> <span class="pl-smi">action</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pause<span class="pl-pds">&quot;</span></span>) <span class="pl-k">===</span> <span class="pl-c1">0</span>, queue <span class="pl-k">=</span> <span class="pl-smi">action</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>) <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-smi">action</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">.</span><span class="pl-k">*</span><span class="pl-cce">\.</span><span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">:</span> <span class="pl-c1">undefined</span>, queueName <span class="pl-k">=</span> queue <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-c1">false</span> <span class="pl-k">:</span> <span class="pl-en">validateQueue</span>(args[<span class="pl-c1">0</span>]), defaultQueue <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">queue</span>;</td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(elements) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span>) {</td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, animations <span class="pl-k">=</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">animations</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">checkAnimation</span>(animations[i], queueName, defaultQueue, isPaused);</td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span>;</td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (activeCall) {</td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>elements <span class="pl-k">||</span> <span class="pl-en">_inArray</span>(elements, <span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>)) {</td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">checkAnimation</span>(activeCall, queueName, defaultQueue, isPaused);</td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code blob-code-inner js-file-line">                activeCall <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_next</span>;</td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (promiseHandler) {</td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(elements) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">then</span>) {</td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">elements</span>.<span class="pl-en">then</span>(<span class="pl-smi">promiseHandler</span>.<span class="pl-smi">_resolver</span>);</td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">promiseHandler</span>.<span class="pl-en">_resolver</span>(elements);</td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>pause<span class="pl-pds">&quot;</span></span>, pauseResume ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>resume<span class="pl-pds">&quot;</span></span>, pauseResume ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;actions.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Actions that can be performed by passing a string instead of a propertiesMap.</span></td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>reverse<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">args</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">promiseHandler</span>, <span class="pl-smi">action</span>) {</td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: Code needs to split out before here - but this is needed to prevent it being overridden</span></td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">SyntaxError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: The &#39;reverse&#39; action is private.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code blob-code-inner js-file-line">    } ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;actions.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Stop animation.</span></td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Check if an animation should be stopped, and if so then set the STOPPED</span></td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * flag on it, then call complete.</span></td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">checkAnimationShouldBeStopped</span>(<span class="pl-smi">animation</span>, <span class="pl-smi">queueName</span>, <span class="pl-smi">defaultQueue</span>) {</td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">validateTweens</span>(animation);</td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (queueName <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">||</span> queueName <span class="pl-k">===</span> <span class="pl-en">getValue</span>(<span class="pl-smi">animation</span>.<span class="pl-smi">queue</span>, <span class="pl-smi">animation</span>.<span class="pl-c1">options</span>.<span class="pl-smi">queue</span>, defaultQueue)) {</td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">animation</span>.<span class="pl-smi">_flags</span> <span class="pl-k">|=</span> <span class="pl-c1">8</span> <span class="pl-c"><span class="pl-c">/*</span> STOPPED <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">completeCall</span>(animation);</td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * When the stop action is triggered, the elements&#39; currently active call is</span></td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * immediately stopped. When an element is stopped, the next item in its</span></td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * animation queue is immediately triggered. If passed via a chained call</span></td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * then this will only target the animations in that call, and not the</span></td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * elements linked to it.</span></td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * A queue name may be passed in to specify that only animations on the</span></td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * named queue are stopped. The default queue is named &quot;&quot;. In addition the</span></td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * value of `false` is allowed for the queue name.</span></td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * An final argument may be passed in to clear an element&#39;s remaining queued</span></td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * calls. This may only be the value `true`.</span></td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Note: The stop command runs prior to Velocity&#39;s Queueing phase since its</span></td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * behavior is intended to take effect *immediately*, regardless of the</span></td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * element&#39;s current queue state.</span></td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">stop</span>(<span class="pl-smi">args</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">promiseHandler</span>, <span class="pl-smi">action</span>) {</td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> queueName <span class="pl-k">=</span> <span class="pl-en">validateQueue</span>(args[<span class="pl-c1">0</span>], <span class="pl-c1">true</span>), defaultQueue <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">queue</span>, finishAll <span class="pl-k">=</span> args[queueName <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>] <span class="pl-k">===</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(elements) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span>) {</td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, animations <span class="pl-k">=</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">animations</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">checkAnimationShouldBeStopped</span>(animations[i], queueName, defaultQueue);</td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span>, nextCall <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>) {</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">validateTweens</span>(activeCall);</td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span>; activeCall <span class="pl-k">&amp;&amp;</span> (finishAll <span class="pl-k">||</span> activeCall <span class="pl-k">!==</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>); activeCall <span class="pl-k">=</span> nextCall <span class="pl-k">||</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>) {</td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code blob-code-inner js-file-line">                nextCall <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_next</span>;</td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>elements <span class="pl-k">||</span> <span class="pl-en">_inArray</span>(elements, <span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>)) {</td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">checkAnimationShouldBeStopped</span>(activeCall, queueName, defaultQueue);</td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (promiseHandler) {</td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(elements) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">then</span>) {</td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">elements</span>.<span class="pl-en">then</span>(<span class="pl-smi">promiseHandler</span>.<span class="pl-smi">_resolver</span>);</td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">promiseHandler</span>.<span class="pl-en">_resolver</span>(elements);</td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>stop<span class="pl-pds">&quot;</span></span>, stop ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;actions.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Get or set a property from one or more elements.</span></td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">style</span>(<span class="pl-smi">elements</span>, <span class="pl-smi">property</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">styleAction</span>([ property, value ], elements);</td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">style</span> <span class="pl-k">=</span> style;</td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Get or set a style of Nomralised property value on one or more elements.</span></td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * If there is no value passed then it will get, otherwise we will set.</span></td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * NOTE: When using &quot;get&quot; this will not touch the Promise as it is never</span></td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * returned to the user.</span></td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * This can fail to set, and will reject the Promise if it does so.</span></td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Velocity(elements, &quot;style&quot;, &quot;property&quot;, &quot;value&quot;) =&gt; elements;</span></td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Velocity(elements, &quot;style&quot;, {&quot;property&quot;: &quot;value&quot;, ...}) =&gt; elements;</span></td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Velocity(element, &quot;style&quot;, &quot;property&quot;) =&gt; &quot;value&quot;;</span></td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Velocity(elements, &quot;style&quot;, &quot;property&quot;) =&gt; [&quot;value&quot;, ...];</span></td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">styleAction</span>(<span class="pl-smi">args</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">promiseHandler</span>, <span class="pl-smi">action</span>) {</td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> property <span class="pl-k">=</span> args[<span class="pl-c1">0</span>], value <span class="pl-k">=</span> args[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>property) {</td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Cannot access a non-existant property!<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> GET</span></td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">isPlainObject</span>(property)) {</td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> If only a single animation is found and we&#39;re only targetting a</span></td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> single element, then return the value directly</span></td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">elements</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">fixColors</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(elements[<span class="pl-c1">0</span>], property));</td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> result <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">elements</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">result</span>.<span class="pl-c1">push</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">fixColors</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(elements[i], property)));</td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> result;</td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> SET</span></td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> error;</td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isPlainObject</span>(property)) {</td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> propertyName <span class="pl-k">in</span> property) {</td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">elements</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> value_1 <span class="pl-k">=</span> property[propertyName];</td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-en">isString</span>(value_1) <span class="pl-k">||</span> <span class="pl-en">isNumber</span>(value_1)) {</td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">setPropertyValue</span>(elements[i], propertyName, property[propertyName]);</td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code blob-code-inner js-file-line">                        error <span class="pl-k">=</span> (error <span class="pl-k">?</span> error <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Cannot set a property &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> propertyName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39; to an unknown type: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">typeof</span> value_1;</td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Cannot set a property &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> propertyName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39; to an unknown type:<span class="pl-pds">&quot;</span></span>, value_1);</td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">isString</span>(value) <span class="pl-k">||</span> <span class="pl-en">isNumber</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">elements</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">setPropertyValue</span>(elements[i], property, <span class="pl-c1">String</span>(value));</td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code blob-code-inner js-file-line">            error <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Cannot set a property &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> property <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39; to an unknown type: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">typeof</span> value;</td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Cannot set a property &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> property <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39; to an unknown type:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (promiseHandler) {</td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (error) {</td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">promiseHandler</span>.<span class="pl-en">_rejecter</span>(error);</td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(elements) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">elements</span>.<span class="pl-smi">then</span>) {</td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">elements</span>.<span class="pl-en">then</span>(<span class="pl-smi">promiseHandler</span>.<span class="pl-smi">_resolver</span>);</td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">promiseHandler</span>.<span class="pl-en">_resolver</span>(elements);</td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>, styleAction ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;actions.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Get or set a property from one or more elements.</span></td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">tween</span>(<span class="pl-smi">elements</span>, <span class="pl-smi">percentComplete</span>, <span class="pl-smi">properties</span>, <span class="pl-smi">property</span>, <span class="pl-smi">easing</span>) {</td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">tweenAction</span>(<span class="pl-c1">arguments</span>, elements);</td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">tween</span> <span class="pl-k">=</span> tween;</td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">tweenAction</span>(<span class="pl-smi">args</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">promiseHandler</span>, <span class="pl-smi">action</span>) {</td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> requireForcefeeding;</td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>elements) {</td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">args</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">console</span>.<span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Velocity(&lt;element&gt;, &quot;tween&quot;, percentComplete, property, end | [end, &lt;easing&gt;, &lt;start&gt;], &lt;easing&gt;) =&gt; value<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Velocity(&lt;element&gt;, &quot;tween&quot;, percentComplete, {property: end | [end, &lt;easing&gt;, &lt;start&gt;], ...}, &lt;easing&gt;) =&gt; {property: value, ...}<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code blob-code-inner js-file-line">            elements <span class="pl-k">=</span> [ <span class="pl-c1">document</span>.<span class="pl-c1">body</span> ];</td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code blob-code-inner js-file-line">            requireForcefeeding <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">elements</span>.<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> TODO: Allow more than a single element to return an array of results</span></td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Cannot tween more than one element!<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> percentComplete <span class="pl-k">=</span> args[<span class="pl-c1">0</span>], fakeAnimation <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code blob-code-inner js-file-line">            elements<span class="pl-k">:</span> elements,</td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code blob-code-inner js-file-line">            element<span class="pl-k">:</span> elements[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code blob-code-inner js-file-line">            queue<span class="pl-k">:</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code blob-code-inner js-file-line">            options<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code blob-code-inner js-file-line">                duration<span class="pl-k">:</span> <span class="pl-c1">1e3</span></td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code blob-code-inner js-file-line">            tweens<span class="pl-k">:</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code blob-code-inner js-file-line">        }, result <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> properties <span class="pl-k">=</span> args[<span class="pl-c1">1</span>], singleResult, easing <span class="pl-k">=</span> args[<span class="pl-c1">2</span>], count <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isString</span>(args[<span class="pl-c1">1</span>])) {</td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code blob-code-inner js-file-line">            singleResult <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code blob-code-inner js-file-line">            properties <span class="pl-k">=</span> (_a <span class="pl-k">=</span> {}, _a[args[<span class="pl-c1">1</span>]] <span class="pl-k">=</span> args[<span class="pl-c1">2</span>], _a);</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code blob-code-inner js-file-line">            easing <span class="pl-k">=</span> args[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(args[<span class="pl-c1">1</span>])) {</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code blob-code-inner js-file-line">            singleResult <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code blob-code-inner js-file-line">            properties <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code blob-code-inner js-file-line">                tween<span class="pl-k">:</span> args[<span class="pl-c1">1</span>]</td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code blob-code-inner js-file-line">            easing <span class="pl-k">=</span> args[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isNumber</span>(percentComplete) <span class="pl-k">||</span> percentComplete <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> percentComplete <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Must tween a percentage from 0 to 1!<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isPlainObject</span>(properties)) {</td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Cannot tween an invalid property!<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (requireForcefeeding) {</td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> property <span class="pl-k">in</span> properties) {</td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">properties</span>.<span class="pl-en">hasOwnProperty</span>(property) <span class="pl-k">&amp;&amp;</span> (<span class="pl-k">!</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(properties[property]) <span class="pl-k">||</span> properties[property].<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>)) {</td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: When not supplying an element you must force-feed values: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> property);</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> activeEasing <span class="pl-k">=</span> <span class="pl-en">validateEasing</span>(<span class="pl-en">getValue</span>(easing, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">easing</span>), <span class="pl-c1">1e3</span>);</td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">expandProperties</span>(fakeAnimation, properties);</td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> property <span class="pl-k">in</span> <span class="pl-smi">fakeAnimation</span>.<span class="pl-smi">tweens</span>) {</td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> For every element, iterate through each property.</span></td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> tween_2 <span class="pl-k">=</span> <span class="pl-smi">fakeAnimation</span>.<span class="pl-smi">tweens</span>[property], easing_1 <span class="pl-k">=</span> <span class="pl-smi">tween_2</span>.<span class="pl-smi">easing</span> <span class="pl-k">||</span> activeEasing, pattern <span class="pl-k">=</span> <span class="pl-smi">tween_2</span>.<span class="pl-smi">pattern</span>;</td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> currentValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code blob-code-inner js-file-line">            count<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (pattern) {</td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">pattern</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> startValue <span class="pl-k">=</span> <span class="pl-smi">tween_2</span>.<span class="pl-c1">start</span>[i];</td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (startValue <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code blob-code-inner js-file-line">                        currentValue <span class="pl-k">+=</span> pattern[i];</td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> result_1 <span class="pl-k">=</span> <span class="pl-en">easing_1</span>(percentComplete, startValue, <span class="pl-smi">tween_2</span>.<span class="pl-smi">end</span>[i], property);</td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code blob-code-inner js-file-line">                        currentValue <span class="pl-k">+=</span> pattern[i] <span class="pl-k">===</span> <span class="pl-c1">true</span> <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(result_1) <span class="pl-k">:</span> result_1;</td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code blob-code-inner js-file-line">            result[property] <span class="pl-k">=</span> currentValue;</td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (singleResult <span class="pl-k">&amp;&amp;</span> count <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> property <span class="pl-k">in</span> result) {</td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">result</span>.<span class="pl-en">hasOwnProperty</span>(property)) {</td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> result[property];</td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> result;</td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> _a;</td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>tween<span class="pl-pds">&quot;</span></span>, tweenAction ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="LC947" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Container for page-wide Velocity state data.</span></td>
      </tr>
      <tr>
        <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="LC948" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="LC949" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> State;</td>
      </tr>
      <tr>
        <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="LC950" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-smi">State</span>) {</td>
      </tr>
      <tr>
        <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="LC951" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="LC952" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Detect if this is a NodeJS or web browser</span></td>
      </tr>
      <tr>
        <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="LC953" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="LC954" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">isClient</span> <span class="pl-k">=</span> <span class="pl-c1">window</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">window</span> <span class="pl-k">===</span> <span class="pl-c1">window</span>.<span class="pl-smi">window</span>, </td>
      </tr>
      <tr>
        <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="LC955" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="LC956" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Detect mobile devices to determine if mobileHA should be turned</span></td>
      </tr>
      <tr>
        <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="LC957" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * on.</span></td>
      </tr>
      <tr>
        <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="LC958" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="LC959" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">isMobile</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">isClient</span> <span class="pl-k">&amp;&amp;</span><span class="pl-sr"> <span class="pl-pds">/</span>Android<span class="pl-k">|</span>webOS<span class="pl-k">|</span>iPhone<span class="pl-k">|</span>iPad<span class="pl-k">|</span>iPod<span class="pl-k">|</span>BlackBerry<span class="pl-k">|</span>IEMobile<span class="pl-k">|</span>Opera Mini<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>), </td>
      </tr>
      <tr>
        <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="LC960" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="LC961" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * The mobileHA option&#39;s behavior changes on older Android devices</span></td>
      </tr>
      <tr>
        <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="LC962" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * (Gingerbread, versions 2.3.3-2.3.7).</span></td>
      </tr>
      <tr>
        <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="LC963" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="LC964" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">isAndroid</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">isClient</span> <span class="pl-k">&amp;&amp;</span><span class="pl-sr"> <span class="pl-pds">/</span>Android<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>), </td>
      </tr>
      <tr>
        <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="LC965" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="LC966" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * The mobileHA option&#39;s behavior changes on older Android devices</span></td>
      </tr>
      <tr>
        <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="LC967" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * (Gingerbread, versions 2.3.3-2.3.7).</span></td>
      </tr>
      <tr>
        <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="LC968" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="LC969" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">isGingerbread</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">isClient</span> <span class="pl-k">&amp;&amp;</span><span class="pl-sr"> <span class="pl-pds">/</span>Android 2<span class="pl-cce">\.</span>3<span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-c1">3-7</span>]</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>), </td>
      </tr>
      <tr>
        <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="LC970" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="LC971" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Chrome browser</span></td>
      </tr>
      <tr>
        <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="LC972" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="LC973" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">isChrome</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">isClient</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">window</span>.<span class="pl-smi">chrome</span>, </td>
      </tr>
      <tr>
        <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="LC974" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="LC975" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Firefox browser</span></td>
      </tr>
      <tr>
        <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="LC976" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="LC977" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">isFirefox</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">isClient</span> <span class="pl-k">&amp;&amp;</span><span class="pl-sr"> <span class="pl-pds">/</span>Firefox<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>), </td>
      </tr>
      <tr>
        <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="LC978" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="LC979" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Create a cached element for re-use when checking for CSS property</span></td>
      </tr>
      <tr>
        <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="LC980" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * prefixes.</span></td>
      </tr>
      <tr>
        <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="LC981" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="LC982" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">prefixElement</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">isClient</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>), </td>
      </tr>
      <tr>
        <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="LC983" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="LC984" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Retrieve the appropriate scroll anchor and property name for the</span></td>
      </tr>
      <tr>
        <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="LC985" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * browser: https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY</span></td>
      </tr>
      <tr>
        <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="LC986" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="LC987" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">windowScrollAnchor</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">isClient</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">window</span>.<span class="pl-c1">pageYOffset</span> <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>, </td>
      </tr>
      <tr>
        <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="LC988" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="LC989" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Cache the anchor used for animating window scrolling.</span></td>
      </tr>
      <tr>
        <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="LC990" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="LC991" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">scrollAnchor</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">windowScrollAnchor</span> <span class="pl-k">?</span> <span class="pl-c1">window</span> <span class="pl-k">:</span> <span class="pl-k">!</span><span class="pl-smi">State</span>.<span class="pl-smi">isClient</span> <span class="pl-k">||</span> <span class="pl-c1">document</span>.<span class="pl-c1">documentElement</span> <span class="pl-k">||</span> <span class="pl-c1">document</span>.<span class="pl-c1">body</span>.<span class="pl-c1">parentNode</span> <span class="pl-k">||</span> <span class="pl-c1">document</span>.<span class="pl-c1">body</span>, </td>
      </tr>
      <tr>
        <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="LC992" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="LC993" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Cache the browser-specific property names associated with the</span></td>
      </tr>
      <tr>
        <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="LC994" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * scroll anchor.</span></td>
      </tr>
      <tr>
        <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="LC995" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="LC996" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">scrollPropertyLeft</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">windowScrollAnchor</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>pageXOffset<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>scrollLeft<span class="pl-pds">&quot;</span></span>, </td>
      </tr>
      <tr>
        <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="LC997" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="LC998" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Cache the browser-specific property names associated with the</span></td>
      </tr>
      <tr>
        <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="LC999" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * scroll anchor.</span></td>
      </tr>
      <tr>
        <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="LC1000" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="LC1001" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">scrollPropertyTop</span> <span class="pl-k">=</span> <span class="pl-smi">State</span>.<span class="pl-smi">windowScrollAnchor</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>pageYOffset<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>scrollTop<span class="pl-pds">&quot;</span></span>, </td>
      </tr>
      <tr>
        <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="LC1002" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="LC1003" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * The className we add / remove when animating.</span></td>
      </tr>
      <tr>
        <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="LC1004" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="LC1005" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-c1">className</span> <span class="pl-k">=</span> <span class="pl-c1">CLASSNAME</span>, </td>
      </tr>
      <tr>
        <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="LC1006" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="LC1007" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Keep track of whether our RAF tick is running.</span></td>
      </tr>
      <tr>
        <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="LC1008" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="LC1009" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">State</span>.<span class="pl-smi">isTicking</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="LC1010" class="blob-code blob-code-inner js-file-line">    })(State <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="LC1011" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="LC1012" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="LC1013" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;../state.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="LC1014" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="LC1015" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="LC1016" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="LC1017" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="LC1018" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="LC1019" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="LC1020" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="LC1021" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="LC1022" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CSS</span>;</td>
      </tr>
      <tr>
        <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="LC1023" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-c1">CSS</span>) {</td>
      </tr>
      <tr>
        <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="LC1024" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="LC1025" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Cache every camelCase match to avoid repeating lookups.</span></td>
      </tr>
      <tr>
        <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="LC1026" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="LC1027" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> cache <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="LC1028" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="LC1029" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Camelcase a property name into its JavaScript notation (e.g.</span></td>
      </tr>
      <tr>
        <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="LC1030" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * &quot;background-color&quot; ==&gt; &quot;backgroundColor&quot;). Camelcasing is used to</span></td>
      </tr>
      <tr>
        <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="LC1031" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * normalize property names between and across calls.</span></td>
      </tr>
      <tr>
        <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="LC1032" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span>        <span class="pl-k">function</span> <span class="pl-en">camelCase</span>(<span class="pl-smi">property</span>) {</td>
      </tr>
      <tr>
        <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="LC1033" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fixed <span class="pl-k">=</span> cache[property];</td>
      </tr>
      <tr>
        <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="LC1034" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (fixed) {</td>
      </tr>
      <tr>
        <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="LC1035" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> fixed;</td>
      </tr>
      <tr>
        <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="LC1036" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="LC1037" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> cache[property] <span class="pl-k">=</span> <span class="pl-smi">property</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>-(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span>)<span class="pl-pds">/</span>g</span>, <span class="pl-k">function</span>(<span class="pl-smi">$</span>, <span class="pl-smi">letter</span>) {</td>
      </tr>
      <tr>
        <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="LC1038" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-smi">letter</span>.<span class="pl-c1">toUpperCase</span>();</td>
      </tr>
      <tr>
        <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="LC1039" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="LC1040" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="LC1041" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">CSS</span>.<span class="pl-smi">camelCase</span> <span class="pl-k">=</span> camelCase;</td>
      </tr>
      <tr>
        <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="LC1042" class="blob-code blob-code-inner js-file-line">    })(<span class="pl-c1">CSS</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="LC1043" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="LC1044" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="LC1045" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="LC1046" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="LC1047" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="LC1048" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="LC1049" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="LC1050" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="LC1051" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="LC1052" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CSS</span>;</td>
      </tr>
      <tr>
        <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="LC1053" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-c1">CSS</span>) {</td>
      </tr>
      <tr>
        <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="LC1054" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="LC1055" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * This is the list of color names -&gt; rgb values. The object is in here so</span></td>
      </tr>
      <tr>
        <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="LC1056" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * that the actual name conversion can be in a separate file and not</span></td>
      </tr>
      <tr>
        <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="LC1057" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * included for custom builds.</span></td>
      </tr>
      <tr>
        <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="LC1058" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="LC1059" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">CSS</span>.<span class="pl-smi">ColorNames</span> <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="LC1060" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="LC1061" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Convert a hex list to an rgba value. Designed to be used in replace.</span></td>
      </tr>
      <tr>
        <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="LC1062" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span>        <span class="pl-k">function</span> <span class="pl-en">makeRGBA</span>(<span class="pl-smi">ignore</span>, <span class="pl-smi">r</span>, <span class="pl-smi">g</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="LC1063" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">parseInt</span>(r, <span class="pl-c1">16</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">parseInt</span>(g, <span class="pl-c1">16</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">parseInt</span>(b, <span class="pl-c1">16</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,1)<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="LC1064" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="LC1065" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> rxColor6 <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>#(<span class="pl-c1">[<span class="pl-c1">a-f</span><span class="pl-c1">\d</span>]</span><span class="pl-k">{2}</span>)(<span class="pl-c1">[<span class="pl-c1">a-f</span><span class="pl-c1">\d</span>]</span><span class="pl-k">{2}</span>)(<span class="pl-c1">[<span class="pl-c1">a-f</span><span class="pl-c1">\d</span>]</span><span class="pl-k">{2}</span>)<span class="pl-pds">/</span>gi</span>, rxColor3 <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>#(<span class="pl-c1">[<span class="pl-c1">a-f</span><span class="pl-c1">\d</span>]</span>)(<span class="pl-c1">[<span class="pl-c1">a-f</span><span class="pl-c1">\d</span>]</span>)(<span class="pl-c1">[<span class="pl-c1">a-f</span><span class="pl-c1">\d</span>]</span>)<span class="pl-pds">/</span>gi</span>, rxColorName <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>(rgba<span class="pl-k">?</span><span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>)<span class="pl-k">?</span>(<span class="pl-k">\b</span><span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span><span class="pl-k">\b</span>)<span class="pl-pds">/</span>g</span>, rxRGB <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>rgb(a<span class="pl-k">?</span>)<span class="pl-cce">\(</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\)</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-pds">/</span>gi</span>, rxSpaces <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>;</td>
      </tr>
      <tr>
        <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="LC1066" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="LC1067" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Replace any css colour name with its rgba() value. It is possible to use</span></td>
      </tr>
      <tr>
        <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="LC1068" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * the name within an &quot;rgba(blue, 0.4)&quot; string this way.</span></td>
      </tr>
      <tr>
        <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="LC1069" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span>        <span class="pl-k">function</span> <span class="pl-en">fixColors</span>(<span class="pl-smi">str</span>) {</td>
      </tr>
      <tr>
        <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="LC1070" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">str</span>.<span class="pl-c1">replace</span>(rxColor6, makeRGBA).<span class="pl-c1">replace</span>(rxColor3, <span class="pl-k">function</span>(<span class="pl-smi">$0</span>, <span class="pl-smi">r</span>, <span class="pl-smi">g</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="LC1071" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">makeRGBA</span>($0, r <span class="pl-k">+</span> r, g <span class="pl-k">+</span> g, b <span class="pl-k">+</span> b);</td>
      </tr>
      <tr>
        <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="LC1072" class="blob-code blob-code-inner js-file-line">            }).<span class="pl-c1">replace</span>(rxColorName, <span class="pl-k">function</span>(<span class="pl-smi">$0</span>, <span class="pl-smi">$1</span>, <span class="pl-smi">$2</span>) {</td>
      </tr>
      <tr>
        <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="LC1073" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">CSS</span>.<span class="pl-smi">ColorNames</span>[$2]) {</td>
      </tr>
      <tr>
        <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="LC1074" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> ($1 <span class="pl-k">?</span> $1 <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-c1">CSS</span>.<span class="pl-smi">ColorNames</span>[$2] <span class="pl-k">+</span> ($1 <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,1)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="LC1075" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="LC1076" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> $0;</td>
      </tr>
      <tr>
        <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="LC1077" class="blob-code blob-code-inner js-file-line">            }).<span class="pl-c1">replace</span>(rxRGB, <span class="pl-k">function</span>(<span class="pl-smi">$0</span>, <span class="pl-smi">$1</span>, <span class="pl-smi">$2</span>) {</td>
      </tr>
      <tr>
        <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="LC1078" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">$2</span>.<span class="pl-c1">replace</span>(rxSpaces, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> ($1 <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,1<span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="LC1079" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="LC1080" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="LC1081" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">CSS</span>.<span class="pl-smi">fixColors</span> <span class="pl-k">=</span> fixColors;</td>
      </tr>
      <tr>
        <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="LC1082" class="blob-code blob-code-inner js-file-line">    })(<span class="pl-c1">CSS</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="LC1083" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="LC1084" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="LC1085" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;fixColors.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="LC1086" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="LC1087" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="LC1088" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="LC1089" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="LC1090" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="LC1091" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="LC1092" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="LC1093" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CSS</span>;</td>
      </tr>
      <tr>
        <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="LC1094" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-c1">CSS</span>) {</td>
      </tr>
      <tr>
        <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="LC1095" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Converting from hex as it makes for a smaller file.</span></td>
      </tr>
      <tr>
        <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="LC1096" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: When build system changes to webpack, make this one optional.</span></td>
      </tr>
      <tr>
        <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="LC1097" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> colorValues <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="LC1098" class="blob-code blob-code-inner js-file-line">            aliceblue<span class="pl-k">:</span> <span class="pl-c1">15792383</span>,</td>
      </tr>
      <tr>
        <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="LC1099" class="blob-code blob-code-inner js-file-line">            antiquewhite<span class="pl-k">:</span> <span class="pl-c1">16444375</span>,</td>
      </tr>
      <tr>
        <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="LC1100" class="blob-code blob-code-inner js-file-line">            aqua<span class="pl-k">:</span> <span class="pl-c1">65535</span>,</td>
      </tr>
      <tr>
        <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="LC1101" class="blob-code blob-code-inner js-file-line">            aquamarine<span class="pl-k">:</span> <span class="pl-c1">8388564</span>,</td>
      </tr>
      <tr>
        <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="LC1102" class="blob-code blob-code-inner js-file-line">            azure<span class="pl-k">:</span> <span class="pl-c1">15794175</span>,</td>
      </tr>
      <tr>
        <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="LC1103" class="blob-code blob-code-inner js-file-line">            beige<span class="pl-k">:</span> <span class="pl-c1">16119260</span>,</td>
      </tr>
      <tr>
        <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="LC1104" class="blob-code blob-code-inner js-file-line">            bisque<span class="pl-k">:</span> <span class="pl-c1">16770244</span>,</td>
      </tr>
      <tr>
        <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="LC1105" class="blob-code blob-code-inner js-file-line">            black<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="LC1106" class="blob-code blob-code-inner js-file-line">            blanchedalmond<span class="pl-k">:</span> <span class="pl-c1">16772045</span>,</td>
      </tr>
      <tr>
        <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="LC1107" class="blob-code blob-code-inner js-file-line">            blue<span class="pl-k">:</span> <span class="pl-c1">255</span>,</td>
      </tr>
      <tr>
        <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="LC1108" class="blob-code blob-code-inner js-file-line">            blueviolet<span class="pl-k">:</span> <span class="pl-c1">9055202</span>,</td>
      </tr>
      <tr>
        <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="LC1109" class="blob-code blob-code-inner js-file-line">            brown<span class="pl-k">:</span> <span class="pl-c1">10824234</span>,</td>
      </tr>
      <tr>
        <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="LC1110" class="blob-code blob-code-inner js-file-line">            burlywood<span class="pl-k">:</span> <span class="pl-c1">14596231</span>,</td>
      </tr>
      <tr>
        <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="LC1111" class="blob-code blob-code-inner js-file-line">            cadetblue<span class="pl-k">:</span> <span class="pl-c1">6266528</span>,</td>
      </tr>
      <tr>
        <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="LC1112" class="blob-code blob-code-inner js-file-line">            chartreuse<span class="pl-k">:</span> <span class="pl-c1">8388352</span>,</td>
      </tr>
      <tr>
        <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="LC1113" class="blob-code blob-code-inner js-file-line">            chocolate<span class="pl-k">:</span> <span class="pl-c1">13789470</span>,</td>
      </tr>
      <tr>
        <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="LC1114" class="blob-code blob-code-inner js-file-line">            coral<span class="pl-k">:</span> <span class="pl-c1">16744272</span>,</td>
      </tr>
      <tr>
        <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="LC1115" class="blob-code blob-code-inner js-file-line">            cornflowerblue<span class="pl-k">:</span> <span class="pl-c1">6591981</span>,</td>
      </tr>
      <tr>
        <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="LC1116" class="blob-code blob-code-inner js-file-line">            cornsilk<span class="pl-k">:</span> <span class="pl-c1">16775388</span>,</td>
      </tr>
      <tr>
        <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="LC1117" class="blob-code blob-code-inner js-file-line">            crimson<span class="pl-k">:</span> <span class="pl-c1">14423100</span>,</td>
      </tr>
      <tr>
        <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="LC1118" class="blob-code blob-code-inner js-file-line">            cyan<span class="pl-k">:</span> <span class="pl-c1">65535</span>,</td>
      </tr>
      <tr>
        <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="LC1119" class="blob-code blob-code-inner js-file-line">            darkblue<span class="pl-k">:</span> <span class="pl-c1">139</span>,</td>
      </tr>
      <tr>
        <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="LC1120" class="blob-code blob-code-inner js-file-line">            darkcyan<span class="pl-k">:</span> <span class="pl-c1">35723</span>,</td>
      </tr>
      <tr>
        <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="LC1121" class="blob-code blob-code-inner js-file-line">            darkgoldenrod<span class="pl-k">:</span> <span class="pl-c1">12092939</span>,</td>
      </tr>
      <tr>
        <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="LC1122" class="blob-code blob-code-inner js-file-line">            darkgray<span class="pl-k">:</span> <span class="pl-c1">11119017</span>,</td>
      </tr>
      <tr>
        <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="LC1123" class="blob-code blob-code-inner js-file-line">            darkgrey<span class="pl-k">:</span> <span class="pl-c1">11119017</span>,</td>
      </tr>
      <tr>
        <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="LC1124" class="blob-code blob-code-inner js-file-line">            darkgreen<span class="pl-k">:</span> <span class="pl-c1">25600</span>,</td>
      </tr>
      <tr>
        <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="LC1125" class="blob-code blob-code-inner js-file-line">            darkkhaki<span class="pl-k">:</span> <span class="pl-c1">12433259</span>,</td>
      </tr>
      <tr>
        <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="LC1126" class="blob-code blob-code-inner js-file-line">            darkmagenta<span class="pl-k">:</span> <span class="pl-c1">9109643</span>,</td>
      </tr>
      <tr>
        <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="LC1127" class="blob-code blob-code-inner js-file-line">            darkolivegreen<span class="pl-k">:</span> <span class="pl-c1">5597999</span>,</td>
      </tr>
      <tr>
        <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="LC1128" class="blob-code blob-code-inner js-file-line">            darkorange<span class="pl-k">:</span> <span class="pl-c1">16747520</span>,</td>
      </tr>
      <tr>
        <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="LC1129" class="blob-code blob-code-inner js-file-line">            darkorchid<span class="pl-k">:</span> <span class="pl-c1">10040012</span>,</td>
      </tr>
      <tr>
        <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="LC1130" class="blob-code blob-code-inner js-file-line">            darkred<span class="pl-k">:</span> <span class="pl-c1">9109504</span>,</td>
      </tr>
      <tr>
        <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="LC1131" class="blob-code blob-code-inner js-file-line">            darksalmon<span class="pl-k">:</span> <span class="pl-c1">15308410</span>,</td>
      </tr>
      <tr>
        <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="LC1132" class="blob-code blob-code-inner js-file-line">            darkseagreen<span class="pl-k">:</span> <span class="pl-c1">9419919</span>,</td>
      </tr>
      <tr>
        <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="LC1133" class="blob-code blob-code-inner js-file-line">            darkslateblue<span class="pl-k">:</span> <span class="pl-c1">4734347</span>,</td>
      </tr>
      <tr>
        <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="LC1134" class="blob-code blob-code-inner js-file-line">            darkslategray<span class="pl-k">:</span> <span class="pl-c1">3100495</span>,</td>
      </tr>
      <tr>
        <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="LC1135" class="blob-code blob-code-inner js-file-line">            darkslategrey<span class="pl-k">:</span> <span class="pl-c1">3100495</span>,</td>
      </tr>
      <tr>
        <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="LC1136" class="blob-code blob-code-inner js-file-line">            darkturquoise<span class="pl-k">:</span> <span class="pl-c1">52945</span>,</td>
      </tr>
      <tr>
        <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="LC1137" class="blob-code blob-code-inner js-file-line">            darkviolet<span class="pl-k">:</span> <span class="pl-c1">9699539</span>,</td>
      </tr>
      <tr>
        <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="LC1138" class="blob-code blob-code-inner js-file-line">            deeppink<span class="pl-k">:</span> <span class="pl-c1">16716947</span>,</td>
      </tr>
      <tr>
        <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="LC1139" class="blob-code blob-code-inner js-file-line">            deepskyblue<span class="pl-k">:</span> <span class="pl-c1">49151</span>,</td>
      </tr>
      <tr>
        <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="LC1140" class="blob-code blob-code-inner js-file-line">            dimgray<span class="pl-k">:</span> <span class="pl-c1">6908265</span>,</td>
      </tr>
      <tr>
        <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="LC1141" class="blob-code blob-code-inner js-file-line">            dimgrey<span class="pl-k">:</span> <span class="pl-c1">6908265</span>,</td>
      </tr>
      <tr>
        <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="LC1142" class="blob-code blob-code-inner js-file-line">            dodgerblue<span class="pl-k">:</span> <span class="pl-c1">2003199</span>,</td>
      </tr>
      <tr>
        <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="LC1143" class="blob-code blob-code-inner js-file-line">            firebrick<span class="pl-k">:</span> <span class="pl-c1">11674146</span>,</td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code blob-code-inner js-file-line">            floralwhite<span class="pl-k">:</span> <span class="pl-c1">16775920</span>,</td>
      </tr>
      <tr>
        <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="LC1145" class="blob-code blob-code-inner js-file-line">            forestgreen<span class="pl-k">:</span> <span class="pl-c1">2263842</span>,</td>
      </tr>
      <tr>
        <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="LC1146" class="blob-code blob-code-inner js-file-line">            fuchsia<span class="pl-k">:</span> <span class="pl-c1">16711935</span>,</td>
      </tr>
      <tr>
        <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="LC1147" class="blob-code blob-code-inner js-file-line">            gainsboro<span class="pl-k">:</span> <span class="pl-c1">14474460</span>,</td>
      </tr>
      <tr>
        <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="LC1148" class="blob-code blob-code-inner js-file-line">            ghostwhite<span class="pl-k">:</span> <span class="pl-c1">16316671</span>,</td>
      </tr>
      <tr>
        <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="LC1149" class="blob-code blob-code-inner js-file-line">            gold<span class="pl-k">:</span> <span class="pl-c1">16766720</span>,</td>
      </tr>
      <tr>
        <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="LC1150" class="blob-code blob-code-inner js-file-line">            goldenrod<span class="pl-k">:</span> <span class="pl-c1">14329120</span>,</td>
      </tr>
      <tr>
        <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="LC1151" class="blob-code blob-code-inner js-file-line">            gray<span class="pl-k">:</span> <span class="pl-c1">8421504</span>,</td>
      </tr>
      <tr>
        <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="LC1152" class="blob-code blob-code-inner js-file-line">            grey<span class="pl-k">:</span> <span class="pl-c1">8421504</span>,</td>
      </tr>
      <tr>
        <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="LC1153" class="blob-code blob-code-inner js-file-line">            green<span class="pl-k">:</span> <span class="pl-c1">32768</span>,</td>
      </tr>
      <tr>
        <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="LC1154" class="blob-code blob-code-inner js-file-line">            greenyellow<span class="pl-k">:</span> <span class="pl-c1">11403055</span>,</td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code blob-code-inner js-file-line">            honeydew<span class="pl-k">:</span> <span class="pl-c1">15794160</span>,</td>
      </tr>
      <tr>
        <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="LC1156" class="blob-code blob-code-inner js-file-line">            hotpink<span class="pl-k">:</span> <span class="pl-c1">16738740</span>,</td>
      </tr>
      <tr>
        <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="LC1157" class="blob-code blob-code-inner js-file-line">            indianred<span class="pl-k">:</span> <span class="pl-c1">13458524</span>,</td>
      </tr>
      <tr>
        <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="LC1158" class="blob-code blob-code-inner js-file-line">            indigo<span class="pl-k">:</span> <span class="pl-c1">4915330</span>,</td>
      </tr>
      <tr>
        <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="LC1159" class="blob-code blob-code-inner js-file-line">            ivory<span class="pl-k">:</span> <span class="pl-c1">16777200</span>,</td>
      </tr>
      <tr>
        <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="LC1160" class="blob-code blob-code-inner js-file-line">            khaki<span class="pl-k">:</span> <span class="pl-c1">15787660</span>,</td>
      </tr>
      <tr>
        <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="LC1161" class="blob-code blob-code-inner js-file-line">            lavender<span class="pl-k">:</span> <span class="pl-c1">15132410</span>,</td>
      </tr>
      <tr>
        <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="LC1162" class="blob-code blob-code-inner js-file-line">            lavenderblush<span class="pl-k">:</span> <span class="pl-c1">16773365</span>,</td>
      </tr>
      <tr>
        <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="LC1163" class="blob-code blob-code-inner js-file-line">            lawngreen<span class="pl-k">:</span> <span class="pl-c1">8190976</span>,</td>
      </tr>
      <tr>
        <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="LC1164" class="blob-code blob-code-inner js-file-line">            lemonchiffon<span class="pl-k">:</span> <span class="pl-c1">16775885</span>,</td>
      </tr>
      <tr>
        <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="LC1165" class="blob-code blob-code-inner js-file-line">            lightblue<span class="pl-k">:</span> <span class="pl-c1">11393254</span>,</td>
      </tr>
      <tr>
        <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="LC1166" class="blob-code blob-code-inner js-file-line">            lightcoral<span class="pl-k">:</span> <span class="pl-c1">15761536</span>,</td>
      </tr>
      <tr>
        <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="LC1167" class="blob-code blob-code-inner js-file-line">            lightcyan<span class="pl-k">:</span> <span class="pl-c1">14745599</span>,</td>
      </tr>
      <tr>
        <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="LC1168" class="blob-code blob-code-inner js-file-line">            lightgoldenrodyellow<span class="pl-k">:</span> <span class="pl-c1">16448210</span>,</td>
      </tr>
      <tr>
        <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
        <td id="LC1169" class="blob-code blob-code-inner js-file-line">            lightgray<span class="pl-k">:</span> <span class="pl-c1">13882323</span>,</td>
      </tr>
      <tr>
        <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
        <td id="LC1170" class="blob-code blob-code-inner js-file-line">            lightgrey<span class="pl-k">:</span> <span class="pl-c1">13882323</span>,</td>
      </tr>
      <tr>
        <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
        <td id="LC1171" class="blob-code blob-code-inner js-file-line">            lightgreen<span class="pl-k">:</span> <span class="pl-c1">9498256</span>,</td>
      </tr>
      <tr>
        <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
        <td id="LC1172" class="blob-code blob-code-inner js-file-line">            lightpink<span class="pl-k">:</span> <span class="pl-c1">16758465</span>,</td>
      </tr>
      <tr>
        <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
        <td id="LC1173" class="blob-code blob-code-inner js-file-line">            lightsalmon<span class="pl-k">:</span> <span class="pl-c1">16752762</span>,</td>
      </tr>
      <tr>
        <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
        <td id="LC1174" class="blob-code blob-code-inner js-file-line">            lightseagreen<span class="pl-k">:</span> <span class="pl-c1">2142890</span>,</td>
      </tr>
      <tr>
        <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
        <td id="LC1175" class="blob-code blob-code-inner js-file-line">            lightskyblue<span class="pl-k">:</span> <span class="pl-c1">8900346</span>,</td>
      </tr>
      <tr>
        <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
        <td id="LC1176" class="blob-code blob-code-inner js-file-line">            lightslategray<span class="pl-k">:</span> <span class="pl-c1">7833753</span>,</td>
      </tr>
      <tr>
        <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
        <td id="LC1177" class="blob-code blob-code-inner js-file-line">            lightslategrey<span class="pl-k">:</span> <span class="pl-c1">7833753</span>,</td>
      </tr>
      <tr>
        <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
        <td id="LC1178" class="blob-code blob-code-inner js-file-line">            lightsteelblue<span class="pl-k">:</span> <span class="pl-c1">11584734</span>,</td>
      </tr>
      <tr>
        <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
        <td id="LC1179" class="blob-code blob-code-inner js-file-line">            lightyellow<span class="pl-k">:</span> <span class="pl-c1">16777184</span>,</td>
      </tr>
      <tr>
        <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
        <td id="LC1180" class="blob-code blob-code-inner js-file-line">            lime<span class="pl-k">:</span> <span class="pl-c1">65280</span>,</td>
      </tr>
      <tr>
        <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
        <td id="LC1181" class="blob-code blob-code-inner js-file-line">            limegreen<span class="pl-k">:</span> <span class="pl-c1">3329330</span>,</td>
      </tr>
      <tr>
        <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
        <td id="LC1182" class="blob-code blob-code-inner js-file-line">            linen<span class="pl-k">:</span> <span class="pl-c1">16445670</span>,</td>
      </tr>
      <tr>
        <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
        <td id="LC1183" class="blob-code blob-code-inner js-file-line">            magenta<span class="pl-k">:</span> <span class="pl-c1">16711935</span>,</td>
      </tr>
      <tr>
        <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
        <td id="LC1184" class="blob-code blob-code-inner js-file-line">            maroon<span class="pl-k">:</span> <span class="pl-c1">8388608</span>,</td>
      </tr>
      <tr>
        <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
        <td id="LC1185" class="blob-code blob-code-inner js-file-line">            mediumaquamarine<span class="pl-k">:</span> <span class="pl-c1">6737322</span>,</td>
      </tr>
      <tr>
        <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
        <td id="LC1186" class="blob-code blob-code-inner js-file-line">            mediumblue<span class="pl-k">:</span> <span class="pl-c1">205</span>,</td>
      </tr>
      <tr>
        <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
        <td id="LC1187" class="blob-code blob-code-inner js-file-line">            mediumorchid<span class="pl-k">:</span> <span class="pl-c1">12211667</span>,</td>
      </tr>
      <tr>
        <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
        <td id="LC1188" class="blob-code blob-code-inner js-file-line">            mediumpurple<span class="pl-k">:</span> <span class="pl-c1">9662683</span>,</td>
      </tr>
      <tr>
        <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
        <td id="LC1189" class="blob-code blob-code-inner js-file-line">            mediumseagreen<span class="pl-k">:</span> <span class="pl-c1">3978097</span>,</td>
      </tr>
      <tr>
        <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
        <td id="LC1190" class="blob-code blob-code-inner js-file-line">            mediumslateblue<span class="pl-k">:</span> <span class="pl-c1">8087790</span>,</td>
      </tr>
      <tr>
        <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
        <td id="LC1191" class="blob-code blob-code-inner js-file-line">            mediumspringgreen<span class="pl-k">:</span> <span class="pl-c1">64154</span>,</td>
      </tr>
      <tr>
        <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
        <td id="LC1192" class="blob-code blob-code-inner js-file-line">            mediumturquoise<span class="pl-k">:</span> <span class="pl-c1">4772300</span>,</td>
      </tr>
      <tr>
        <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
        <td id="LC1193" class="blob-code blob-code-inner js-file-line">            mediumvioletred<span class="pl-k">:</span> <span class="pl-c1">13047173</span>,</td>
      </tr>
      <tr>
        <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
        <td id="LC1194" class="blob-code blob-code-inner js-file-line">            midnightblue<span class="pl-k">:</span> <span class="pl-c1">1644912</span>,</td>
      </tr>
      <tr>
        <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
        <td id="LC1195" class="blob-code blob-code-inner js-file-line">            mintcream<span class="pl-k">:</span> <span class="pl-c1">16121850</span>,</td>
      </tr>
      <tr>
        <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
        <td id="LC1196" class="blob-code blob-code-inner js-file-line">            mistyrose<span class="pl-k">:</span> <span class="pl-c1">16770273</span>,</td>
      </tr>
      <tr>
        <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
        <td id="LC1197" class="blob-code blob-code-inner js-file-line">            moccasin<span class="pl-k">:</span> <span class="pl-c1">16770229</span>,</td>
      </tr>
      <tr>
        <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
        <td id="LC1198" class="blob-code blob-code-inner js-file-line">            navajowhite<span class="pl-k">:</span> <span class="pl-c1">16768685</span>,</td>
      </tr>
      <tr>
        <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
        <td id="LC1199" class="blob-code blob-code-inner js-file-line">            navy<span class="pl-k">:</span> <span class="pl-c1">128</span>,</td>
      </tr>
      <tr>
        <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
        <td id="LC1200" class="blob-code blob-code-inner js-file-line">            oldlace<span class="pl-k">:</span> <span class="pl-c1">16643558</span>,</td>
      </tr>
      <tr>
        <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
        <td id="LC1201" class="blob-code blob-code-inner js-file-line">            olive<span class="pl-k">:</span> <span class="pl-c1">8421376</span>,</td>
      </tr>
      <tr>
        <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
        <td id="LC1202" class="blob-code blob-code-inner js-file-line">            olivedrab<span class="pl-k">:</span> <span class="pl-c1">7048739</span>,</td>
      </tr>
      <tr>
        <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
        <td id="LC1203" class="blob-code blob-code-inner js-file-line">            orange<span class="pl-k">:</span> <span class="pl-c1">16753920</span>,</td>
      </tr>
      <tr>
        <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
        <td id="LC1204" class="blob-code blob-code-inner js-file-line">            orangered<span class="pl-k">:</span> <span class="pl-c1">16729344</span>,</td>
      </tr>
      <tr>
        <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
        <td id="LC1205" class="blob-code blob-code-inner js-file-line">            orchid<span class="pl-k">:</span> <span class="pl-c1">14315734</span>,</td>
      </tr>
      <tr>
        <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
        <td id="LC1206" class="blob-code blob-code-inner js-file-line">            palegoldenrod<span class="pl-k">:</span> <span class="pl-c1">15657130</span>,</td>
      </tr>
      <tr>
        <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
        <td id="LC1207" class="blob-code blob-code-inner js-file-line">            palegreen<span class="pl-k">:</span> <span class="pl-c1">10025880</span>,</td>
      </tr>
      <tr>
        <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
        <td id="LC1208" class="blob-code blob-code-inner js-file-line">            paleturquoise<span class="pl-k">:</span> <span class="pl-c1">11529966</span>,</td>
      </tr>
      <tr>
        <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
        <td id="LC1209" class="blob-code blob-code-inner js-file-line">            palevioletred<span class="pl-k">:</span> <span class="pl-c1">14381203</span>,</td>
      </tr>
      <tr>
        <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
        <td id="LC1210" class="blob-code blob-code-inner js-file-line">            papayawhip<span class="pl-k">:</span> <span class="pl-c1">16773077</span>,</td>
      </tr>
      <tr>
        <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
        <td id="LC1211" class="blob-code blob-code-inner js-file-line">            peachpuff<span class="pl-k">:</span> <span class="pl-c1">16767673</span>,</td>
      </tr>
      <tr>
        <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
        <td id="LC1212" class="blob-code blob-code-inner js-file-line">            peru<span class="pl-k">:</span> <span class="pl-c1">13468991</span>,</td>
      </tr>
      <tr>
        <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
        <td id="LC1213" class="blob-code blob-code-inner js-file-line">            pink<span class="pl-k">:</span> <span class="pl-c1">16761035</span>,</td>
      </tr>
      <tr>
        <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
        <td id="LC1214" class="blob-code blob-code-inner js-file-line">            plum<span class="pl-k">:</span> <span class="pl-c1">14524637</span>,</td>
      </tr>
      <tr>
        <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
        <td id="LC1215" class="blob-code blob-code-inner js-file-line">            powderblue<span class="pl-k">:</span> <span class="pl-c1">11591910</span>,</td>
      </tr>
      <tr>
        <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
        <td id="LC1216" class="blob-code blob-code-inner js-file-line">            purple<span class="pl-k">:</span> <span class="pl-c1">8388736</span>,</td>
      </tr>
      <tr>
        <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
        <td id="LC1217" class="blob-code blob-code-inner js-file-line">            rebeccapurple<span class="pl-k">:</span> <span class="pl-c1">6697881</span>,</td>
      </tr>
      <tr>
        <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
        <td id="LC1218" class="blob-code blob-code-inner js-file-line">            red<span class="pl-k">:</span> <span class="pl-c1">16711680</span>,</td>
      </tr>
      <tr>
        <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
        <td id="LC1219" class="blob-code blob-code-inner js-file-line">            rosybrown<span class="pl-k">:</span> <span class="pl-c1">12357519</span>,</td>
      </tr>
      <tr>
        <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
        <td id="LC1220" class="blob-code blob-code-inner js-file-line">            royalblue<span class="pl-k">:</span> <span class="pl-c1">4286945</span>,</td>
      </tr>
      <tr>
        <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
        <td id="LC1221" class="blob-code blob-code-inner js-file-line">            saddlebrown<span class="pl-k">:</span> <span class="pl-c1">9127187</span>,</td>
      </tr>
      <tr>
        <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
        <td id="LC1222" class="blob-code blob-code-inner js-file-line">            salmon<span class="pl-k">:</span> <span class="pl-c1">16416882</span>,</td>
      </tr>
      <tr>
        <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
        <td id="LC1223" class="blob-code blob-code-inner js-file-line">            sandybrown<span class="pl-k">:</span> <span class="pl-c1">16032864</span>,</td>
      </tr>
      <tr>
        <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
        <td id="LC1224" class="blob-code blob-code-inner js-file-line">            seagreen<span class="pl-k">:</span> <span class="pl-c1">3050327</span>,</td>
      </tr>
      <tr>
        <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
        <td id="LC1225" class="blob-code blob-code-inner js-file-line">            seashell<span class="pl-k">:</span> <span class="pl-c1">16774638</span>,</td>
      </tr>
      <tr>
        <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
        <td id="LC1226" class="blob-code blob-code-inner js-file-line">            sienna<span class="pl-k">:</span> <span class="pl-c1">10506797</span>,</td>
      </tr>
      <tr>
        <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
        <td id="LC1227" class="blob-code blob-code-inner js-file-line">            silver<span class="pl-k">:</span> <span class="pl-c1">12632256</span>,</td>
      </tr>
      <tr>
        <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
        <td id="LC1228" class="blob-code blob-code-inner js-file-line">            skyblue<span class="pl-k">:</span> <span class="pl-c1">8900331</span>,</td>
      </tr>
      <tr>
        <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
        <td id="LC1229" class="blob-code blob-code-inner js-file-line">            slateblue<span class="pl-k">:</span> <span class="pl-c1">6970061</span>,</td>
      </tr>
      <tr>
        <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
        <td id="LC1230" class="blob-code blob-code-inner js-file-line">            slategray<span class="pl-k">:</span> <span class="pl-c1">7372944</span>,</td>
      </tr>
      <tr>
        <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
        <td id="LC1231" class="blob-code blob-code-inner js-file-line">            slategrey<span class="pl-k">:</span> <span class="pl-c1">7372944</span>,</td>
      </tr>
      <tr>
        <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
        <td id="LC1232" class="blob-code blob-code-inner js-file-line">            snow<span class="pl-k">:</span> <span class="pl-c1">16775930</span>,</td>
      </tr>
      <tr>
        <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
        <td id="LC1233" class="blob-code blob-code-inner js-file-line">            springgreen<span class="pl-k">:</span> <span class="pl-c1">65407</span>,</td>
      </tr>
      <tr>
        <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
        <td id="LC1234" class="blob-code blob-code-inner js-file-line">            steelblue<span class="pl-k">:</span> <span class="pl-c1">4620980</span>,</td>
      </tr>
      <tr>
        <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
        <td id="LC1235" class="blob-code blob-code-inner js-file-line">            tan<span class="pl-k">:</span> <span class="pl-c1">13808780</span>,</td>
      </tr>
      <tr>
        <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
        <td id="LC1236" class="blob-code blob-code-inner js-file-line">            teal<span class="pl-k">:</span> <span class="pl-c1">32896</span>,</td>
      </tr>
      <tr>
        <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
        <td id="LC1237" class="blob-code blob-code-inner js-file-line">            thistle<span class="pl-k">:</span> <span class="pl-c1">14204888</span>,</td>
      </tr>
      <tr>
        <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
        <td id="LC1238" class="blob-code blob-code-inner js-file-line">            tomato<span class="pl-k">:</span> <span class="pl-c1">16737095</span>,</td>
      </tr>
      <tr>
        <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
        <td id="LC1239" class="blob-code blob-code-inner js-file-line">            turquoise<span class="pl-k">:</span> <span class="pl-c1">4251856</span>,</td>
      </tr>
      <tr>
        <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
        <td id="LC1240" class="blob-code blob-code-inner js-file-line">            violet<span class="pl-k">:</span> <span class="pl-c1">15631086</span>,</td>
      </tr>
      <tr>
        <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
        <td id="LC1241" class="blob-code blob-code-inner js-file-line">            wheat<span class="pl-k">:</span> <span class="pl-c1">16113331</span>,</td>
      </tr>
      <tr>
        <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
        <td id="LC1242" class="blob-code blob-code-inner js-file-line">            white<span class="pl-k">:</span> <span class="pl-c1">16777215</span>,</td>
      </tr>
      <tr>
        <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
        <td id="LC1243" class="blob-code blob-code-inner js-file-line">            whitesmoke<span class="pl-k">:</span> <span class="pl-c1">16119285</span>,</td>
      </tr>
      <tr>
        <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
        <td id="LC1244" class="blob-code blob-code-inner js-file-line">            yellow<span class="pl-k">:</span> <span class="pl-c1">16776960</span>,</td>
      </tr>
      <tr>
        <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
        <td id="LC1245" class="blob-code blob-code-inner js-file-line">            yellowgreen<span class="pl-k">:</span> <span class="pl-c1">10145074</span></td>
      </tr>
      <tr>
        <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
        <td id="LC1246" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
        <td id="LC1247" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> name_2 <span class="pl-k">in</span> colorValues) {</td>
      </tr>
      <tr>
        <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
        <td id="LC1248" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">colorValues</span>.<span class="pl-en">hasOwnProperty</span>(name_2)) {</td>
      </tr>
      <tr>
        <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
        <td id="LC1249" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> color <span class="pl-k">=</span> colorValues[name_2];</td>
      </tr>
      <tr>
        <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
        <td id="LC1250" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">CSS</span>.<span class="pl-smi">ColorNames</span>[name_2] <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(color <span class="pl-k">/</span> <span class="pl-c1">65536</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(color <span class="pl-k">/</span> <span class="pl-c1">256</span> <span class="pl-k">%</span> <span class="pl-c1">256</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> color <span class="pl-k">%</span> <span class="pl-c1">256</span>;</td>
      </tr>
      <tr>
        <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
        <td id="LC1251" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
        <td id="LC1252" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
        <td id="LC1253" class="blob-code blob-code-inner js-file-line">    })(<span class="pl-c1">CSS</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
        <td id="LC1254" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
        <td id="LC1255" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
        <td id="LC1256" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
        <td id="LC1257" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
        <td id="LC1258" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
        <td id="LC1259" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
        <td id="LC1260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
        <td id="LC1261" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
        <td id="LC1262" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
        <td id="LC1263" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CSS</span>;</td>
      </tr>
      <tr>
        <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
        <td id="LC1264" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-c1">CSS</span>) {</td>
      </tr>
      <tr>
        <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
        <td id="LC1265" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: This is still a complete mess</span></td>
      </tr>
      <tr>
        <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
        <td id="LC1266" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">computePropertyValue</span>(<span class="pl-smi">element</span>, <span class="pl-smi">property</span>) {</td>
      </tr>
      <tr>
        <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
        <td id="LC1267" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element), </td>
      </tr>
      <tr>
        <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
        <td id="LC1268" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> If computedStyle is cached, use it.</span></td>
      </tr>
      <tr>
        <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
        <td id="LC1269" class="blob-code blob-code-inner js-file-line">            computedStyle <span class="pl-k">=</span> data <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">data</span>.<span class="pl-smi">computedStyle</span> <span class="pl-k">?</span> <span class="pl-smi">data</span>.<span class="pl-smi">computedStyle</span> <span class="pl-k">:</span> <span class="pl-c1">window</span>.<span class="pl-en">getComputedStyle</span>(element, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> computedValue <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
        <td id="LC1271" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (data <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-smi">data</span>.<span class="pl-smi">computedStyle</span>) {</td>
      </tr>
      <tr>
        <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
        <td id="LC1272" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">data</span>.<span class="pl-smi">computedStyle</span> <span class="pl-k">=</span> computedStyle;</td>
      </tr>
      <tr>
        <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
        <td id="LC1273" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
        <td id="LC1274" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (property <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> property <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
        <td id="LC1275" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Browsers do not return height and width values for elements</span></td>
      </tr>
      <tr>
        <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
        <td id="LC1276" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> that are set to display:&quot;none&quot;. Thus, we temporarily toggle</span></td>
      </tr>
      <tr>
        <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
        <td id="LC1277" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> display to the element type&#39;s default value.</span></td>
      </tr>
      <tr>
        <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
        <td id="LC1278" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> toggleDisplay <span class="pl-k">=</span> <span class="pl-en">getPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>) <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
        <td id="LC1279" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> When box-sizing isn&#39;t set to border-box, height and width</span></td>
      </tr>
      <tr>
        <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
        <td id="LC1280" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> style values are incorrectly computed when an element&#39;s</span></td>
      </tr>
      <tr>
        <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
        <td id="LC1281" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> scrollbars are visible (which expands the element&#39;s</span></td>
      </tr>
      <tr>
        <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
        <td id="LC1282" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> dimensions). Thus, we defer to the more accurate</span></td>
      </tr>
      <tr>
        <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
        <td id="LC1283" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> offsetHeight/Width property, which includes the total</span></td>
      </tr>
      <tr>
        <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
        <td id="LC1284" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> dimensions for interior, border, padding, and scrollbar. We</span></td>
      </tr>
      <tr>
        <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
        <td id="LC1285" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> subtract border and padding to get the sum of interior +</span></td>
      </tr>
      <tr>
        <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
        <td id="LC1286" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> scrollbar.</span></td>
      </tr>
      <tr>
        <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
        <td id="LC1287" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> TODO: offsetHeight does not exist on SVGElement</span></td>
      </tr>
      <tr>
        <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
        <td id="LC1288" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (toggleDisplay) {</td>
      </tr>
      <tr>
        <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
        <td id="LC1289" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">CSS</span>.<span class="pl-en">setPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
        <td id="LC1290" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
        <td id="LC1291" class="blob-code blob-code-inner js-file-line">                computedValue <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">augmentDimension</span>(element, property, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
        <td id="LC1292" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (toggleDisplay) {</td>
      </tr>
      <tr>
        <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
        <td id="LC1293" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">CSS</span>.<span class="pl-en">setPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
        <td id="LC1294" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
        <td id="LC1295" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">String</span>(computedValue);</td>
      </tr>
      <tr>
        <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
        <td id="LC1296" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
        <td id="LC1297" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side&#39;s color.</span></td>
      </tr>
      <tr>
        <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
        <td id="LC1298" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Also, in all browsers, when border colors aren&#39;t all the same, a compound value is returned that Velocity isn&#39;t setup to parse.</span></td>
      </tr>
      <tr>
        <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
        <td id="LC1299" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             So, as a polyfill for querying individual border side colors, we just return the top border&#39;s color and animate all borders from that value. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
        <td id="LC1300" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> TODO: There is a borderColor normalisation in legacy/ - figure out where this is needed... <span class="pl-c">*/</span></span>            computedValue <span class="pl-k">=</span> computedStyle[property];</td>
      </tr>
      <tr>
        <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
        <td id="LC1301" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Fall back to the property&#39;s style value (if defined) when computedValue returns nothing,</span></td>
      </tr>
      <tr>
        <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
        <td id="LC1302" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             which can happen when the element hasn&#39;t been painted. <span class="pl-c">*/</span></span>            <span class="pl-k">if</span> (<span class="pl-k">!</span>computedValue) {</td>
      </tr>
      <tr>
        <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
        <td id="LC1303" class="blob-code blob-code-inner js-file-line">                computedValue <span class="pl-k">=</span> <span class="pl-smi">element</span>.<span class="pl-c1">style</span>[property];</td>
      </tr>
      <tr>
        <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
        <td id="LC1304" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
        <td id="LC1305" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> For top, right, bottom, and left (TRBL) values that are set to &quot;auto&quot; on elements of &quot;fixed&quot; or &quot;absolute&quot; position,</span></td>
      </tr>
      <tr>
        <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
        <td id="LC1306" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             defer to jQuery for converting &quot;auto&quot; to a numeric value. (For elements with a &quot;static&quot; or &quot;relative&quot; position, &quot;auto&quot; has the same</span></td>
      </tr>
      <tr>
        <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
        <td id="LC1307" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             effect as being set to 0, so no conversion is necessary.) <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
        <td id="LC1308" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> An example of why numeric conversion is necessary: When an element with &quot;position:absolute&quot; has an untouched &quot;left&quot;</span></td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             property, which reverts to &quot;auto&quot;, left&#39;s value is 0 relative to its parent element, but is often non-zero relative</span></td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             to its *containing* (not parent) element, which is the nearest &quot;position:relative&quot; ancestor or the viewport (and always the viewport in the case of &quot;position:fixed&quot;). <span class="pl-c">*/</span></span>            <span class="pl-k">if</span> (computedValue <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">switch</span> (property) {</td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
        <td id="LC1313" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
        <td id="LC1314" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> topLeft <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
        <td id="LC1315" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
        <td id="LC1316" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
        <td id="LC1317" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
        <td id="LC1318" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> position <span class="pl-k">=</span> <span class="pl-en">getPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
        <td id="LC1319" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">/*</span> GET <span class="pl-c">*/</span></span>                    <span class="pl-k">if</span> (position <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>fixed<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> topLeft <span class="pl-k">&amp;&amp;</span> position <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
        <td id="LC1320" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> Note: this has no pixel unit on its returned values,</span></td>
      </tr>
      <tr>
        <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
        <td id="LC1321" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> we re-add it here to conform with</span></td>
      </tr>
      <tr>
        <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
        <td id="LC1322" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> computePropertyValue&#39;s behavior.</span></td>
      </tr>
      <tr>
        <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
        <td id="LC1323" class="blob-code blob-code-inner js-file-line">                        computedValue <span class="pl-k">=</span> <span class="pl-smi">element</span>.<span class="pl-smi">getBoundingClientRect</span>[property] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
        <td id="LC1324" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">/*</span> GET <span class="pl-c">*/</span></span>                        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
        <td id="LC1325" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
        <td id="LC1326" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
        <td id="LC1327" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Deliberate fallthrough!</span></td>
      </tr>
      <tr>
        <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
        <td id="LC1328" class="blob-code blob-code-inner js-file-line">                                      <span class="pl-k">default</span>:</td>
      </tr>
      <tr>
        <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
        <td id="LC1329" class="blob-code blob-code-inner js-file-line">                    computedValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
        <td id="LC1330" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
        <td id="LC1331" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
        <td id="LC1332" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
        <td id="LC1333" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> computedValue <span class="pl-k">?</span> <span class="pl-c1">String</span>(computedValue) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
        <td id="LC1334" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
        <td id="LC1335" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">CSS</span>.<span class="pl-smi">computePropertyValue</span> <span class="pl-k">=</span> computePropertyValue;</td>
      </tr>
      <tr>
        <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
        <td id="LC1336" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
        <td id="LC1337" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Get a property value. This will grab via the cache if it exists, then</span></td>
      </tr>
      <tr>
        <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
        <td id="LC1338" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * via any normalisations.</span></td>
      </tr>
      <tr>
        <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
        <td id="LC1339" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span>        <span class="pl-k">function</span> <span class="pl-en">getPropertyValue</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyName</span>, <span class="pl-smi">fn</span>, <span class="pl-smi">skipCache</span>) {</td>
      </tr>
      <tr>
        <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
        <td id="LC1340" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element);</td>
      </tr>
      <tr>
        <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
        <td id="LC1341" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> propertyValue;</td>
      </tr>
      <tr>
        <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
        <td id="LC1342" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">NoCacheNormalizations</span>.<span class="pl-c1">has</span>(propertyName)) {</td>
      </tr>
      <tr>
        <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
        <td id="LC1343" class="blob-code blob-code-inner js-file-line">                skipCache <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
        <td id="LC1344" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
        <td id="LC1345" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>skipCache <span class="pl-k">&amp;&amp;</span> data <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">data</span>.<span class="pl-smi">cache</span>[propertyName] <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
        <td id="LC1346" class="blob-code blob-code-inner js-file-line">                propertyValue <span class="pl-k">=</span> <span class="pl-smi">data</span>.<span class="pl-smi">cache</span>[propertyName];</td>
      </tr>
      <tr>
        <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
        <td id="LC1347" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
        <td id="LC1348" class="blob-code blob-code-inner js-file-line">                fn <span class="pl-k">=</span> fn <span class="pl-k">||</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">getNormalization</span>(element, propertyName);</td>
      </tr>
      <tr>
        <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
        <td id="LC1349" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (fn) {</td>
      </tr>
      <tr>
        <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
        <td id="LC1350" class="blob-code blob-code-inner js-file-line">                    propertyValue <span class="pl-k">=</span> <span class="pl-en">fn</span>(element);</td>
      </tr>
      <tr>
        <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
        <td id="LC1351" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (data) {</td>
      </tr>
      <tr>
        <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
        <td id="LC1352" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">data</span>.<span class="pl-smi">cache</span>[propertyName] <span class="pl-k">=</span> propertyValue;</td>
      </tr>
      <tr>
        <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
        <td id="LC1353" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
        <td id="LC1354" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
        <td id="LC1355" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
        <td id="LC1356" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">debug</span> <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
        <td id="LC1357" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">console</span>.<span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Get <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> propertyName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> propertyValue);</td>
      </tr>
      <tr>
        <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
        <td id="LC1358" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
        <td id="LC1359" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> propertyValue;</td>
      </tr>
      <tr>
        <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
        <td id="LC1360" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
        <td id="LC1361" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">CSS</span>.<span class="pl-smi">getPropertyValue</span> <span class="pl-k">=</span> getPropertyValue;</td>
      </tr>
      <tr>
        <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
        <td id="LC1362" class="blob-code blob-code-inner js-file-line">    })(<span class="pl-c1">CSS</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
        <td id="LC1363" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
        <td id="LC1364" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
        <td id="LC1365" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
        <td id="LC1366" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
        <td id="LC1367" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
        <td id="LC1368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
        <td id="LC1369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
        <td id="LC1370" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
        <td id="LC1371" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
        <td id="LC1372" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CSS</span>;</td>
      </tr>
      <tr>
        <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
        <td id="LC1373" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-c1">CSS</span>) {</td>
      </tr>
      <tr>
        <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
        <td id="LC1374" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
        <td id="LC1375" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * All possible units in CSS. Used to recognise units when parsing tweens.</span></td>
      </tr>
      <tr>
        <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
        <td id="LC1376" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
        <td id="LC1377" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> Units <span class="pl-k">=</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>em<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>ex<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>ch<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>rem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>vw<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>vh<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>vmin<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>vmax<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>cm<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>mm<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Q<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>pc<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>pt<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>deg<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>grad<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>rad<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>turn<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>ms<span class="pl-pds">&quot;</span></span> ];</td>
      </tr>
      <tr>
        <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
        <td id="LC1378" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
        <td id="LC1379" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Get the current unit for this property. Only used when parsing tweens</span></td>
      </tr>
      <tr>
        <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
        <td id="LC1380" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * to check if the unit is changing between the start and end values.</span></td>
      </tr>
      <tr>
        <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
        <td id="LC1381" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span>        <span class="pl-k">function</span> <span class="pl-en">getUnit</span>(<span class="pl-smi">property</span>, <span class="pl-smi">start</span>) {</td>
      </tr>
      <tr>
        <td id="L1382" class="blob-num js-line-number" data-line-number="1382"></td>
        <td id="LC1382" class="blob-code blob-code-inner js-file-line">            start <span class="pl-k">=</span> start <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1383" class="blob-num js-line-number" data-line-number="1383"></td>
        <td id="LC1383" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (property[start] <span class="pl-k">&amp;&amp;</span> property[start] <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1384" class="blob-num js-line-number" data-line-number="1384"></td>
        <td id="LC1384" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, units <span class="pl-k">=</span> Units; i <span class="pl-k">&lt;</span> <span class="pl-smi">units</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1385" class="blob-num js-line-number" data-line-number="1385"></td>
        <td id="LC1385" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> unit <span class="pl-k">=</span> units[i];</td>
      </tr>
      <tr>
        <td id="L1386" class="blob-num js-line-number" data-line-number="1386"></td>
        <td id="LC1386" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1387" class="blob-num js-line-number" data-line-number="1387"></td>
        <td id="LC1387" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
        <td id="LC1388" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (j <span class="pl-k">&gt;=</span> <span class="pl-smi">unit</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L1389" class="blob-num js-line-number" data-line-number="1389"></td>
        <td id="LC1389" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">return</span> unit;</td>
      </tr>
      <tr>
        <td id="L1390" class="blob-num js-line-number" data-line-number="1390"></td>
        <td id="LC1390" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1391" class="blob-num js-line-number" data-line-number="1391"></td>
        <td id="LC1391" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (unit[j] <span class="pl-k">!==</span> property[start <span class="pl-k">+</span> j]) {</td>
      </tr>
      <tr>
        <td id="L1392" class="blob-num js-line-number" data-line-number="1392"></td>
        <td id="LC1392" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1393" class="blob-num js-line-number" data-line-number="1393"></td>
        <td id="LC1393" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1394" class="blob-num js-line-number" data-line-number="1394"></td>
        <td id="LC1394" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">while</span> (<span class="pl-k">++</span>j);</td>
      </tr>
      <tr>
        <td id="L1395" class="blob-num js-line-number" data-line-number="1395"></td>
        <td id="LC1395" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1396" class="blob-num js-line-number" data-line-number="1396"></td>
        <td id="LC1396" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1397" class="blob-num js-line-number" data-line-number="1397"></td>
        <td id="LC1397" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1398" class="blob-num js-line-number" data-line-number="1398"></td>
        <td id="LC1398" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1399" class="blob-num js-line-number" data-line-number="1399"></td>
        <td id="LC1399" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">CSS</span>.<span class="pl-smi">getUnit</span> <span class="pl-k">=</span> getUnit;</td>
      </tr>
      <tr>
        <td id="L1400" class="blob-num js-line-number" data-line-number="1400"></td>
        <td id="LC1400" class="blob-code blob-code-inner js-file-line">    })(<span class="pl-c1">CSS</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1401" class="blob-num js-line-number" data-line-number="1401"></td>
        <td id="LC1401" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1402" class="blob-num js-line-number" data-line-number="1402"></td>
        <td id="LC1402" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1403" class="blob-num js-line-number" data-line-number="1403"></td>
        <td id="LC1403" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1404" class="blob-num js-line-number" data-line-number="1404"></td>
        <td id="LC1404" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1405" class="blob-num js-line-number" data-line-number="1405"></td>
        <td id="LC1405" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1406" class="blob-num js-line-number" data-line-number="1406"></td>
        <td id="LC1406" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1407" class="blob-num js-line-number" data-line-number="1407"></td>
        <td id="LC1407" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1408" class="blob-num js-line-number" data-line-number="1408"></td>
        <td id="LC1408" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1409" class="blob-num js-line-number" data-line-number="1409"></td>
        <td id="LC1409" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1410" class="blob-num js-line-number" data-line-number="1410"></td>
        <td id="LC1410" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CSS</span>;</td>
      </tr>
      <tr>
        <td id="L1411" class="blob-num js-line-number" data-line-number="1411"></td>
        <td id="LC1411" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-c1">CSS</span>) {</td>
      </tr>
      <tr>
        <td id="L1412" class="blob-num js-line-number" data-line-number="1412"></td>
        <td id="LC1412" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1413" class="blob-num js-line-number" data-line-number="1413"></td>
        <td id="LC1413" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * The singular setPropertyValue, which routes the logic for all</span></td>
      </tr>
      <tr>
        <td id="L1414" class="blob-num js-line-number" data-line-number="1414"></td>
        <td id="LC1414" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * normalizations.</span></td>
      </tr>
      <tr>
        <td id="L1415" class="blob-num js-line-number" data-line-number="1415"></td>
        <td id="LC1415" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
        <td id="LC1416" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">setPropertyValue</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyName</span>, <span class="pl-smi">propertyValue</span>, <span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L1417" class="blob-num js-line-number" data-line-number="1417"></td>
        <td id="LC1417" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element);</td>
      </tr>
      <tr>
        <td id="L1418" class="blob-num js-line-number" data-line-number="1418"></td>
        <td id="LC1418" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">isString</span>(propertyValue) <span class="pl-k">&amp;&amp;</span> propertyValue[<span class="pl-c1">0</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> propertyValue[<span class="pl-c1">1</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> propertyValue[<span class="pl-c1">2</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>l<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> propertyValue[<span class="pl-c1">3</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> propertyValue[<span class="pl-c1">4</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> propertyValue[<span class="pl-c1">5</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> propertyValue[<span class="pl-c1">5</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1419" class="blob-num js-line-number" data-line-number="1419"></td>
        <td id="LC1419" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Make sure we un-calc unit changing values - try not to trigger</span></td>
      </tr>
      <tr>
        <td id="L1420" class="blob-num js-line-number" data-line-number="1420"></td>
        <td id="LC1420" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> this code any more often than we have to since it&#39;s expensive</span></td>
      </tr>
      <tr>
        <td id="L1421" class="blob-num js-line-number" data-line-number="1421"></td>
        <td id="LC1421" class="blob-code blob-code-inner js-file-line">                propertyValue <span class="pl-k">=</span> <span class="pl-smi">propertyValue</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>calc<span class="pl-cce">\(</span>0<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-c1">\d</span>]</span><span class="pl-k">*</span> <span class="pl-cce">\+</span> (<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\(\)</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>$1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1422" class="blob-num js-line-number" data-line-number="1422"></td>
        <td id="LC1422" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1423" class="blob-num js-line-number" data-line-number="1423"></td>
        <td id="LC1423" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (data <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">data</span>.<span class="pl-smi">cache</span>[propertyName] <span class="pl-k">!==</span> propertyValue) {</td>
      </tr>
      <tr>
        <td id="L1424" class="blob-num js-line-number" data-line-number="1424"></td>
        <td id="LC1424" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> By setting it to undefined we force a true &quot;get&quot; later</span></td>
      </tr>
      <tr>
        <td id="L1425" class="blob-num js-line-number" data-line-number="1425"></td>
        <td id="LC1425" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">data</span>.<span class="pl-smi">cache</span>[propertyName] <span class="pl-k">=</span> propertyValue <span class="pl-k">||</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L1426" class="blob-num js-line-number" data-line-number="1426"></td>
        <td id="LC1426" class="blob-code blob-code-inner js-file-line">                fn <span class="pl-k">=</span> fn <span class="pl-k">||</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">getNormalization</span>(element, propertyName);</td>
      </tr>
      <tr>
        <td id="L1427" class="blob-num js-line-number" data-line-number="1427"></td>
        <td id="LC1427" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (fn) {</td>
      </tr>
      <tr>
        <td id="L1428" class="blob-num js-line-number" data-line-number="1428"></td>
        <td id="LC1428" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">fn</span>(element, propertyValue);</td>
      </tr>
      <tr>
        <td id="L1429" class="blob-num js-line-number" data-line-number="1429"></td>
        <td id="LC1429" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1430" class="blob-num js-line-number" data-line-number="1430"></td>
        <td id="LC1430" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">debug</span> <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L1431" class="blob-num js-line-number" data-line-number="1431"></td>
        <td id="LC1431" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Set <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> propertyName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> propertyValue, element);</td>
      </tr>
      <tr>
        <td id="L1432" class="blob-num js-line-number" data-line-number="1432"></td>
        <td id="LC1432" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1433" class="blob-num js-line-number" data-line-number="1433"></td>
        <td id="LC1433" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1434" class="blob-num js-line-number" data-line-number="1434"></td>
        <td id="LC1434" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1435" class="blob-num js-line-number" data-line-number="1435"></td>
        <td id="LC1435" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">CSS</span>.<span class="pl-smi">setPropertyValue</span> <span class="pl-k">=</span> setPropertyValue;</td>
      </tr>
      <tr>
        <td id="L1436" class="blob-num js-line-number" data-line-number="1436"></td>
        <td id="LC1436" class="blob-code blob-code-inner js-file-line">    })(<span class="pl-c1">CSS</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1437" class="blob-num js-line-number" data-line-number="1437"></td>
        <td id="LC1437" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1438" class="blob-num js-line-number" data-line-number="1438"></td>
        <td id="LC1438" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1439" class="blob-num js-line-number" data-line-number="1439"></td>
        <td id="LC1439" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1440" class="blob-num js-line-number" data-line-number="1440"></td>
        <td id="LC1440" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1441" class="blob-num js-line-number" data-line-number="1441"></td>
        <td id="LC1441" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1442" class="blob-num js-line-number" data-line-number="1442"></td>
        <td id="LC1442" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1443" class="blob-num js-line-number" data-line-number="1443"></td>
        <td id="LC1443" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1444" class="blob-num js-line-number" data-line-number="1444"></td>
        <td id="LC1444" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1445" class="blob-num js-line-number" data-line-number="1445"></td>
        <td id="LC1445" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1446" class="blob-num js-line-number" data-line-number="1446"></td>
        <td id="LC1446" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1447" class="blob-num js-line-number" data-line-number="1447"></td>
        <td id="LC1447" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Easing;</td>
      </tr>
      <tr>
        <td id="L1448" class="blob-num js-line-number" data-line-number="1448"></td>
        <td id="LC1448" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-smi">Easing</span>) {</td>
      </tr>
      <tr>
        <td id="L1449" class="blob-num js-line-number" data-line-number="1449"></td>
        <td id="LC1449" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">Easings</span> <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1450" class="blob-num js-line-number" data-line-number="1450"></td>
        <td id="LC1450" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1451" class="blob-num js-line-number" data-line-number="1451"></td>
        <td id="LC1451" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Used to register a easing. This should never be called by users</span></td>
      </tr>
      <tr>
        <td id="L1452" class="blob-num js-line-number" data-line-number="1452"></td>
        <td id="LC1452" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * directly, instead it should be called via an action:&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L1453" class="blob-num js-line-number" data-line-number="1453"></td>
        <td id="LC1453" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * &lt;code&gt;Velocity(&quot;registerEasing&quot;, &quot;name&quot;, VelocityEasingFn);&lt;/code&gt;</span></td>
      </tr>
      <tr>
        <td id="L1454" class="blob-num js-line-number" data-line-number="1454"></td>
        <td id="LC1454" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         *</span></td>
      </tr>
      <tr>
        <td id="L1455" class="blob-num js-line-number" data-line-number="1455"></td>
        <td id="LC1455" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L1456" class="blob-num js-line-number" data-line-number="1456"></td>
        <td id="LC1456" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span>        <span class="pl-k">function</span> <span class="pl-en">registerEasing</span>(<span class="pl-smi">args</span>) {</td>
      </tr>
      <tr>
        <td id="L1457" class="blob-num js-line-number" data-line-number="1457"></td>
        <td id="LC1457" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> name <span class="pl-k">=</span> args[<span class="pl-c1">0</span>], callback <span class="pl-k">=</span> args[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1458" class="blob-num js-line-number" data-line-number="1458"></td>
        <td id="LC1458" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isString</span>(name)) {</td>
      </tr>
      <tr>
        <td id="L1459" class="blob-num js-line-number" data-line-number="1459"></td>
        <td id="LC1459" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;registerEasing&#39; name to an invalid value:<span class="pl-pds">&quot;</span></span>, name);</td>
      </tr>
      <tr>
        <td id="L1460" class="blob-num js-line-number" data-line-number="1460"></td>
        <td id="LC1460" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isFunction</span>(callback)) {</td>
      </tr>
      <tr>
        <td id="L1461" class="blob-num js-line-number" data-line-number="1461"></td>
        <td id="LC1461" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;registerEasing&#39; callback to an invalid value:<span class="pl-pds">&quot;</span></span>, name, callback);</td>
      </tr>
      <tr>
        <td id="L1462" class="blob-num js-line-number" data-line-number="1462"></td>
        <td id="LC1462" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">Easing</span>.<span class="pl-smi">Easings</span>[name]) {</td>
      </tr>
      <tr>
        <td id="L1463" class="blob-num js-line-number" data-line-number="1463"></td>
        <td id="LC1463" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to override &#39;registerEasing&#39; callback<span class="pl-pds">&quot;</span></span>, name);</td>
      </tr>
      <tr>
        <td id="L1464" class="blob-num js-line-number" data-line-number="1464"></td>
        <td id="LC1464" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1465" class="blob-num js-line-number" data-line-number="1465"></td>
        <td id="LC1465" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">Easing</span>.<span class="pl-smi">Easings</span>[name] <span class="pl-k">=</span> callback;</td>
      </tr>
      <tr>
        <td id="L1466" class="blob-num js-line-number" data-line-number="1466"></td>
        <td id="LC1466" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1467" class="blob-num js-line-number" data-line-number="1467"></td>
        <td id="LC1467" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1468" class="blob-num js-line-number" data-line-number="1468"></td>
        <td id="LC1468" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">registerEasing</span> <span class="pl-k">=</span> registerEasing;</td>
      </tr>
      <tr>
        <td id="L1469" class="blob-num js-line-number" data-line-number="1469"></td>
        <td id="LC1469" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>registerEasing<span class="pl-pds">&quot;</span></span>, registerEasing ], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L1470" class="blob-num js-line-number" data-line-number="1470"></td>
        <td id="LC1470" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Basic (same as jQuery) easings. <span class="pl-c">*/</span></span>        <span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1471" class="blob-num js-line-number" data-line-number="1471"></td>
        <td id="LC1471" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> startValue <span class="pl-k">+</span> percentComplete <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1472" class="blob-num js-line-number" data-line-number="1472"></td>
        <td id="LC1472" class="blob-code blob-code-inner js-file-line">        } ]);</td>
      </tr>
      <tr>
        <td id="L1473" class="blob-num js-line-number" data-line-number="1473"></td>
        <td id="LC1473" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>swing<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1474" class="blob-num js-line-number" data-line-number="1474"></td>
        <td id="LC1474" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> startValue <span class="pl-k">+</span> (<span class="pl-c1">.5</span> <span class="pl-k">-</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(percentComplete <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>) <span class="pl-k">/</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1475" class="blob-num js-line-number" data-line-number="1475"></td>
        <td id="LC1475" class="blob-code blob-code-inner js-file-line">        } ]);</td>
      </tr>
      <tr>
        <td id="L1476" class="blob-num js-line-number" data-line-number="1476"></td>
        <td id="LC1476" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Bonus &quot;spring&quot; easing, which is a less exaggerated version of easeInOutElastic. <span class="pl-c">*/</span></span>        <span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>spring<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1477" class="blob-num js-line-number" data-line-number="1477"></td>
        <td id="LC1477" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> startValue <span class="pl-k">+</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(percentComplete <span class="pl-k">*</span> <span class="pl-c1">4.5</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(<span class="pl-k">-</span>percentComplete <span class="pl-k">*</span> <span class="pl-c1">6</span>)) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1478" class="blob-num js-line-number" data-line-number="1478"></td>
        <td id="LC1478" class="blob-code blob-code-inner js-file-line">        } ]);</td>
      </tr>
      <tr>
        <td id="L1479" class="blob-num js-line-number" data-line-number="1479"></td>
        <td id="LC1479" class="blob-code blob-code-inner js-file-line">    })(Easing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1480" class="blob-num js-line-number" data-line-number="1480"></td>
        <td id="LC1480" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1481" class="blob-num js-line-number" data-line-number="1481"></td>
        <td id="LC1481" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1482" class="blob-num js-line-number" data-line-number="1482"></td>
        <td id="LC1482" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;easings.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1483" class="blob-num js-line-number" data-line-number="1483"></td>
        <td id="LC1483" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1484" class="blob-num js-line-number" data-line-number="1484"></td>
        <td id="LC1484" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1485" class="blob-num js-line-number" data-line-number="1485"></td>
        <td id="LC1485" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1486" class="blob-num js-line-number" data-line-number="1486"></td>
        <td id="LC1486" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1487" class="blob-num js-line-number" data-line-number="1487"></td>
        <td id="LC1487" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1488" class="blob-num js-line-number" data-line-number="1488"></td>
        <td id="LC1488" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Back easings, based on code from https://github.com/yuichiroharai/easeplus-velocity</span></td>
      </tr>
      <tr>
        <td id="L1489" class="blob-num js-line-number" data-line-number="1489"></td>
        <td id="LC1489" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1490" class="blob-num js-line-number" data-line-number="1490"></td>
        <td id="LC1490" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1491" class="blob-num js-line-number" data-line-number="1491"></td>
        <td id="LC1491" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1492" class="blob-num js-line-number" data-line-number="1492"></td>
        <td id="LC1492" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1493" class="blob-num js-line-number" data-line-number="1493"></td>
        <td id="LC1493" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Easing;</td>
      </tr>
      <tr>
        <td id="L1494" class="blob-num js-line-number" data-line-number="1494"></td>
        <td id="LC1494" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-smi">Easing</span>) {</td>
      </tr>
      <tr>
        <td id="L1495" class="blob-num js-line-number" data-line-number="1495"></td>
        <td id="LC1495" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">registerBackIn</span>(<span class="pl-smi">name</span>, <span class="pl-smi">amount</span>) {</td>
      </tr>
      <tr>
        <td id="L1496" class="blob-num js-line-number" data-line-number="1496"></td>
        <td id="LC1496" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ name, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1497" class="blob-num js-line-number" data-line-number="1497"></td>
        <td id="LC1497" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1498" class="blob-num js-line-number" data-line-number="1498"></td>
        <td id="LC1498" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1499" class="blob-num js-line-number" data-line-number="1499"></td>
        <td id="LC1499" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1500" class="blob-num js-line-number" data-line-number="1500"></td>
        <td id="LC1500" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1501" class="blob-num js-line-number" data-line-number="1501"></td>
        <td id="LC1501" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1502" class="blob-num js-line-number" data-line-number="1502"></td>
        <td id="LC1502" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1503" class="blob-num js-line-number" data-line-number="1503"></td>
        <td id="LC1503" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(percentComplete, <span class="pl-c1">2</span>) <span class="pl-k">*</span> ((amount <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> percentComplete <span class="pl-k">-</span> amount) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1504" class="blob-num js-line-number" data-line-number="1504"></td>
        <td id="LC1504" class="blob-code blob-code-inner js-file-line">            } ]);</td>
      </tr>
      <tr>
        <td id="L1505" class="blob-num js-line-number" data-line-number="1505"></td>
        <td id="LC1505" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1506" class="blob-num js-line-number" data-line-number="1506"></td>
        <td id="LC1506" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">registerBackIn</span> <span class="pl-k">=</span> registerBackIn;</td>
      </tr>
      <tr>
        <td id="L1507" class="blob-num js-line-number" data-line-number="1507"></td>
        <td id="LC1507" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">registerBackOut</span>(<span class="pl-smi">name</span>, <span class="pl-smi">amount</span>) {</td>
      </tr>
      <tr>
        <td id="L1508" class="blob-num js-line-number" data-line-number="1508"></td>
        <td id="LC1508" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ name, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1509" class="blob-num js-line-number" data-line-number="1509"></td>
        <td id="LC1509" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1510" class="blob-num js-line-number" data-line-number="1510"></td>
        <td id="LC1510" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1511" class="blob-num js-line-number" data-line-number="1511"></td>
        <td id="LC1511" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1512" class="blob-num js-line-number" data-line-number="1512"></td>
        <td id="LC1512" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1513" class="blob-num js-line-number" data-line-number="1513"></td>
        <td id="LC1513" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1514" class="blob-num js-line-number" data-line-number="1514"></td>
        <td id="LC1514" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1515" class="blob-num js-line-number" data-line-number="1515"></td>
        <td id="LC1515" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-k">--</span>percentComplete, <span class="pl-c1">2</span>) <span class="pl-k">*</span> ((amount <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> percentComplete <span class="pl-k">+</span> amount) <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1516" class="blob-num js-line-number" data-line-number="1516"></td>
        <td id="LC1516" class="blob-code blob-code-inner js-file-line">            } ]);</td>
      </tr>
      <tr>
        <td id="L1517" class="blob-num js-line-number" data-line-number="1517"></td>
        <td id="LC1517" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1518" class="blob-num js-line-number" data-line-number="1518"></td>
        <td id="LC1518" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">registerBackOut</span> <span class="pl-k">=</span> registerBackOut;</td>
      </tr>
      <tr>
        <td id="L1519" class="blob-num js-line-number" data-line-number="1519"></td>
        <td id="LC1519" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">registerBackInOut</span>(<span class="pl-smi">name</span>, <span class="pl-smi">amount</span>) {</td>
      </tr>
      <tr>
        <td id="L1520" class="blob-num js-line-number" data-line-number="1520"></td>
        <td id="LC1520" class="blob-code blob-code-inner js-file-line">            amount <span class="pl-k">*=</span> <span class="pl-c1">1.525</span>;</td>
      </tr>
      <tr>
        <td id="L1521" class="blob-num js-line-number" data-line-number="1521"></td>
        <td id="LC1521" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ name, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1522" class="blob-num js-line-number" data-line-number="1522"></td>
        <td id="LC1522" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1523" class="blob-num js-line-number" data-line-number="1523"></td>
        <td id="LC1523" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1524" class="blob-num js-line-number" data-line-number="1524"></td>
        <td id="LC1524" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1525" class="blob-num js-line-number" data-line-number="1525"></td>
        <td id="LC1525" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1526" class="blob-num js-line-number" data-line-number="1526"></td>
        <td id="LC1526" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1527" class="blob-num js-line-number" data-line-number="1527"></td>
        <td id="LC1527" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1528" class="blob-num js-line-number" data-line-number="1528"></td>
        <td id="LC1528" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> ((percentComplete <span class="pl-k">*=</span> <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(percentComplete, <span class="pl-c1">2</span>) <span class="pl-k">*</span> ((amount <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> percentComplete <span class="pl-k">-</span> amount) <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(percentComplete <span class="pl-k">-=</span> <span class="pl-c1">2</span>, <span class="pl-c1">2</span>) <span class="pl-k">*</span> ((amount <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> percentComplete <span class="pl-k">+</span> amount) <span class="pl-k">+</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> <span class="pl-c1">.5</span> <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1529" class="blob-num js-line-number" data-line-number="1529"></td>
        <td id="LC1529" class="blob-code blob-code-inner js-file-line">            } ]);</td>
      </tr>
      <tr>
        <td id="L1530" class="blob-num js-line-number" data-line-number="1530"></td>
        <td id="LC1530" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1531" class="blob-num js-line-number" data-line-number="1531"></td>
        <td id="LC1531" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">registerBackInOut</span> <span class="pl-k">=</span> registerBackInOut;</td>
      </tr>
      <tr>
        <td id="L1532" class="blob-num js-line-number" data-line-number="1532"></td>
        <td id="LC1532" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">registerBackIn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>easeInBack<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1.7</span>);</td>
      </tr>
      <tr>
        <td id="L1533" class="blob-num js-line-number" data-line-number="1533"></td>
        <td id="LC1533" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">registerBackOut</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>easeOutBack<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1.7</span>);</td>
      </tr>
      <tr>
        <td id="L1534" class="blob-num js-line-number" data-line-number="1534"></td>
        <td id="LC1534" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">registerBackInOut</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutBack<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1.7</span>);</td>
      </tr>
      <tr>
        <td id="L1535" class="blob-num js-line-number" data-line-number="1535"></td>
        <td id="LC1535" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: Expose these as actions to register custom easings?</span></td>
      </tr>
      <tr>
        <td id="L1536" class="blob-num js-line-number" data-line-number="1536"></td>
        <td id="LC1536" class="blob-code blob-code-inner js-file-line">        })(Easing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1537" class="blob-num js-line-number" data-line-number="1537"></td>
        <td id="LC1537" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1538" class="blob-num js-line-number" data-line-number="1538"></td>
        <td id="LC1538" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1539" class="blob-num js-line-number" data-line-number="1539"></td>
        <td id="LC1539" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;easings.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1540" class="blob-num js-line-number" data-line-number="1540"></td>
        <td id="LC1540" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1541" class="blob-num js-line-number" data-line-number="1541"></td>
        <td id="LC1541" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1542" class="blob-num js-line-number" data-line-number="1542"></td>
        <td id="LC1542" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1543" class="blob-num js-line-number" data-line-number="1543"></td>
        <td id="LC1543" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1544" class="blob-num js-line-number" data-line-number="1544"></td>
        <td id="LC1544" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1545" class="blob-num js-line-number" data-line-number="1545"></td>
        <td id="LC1545" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License</span></td>
      </tr>
      <tr>
        <td id="L1546" class="blob-num js-line-number" data-line-number="1546"></td>
        <td id="LC1546" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1547" class="blob-num js-line-number" data-line-number="1547"></td>
        <td id="LC1547" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1548" class="blob-num js-line-number" data-line-number="1548"></td>
        <td id="LC1548" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1549" class="blob-num js-line-number" data-line-number="1549"></td>
        <td id="LC1549" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1550" class="blob-num js-line-number" data-line-number="1550"></td>
        <td id="LC1550" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Easing;</td>
      </tr>
      <tr>
        <td id="L1551" class="blob-num js-line-number" data-line-number="1551"></td>
        <td id="LC1551" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-smi">Easing</span>) {</td>
      </tr>
      <tr>
        <td id="L1552" class="blob-num js-line-number" data-line-number="1552"></td>
        <td id="LC1552" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1553" class="blob-num js-line-number" data-line-number="1553"></td>
        <td id="LC1553" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Fix to a range of &lt;code&gt;0 &lt;= num &lt;= 1&lt;/code&gt;.</span></td>
      </tr>
      <tr>
        <td id="L1554" class="blob-num js-line-number" data-line-number="1554"></td>
        <td id="LC1554" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1555" class="blob-num js-line-number" data-line-number="1555"></td>
        <td id="LC1555" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">fixRange</span>(<span class="pl-smi">num</span>) {</td>
      </tr>
      <tr>
        <td id="L1556" class="blob-num js-line-number" data-line-number="1556"></td>
        <td id="LC1556" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(num, <span class="pl-c1">0</span>), <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1557" class="blob-num js-line-number" data-line-number="1557"></td>
        <td id="LC1557" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1558" class="blob-num js-line-number" data-line-number="1558"></td>
        <td id="LC1558" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">A</span>(<span class="pl-smi">aA1</span>, <span class="pl-smi">aA2</span>) {</td>
      </tr>
      <tr>
        <td id="L1559" class="blob-num js-line-number" data-line-number="1559"></td>
        <td id="LC1559" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> aA2 <span class="pl-k">+</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> aA1;</td>
      </tr>
      <tr>
        <td id="L1560" class="blob-num js-line-number" data-line-number="1560"></td>
        <td id="LC1560" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1561" class="blob-num js-line-number" data-line-number="1561"></td>
        <td id="LC1561" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">B</span>(<span class="pl-smi">aA1</span>, <span class="pl-smi">aA2</span>) {</td>
      </tr>
      <tr>
        <td id="L1562" class="blob-num js-line-number" data-line-number="1562"></td>
        <td id="LC1562" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> aA2 <span class="pl-k">-</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> aA1;</td>
      </tr>
      <tr>
        <td id="L1563" class="blob-num js-line-number" data-line-number="1563"></td>
        <td id="LC1563" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1564" class="blob-num js-line-number" data-line-number="1564"></td>
        <td id="LC1564" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">C</span>(<span class="pl-smi">aA1</span>) {</td>
      </tr>
      <tr>
        <td id="L1565" class="blob-num js-line-number" data-line-number="1565"></td>
        <td id="LC1565" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> aA1;</td>
      </tr>
      <tr>
        <td id="L1566" class="blob-num js-line-number" data-line-number="1566"></td>
        <td id="LC1566" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1567" class="blob-num js-line-number" data-line-number="1567"></td>
        <td id="LC1567" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">calcBezier</span>(<span class="pl-smi">aT</span>, <span class="pl-smi">aA1</span>, <span class="pl-smi">aA2</span>) {</td>
      </tr>
      <tr>
        <td id="L1568" class="blob-num js-line-number" data-line-number="1568"></td>
        <td id="LC1568" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> ((<span class="pl-en">A</span>(aA1, aA2) <span class="pl-k">*</span> aT <span class="pl-k">+</span> <span class="pl-en">B</span>(aA1, aA2)) <span class="pl-k">*</span> aT <span class="pl-k">+</span> <span class="pl-en">C</span>(aA1)) <span class="pl-k">*</span> aT;</td>
      </tr>
      <tr>
        <td id="L1569" class="blob-num js-line-number" data-line-number="1569"></td>
        <td id="LC1569" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1570" class="blob-num js-line-number" data-line-number="1570"></td>
        <td id="LC1570" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">getSlope</span>(<span class="pl-smi">aT</span>, <span class="pl-smi">aA1</span>, <span class="pl-smi">aA2</span>) {</td>
      </tr>
      <tr>
        <td id="L1571" class="blob-num js-line-number" data-line-number="1571"></td>
        <td id="LC1571" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> <span class="pl-en">A</span>(aA1, aA2) <span class="pl-k">*</span> aT <span class="pl-k">*</span> aT <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-en">B</span>(aA1, aA2) <span class="pl-k">*</span> aT <span class="pl-k">+</span> <span class="pl-en">C</span>(aA1);</td>
      </tr>
      <tr>
        <td id="L1572" class="blob-num js-line-number" data-line-number="1572"></td>
        <td id="LC1572" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1573" class="blob-num js-line-number" data-line-number="1573"></td>
        <td id="LC1573" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">generateBezier</span>(<span class="pl-smi">mX1</span>, <span class="pl-smi">mY1</span>, <span class="pl-smi">mX2</span>, <span class="pl-smi">mY2</span>) {</td>
      </tr>
      <tr>
        <td id="L1574" class="blob-num js-line-number" data-line-number="1574"></td>
        <td id="LC1574" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> <span class="pl-c1">NEWTON_ITERATIONS</span> <span class="pl-k">=</span> <span class="pl-c1">4</span>, <span class="pl-c1">NEWTON_MIN_SLOPE</span> <span class="pl-k">=</span> <span class="pl-c1">.001</span>, <span class="pl-c1">SUBDIVISION_PRECISION</span> <span class="pl-k">=</span> <span class="pl-c1">1e-7</span>, <span class="pl-c1">SUBDIVISION_MAX_ITERATIONS</span> <span class="pl-k">=</span> <span class="pl-c1">10</span>, kSplineTableSize <span class="pl-k">=</span> <span class="pl-c1">11</span>, kSampleStepSize <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">/</span> (kSplineTableSize <span class="pl-k">-</span> <span class="pl-c1">1</span>), float32ArraySupported <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Float32Array<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> <span class="pl-c1">window</span>;</td>
      </tr>
      <tr>
        <td id="L1575" class="blob-num js-line-number" data-line-number="1575"></td>
        <td id="LC1575" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Must contain four arguments. <span class="pl-c">*/</span></span>            <span class="pl-k">if</span> (<span class="pl-c1">arguments</span>.<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">4</span>) {</td>
      </tr>
      <tr>
        <td id="L1576" class="blob-num js-line-number" data-line-number="1576"></td>
        <td id="LC1576" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1577" class="blob-num js-line-number" data-line-number="1577"></td>
        <td id="LC1577" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1578" class="blob-num js-line-number" data-line-number="1578"></td>
        <td id="LC1578" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Arguments must be numbers. <span class="pl-c">*/</span></span>            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L1579" class="blob-num js-line-number" data-line-number="1579"></td>
        <td id="LC1579" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">arguments</span>[i] <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> <span class="pl-c1">isNaN</span>(<span class="pl-c1">arguments</span>[i]) <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-c1">isFinite</span>(<span class="pl-c1">arguments</span>[i])) {</td>
      </tr>
      <tr>
        <td id="L1580" class="blob-num js-line-number" data-line-number="1580"></td>
        <td id="LC1580" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1581" class="blob-num js-line-number" data-line-number="1581"></td>
        <td id="LC1581" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1582" class="blob-num js-line-number" data-line-number="1582"></td>
        <td id="LC1582" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1583" class="blob-num js-line-number" data-line-number="1583"></td>
        <td id="LC1583" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> X values must be in the [0, 1] range. <span class="pl-c">*/</span></span>            mX1 <span class="pl-k">=</span> <span class="pl-en">fixRange</span>(mX1);</td>
      </tr>
      <tr>
        <td id="L1584" class="blob-num js-line-number" data-line-number="1584"></td>
        <td id="LC1584" class="blob-code blob-code-inner js-file-line">            mX2 <span class="pl-k">=</span> <span class="pl-en">fixRange</span>(mX2);</td>
      </tr>
      <tr>
        <td id="L1585" class="blob-num js-line-number" data-line-number="1585"></td>
        <td id="LC1585" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> mSampleValues <span class="pl-k">=</span> float32ArraySupported <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(kSplineTableSize) <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(kSplineTableSize);</td>
      </tr>
      <tr>
        <td id="L1586" class="blob-num js-line-number" data-line-number="1586"></td>
        <td id="LC1586" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">newtonRaphsonIterate</span>(<span class="pl-smi">aX</span>, <span class="pl-smi">aGuessT</span>) {</td>
      </tr>
      <tr>
        <td id="L1587" class="blob-num js-line-number" data-line-number="1587"></td>
        <td id="LC1587" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-c1">NEWTON_ITERATIONS</span>; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L1588" class="blob-num js-line-number" data-line-number="1588"></td>
        <td id="LC1588" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> currentSlope <span class="pl-k">=</span> <span class="pl-en">getSlope</span>(aGuessT, mX1, mX2);</td>
      </tr>
      <tr>
        <td id="L1589" class="blob-num js-line-number" data-line-number="1589"></td>
        <td id="LC1589" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (currentSlope <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1590" class="blob-num js-line-number" data-line-number="1590"></td>
        <td id="LC1590" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> aGuessT;</td>
      </tr>
      <tr>
        <td id="L1591" class="blob-num js-line-number" data-line-number="1591"></td>
        <td id="LC1591" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1592" class="blob-num js-line-number" data-line-number="1592"></td>
        <td id="LC1592" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> currentX <span class="pl-k">=</span> <span class="pl-en">calcBezier</span>(aGuessT, mX1, mX2) <span class="pl-k">-</span> aX;</td>
      </tr>
      <tr>
        <td id="L1593" class="blob-num js-line-number" data-line-number="1593"></td>
        <td id="LC1593" class="blob-code blob-code-inner js-file-line">                    aGuessT <span class="pl-k">-=</span> currentX <span class="pl-k">/</span> currentSlope;</td>
      </tr>
      <tr>
        <td id="L1594" class="blob-num js-line-number" data-line-number="1594"></td>
        <td id="LC1594" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1595" class="blob-num js-line-number" data-line-number="1595"></td>
        <td id="LC1595" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> aGuessT;</td>
      </tr>
      <tr>
        <td id="L1596" class="blob-num js-line-number" data-line-number="1596"></td>
        <td id="LC1596" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1597" class="blob-num js-line-number" data-line-number="1597"></td>
        <td id="LC1597" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">calcSampleValues</span>() {</td>
      </tr>
      <tr>
        <td id="L1598" class="blob-num js-line-number" data-line-number="1598"></td>
        <td id="LC1598" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> kSplineTableSize; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L1599" class="blob-num js-line-number" data-line-number="1599"></td>
        <td id="LC1599" class="blob-code blob-code-inner js-file-line">                    mSampleValues[i] <span class="pl-k">=</span> <span class="pl-en">calcBezier</span>(i <span class="pl-k">*</span> kSampleStepSize, mX1, mX2);</td>
      </tr>
      <tr>
        <td id="L1600" class="blob-num js-line-number" data-line-number="1600"></td>
        <td id="LC1600" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1601" class="blob-num js-line-number" data-line-number="1601"></td>
        <td id="LC1601" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1602" class="blob-num js-line-number" data-line-number="1602"></td>
        <td id="LC1602" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">binarySubdivide</span>(<span class="pl-smi">aX</span>, <span class="pl-smi">aA</span>, <span class="pl-smi">aB</span>) {</td>
      </tr>
      <tr>
        <td id="L1603" class="blob-num js-line-number" data-line-number="1603"></td>
        <td id="LC1603" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> currentX, currentT, i <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1604" class="blob-num js-line-number" data-line-number="1604"></td>
        <td id="LC1604" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L1605" class="blob-num js-line-number" data-line-number="1605"></td>
        <td id="LC1605" class="blob-code blob-code-inner js-file-line">                    currentT <span class="pl-k">=</span> aA <span class="pl-k">+</span> (aB <span class="pl-k">-</span> aA) <span class="pl-k">/</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1606" class="blob-num js-line-number" data-line-number="1606"></td>
        <td id="LC1606" class="blob-code blob-code-inner js-file-line">                    currentX <span class="pl-k">=</span> <span class="pl-en">calcBezier</span>(currentT, mX1, mX2) <span class="pl-k">-</span> aX;</td>
      </tr>
      <tr>
        <td id="L1607" class="blob-num js-line-number" data-line-number="1607"></td>
        <td id="LC1607" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (currentX <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1608" class="blob-num js-line-number" data-line-number="1608"></td>
        <td id="LC1608" class="blob-code blob-code-inner js-file-line">                        aB <span class="pl-k">=</span> currentT;</td>
      </tr>
      <tr>
        <td id="L1609" class="blob-num js-line-number" data-line-number="1609"></td>
        <td id="LC1609" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1610" class="blob-num js-line-number" data-line-number="1610"></td>
        <td id="LC1610" class="blob-code blob-code-inner js-file-line">                        aA <span class="pl-k">=</span> currentT;</td>
      </tr>
      <tr>
        <td id="L1611" class="blob-num js-line-number" data-line-number="1611"></td>
        <td id="LC1611" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1612" class="blob-num js-line-number" data-line-number="1612"></td>
        <td id="LC1612" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">while</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(currentX) <span class="pl-k">&gt;</span> <span class="pl-c1">SUBDIVISION_PRECISION</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> <span class="pl-c1">SUBDIVISION_MAX_ITERATIONS</span>);</td>
      </tr>
      <tr>
        <td id="L1613" class="blob-num js-line-number" data-line-number="1613"></td>
        <td id="LC1613" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> currentT;</td>
      </tr>
      <tr>
        <td id="L1614" class="blob-num js-line-number" data-line-number="1614"></td>
        <td id="LC1614" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1615" class="blob-num js-line-number" data-line-number="1615"></td>
        <td id="LC1615" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">getTForX</span>(<span class="pl-smi">aX</span>) {</td>
      </tr>
      <tr>
        <td id="L1616" class="blob-num js-line-number" data-line-number="1616"></td>
        <td id="LC1616" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> intervalStart <span class="pl-k">=</span> <span class="pl-c1">0</span>, currentSample <span class="pl-k">=</span> <span class="pl-c1">1</span>, lastSample <span class="pl-k">=</span> kSplineTableSize <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1617" class="blob-num js-line-number" data-line-number="1617"></td>
        <td id="LC1617" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (;currentSample <span class="pl-k">!==</span> lastSample <span class="pl-k">&amp;&amp;</span> mSampleValues[currentSample] <span class="pl-k">&lt;=</span> aX; <span class="pl-k">++</span>currentSample) {</td>
      </tr>
      <tr>
        <td id="L1618" class="blob-num js-line-number" data-line-number="1618"></td>
        <td id="LC1618" class="blob-code blob-code-inner js-file-line">                    intervalStart <span class="pl-k">+=</span> kSampleStepSize;</td>
      </tr>
      <tr>
        <td id="L1619" class="blob-num js-line-number" data-line-number="1619"></td>
        <td id="LC1619" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1620" class="blob-num js-line-number" data-line-number="1620"></td>
        <td id="LC1620" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">--</span>currentSample;</td>
      </tr>
      <tr>
        <td id="L1621" class="blob-num js-line-number" data-line-number="1621"></td>
        <td id="LC1621" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> dist <span class="pl-k">=</span> (aX <span class="pl-k">-</span> mSampleValues[currentSample]) <span class="pl-k">/</span> (mSampleValues[currentSample <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">-</span> mSampleValues[currentSample]), guessForT <span class="pl-k">=</span> intervalStart <span class="pl-k">+</span> dist <span class="pl-k">*</span> kSampleStepSize, initialSlope <span class="pl-k">=</span> <span class="pl-en">getSlope</span>(guessForT, mX1, mX2);</td>
      </tr>
      <tr>
        <td id="L1622" class="blob-num js-line-number" data-line-number="1622"></td>
        <td id="LC1622" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (initialSlope <span class="pl-k">&gt;=</span> <span class="pl-c1">NEWTON_MIN_SLOPE</span>) {</td>
      </tr>
      <tr>
        <td id="L1623" class="blob-num js-line-number" data-line-number="1623"></td>
        <td id="LC1623" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-en">newtonRaphsonIterate</span>(aX, guessForT);</td>
      </tr>
      <tr>
        <td id="L1624" class="blob-num js-line-number" data-line-number="1624"></td>
        <td id="LC1624" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (initialSlope <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1625" class="blob-num js-line-number" data-line-number="1625"></td>
        <td id="LC1625" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> guessForT;</td>
      </tr>
      <tr>
        <td id="L1626" class="blob-num js-line-number" data-line-number="1626"></td>
        <td id="LC1626" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1627" class="blob-num js-line-number" data-line-number="1627"></td>
        <td id="LC1627" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-en">binarySubdivide</span>(aX, intervalStart, intervalStart <span class="pl-k">+</span> kSampleStepSize);</td>
      </tr>
      <tr>
        <td id="L1628" class="blob-num js-line-number" data-line-number="1628"></td>
        <td id="LC1628" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1629" class="blob-num js-line-number" data-line-number="1629"></td>
        <td id="LC1629" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1630" class="blob-num js-line-number" data-line-number="1630"></td>
        <td id="LC1630" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> _precomputed <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1631" class="blob-num js-line-number" data-line-number="1631"></td>
        <td id="LC1631" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">function</span> <span class="pl-en">precompute</span>() {</td>
      </tr>
      <tr>
        <td id="L1632" class="blob-num js-line-number" data-line-number="1632"></td>
        <td id="LC1632" class="blob-code blob-code-inner js-file-line">                _precomputed <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1633" class="blob-num js-line-number" data-line-number="1633"></td>
        <td id="LC1633" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (mX1 <span class="pl-k">!==</span> mY1 <span class="pl-k">||</span> mX2 <span class="pl-k">!==</span> mY2) {</td>
      </tr>
      <tr>
        <td id="L1634" class="blob-num js-line-number" data-line-number="1634"></td>
        <td id="LC1634" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">calcSampleValues</span>();</td>
      </tr>
      <tr>
        <td id="L1635" class="blob-num js-line-number" data-line-number="1635"></td>
        <td id="LC1635" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1636" class="blob-num js-line-number" data-line-number="1636"></td>
        <td id="LC1636" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1637" class="blob-num js-line-number" data-line-number="1637"></td>
        <td id="LC1637" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> <span class="pl-en">f</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>, <span class="pl-smi">property</span>) {</td>
      </tr>
      <tr>
        <td id="L1638" class="blob-num js-line-number" data-line-number="1638"></td>
        <td id="LC1638" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>_precomputed) {</td>
      </tr>
      <tr>
        <td id="L1639" class="blob-num js-line-number" data-line-number="1639"></td>
        <td id="LC1639" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">precompute</span>();</td>
      </tr>
      <tr>
        <td id="L1640" class="blob-num js-line-number" data-line-number="1640"></td>
        <td id="LC1640" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1641" class="blob-num js-line-number" data-line-number="1641"></td>
        <td id="LC1641" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1642" class="blob-num js-line-number" data-line-number="1642"></td>
        <td id="LC1642" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1643" class="blob-num js-line-number" data-line-number="1643"></td>
        <td id="LC1643" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1644" class="blob-num js-line-number" data-line-number="1644"></td>
        <td id="LC1644" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1645" class="blob-num js-line-number" data-line-number="1645"></td>
        <td id="LC1645" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1646" class="blob-num js-line-number" data-line-number="1646"></td>
        <td id="LC1646" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1647" class="blob-num js-line-number" data-line-number="1647"></td>
        <td id="LC1647" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (mX1 <span class="pl-k">===</span> mY1 <span class="pl-k">&amp;&amp;</span> mX2 <span class="pl-k">===</span> mY2) {</td>
      </tr>
      <tr>
        <td id="L1648" class="blob-num js-line-number" data-line-number="1648"></td>
        <td id="LC1648" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue <span class="pl-k">+</span> percentComplete <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1649" class="blob-num js-line-number" data-line-number="1649"></td>
        <td id="LC1649" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1650" class="blob-num js-line-number" data-line-number="1650"></td>
        <td id="LC1650" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> startValue <span class="pl-k">+</span> <span class="pl-en">calcBezier</span>(<span class="pl-en">getTForX</span>(percentComplete), mY1, mY2) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1651" class="blob-num js-line-number" data-line-number="1651"></td>
        <td id="LC1651" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1652" class="blob-num js-line-number" data-line-number="1652"></td>
        <td id="LC1652" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">f</span>.<span class="pl-en">getControlPoints</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1653" class="blob-num js-line-number" data-line-number="1653"></td>
        <td id="LC1653" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> [ {</td>
      </tr>
      <tr>
        <td id="L1654" class="blob-num js-line-number" data-line-number="1654"></td>
        <td id="LC1654" class="blob-code blob-code-inner js-file-line">                    x<span class="pl-k">:</span> mX1,</td>
      </tr>
      <tr>
        <td id="L1655" class="blob-num js-line-number" data-line-number="1655"></td>
        <td id="LC1655" class="blob-code blob-code-inner js-file-line">                    y<span class="pl-k">:</span> mY1</td>
      </tr>
      <tr>
        <td id="L1656" class="blob-num js-line-number" data-line-number="1656"></td>
        <td id="LC1656" class="blob-code blob-code-inner js-file-line">                }, {</td>
      </tr>
      <tr>
        <td id="L1657" class="blob-num js-line-number" data-line-number="1657"></td>
        <td id="LC1657" class="blob-code blob-code-inner js-file-line">                    x<span class="pl-k">:</span> mX2,</td>
      </tr>
      <tr>
        <td id="L1658" class="blob-num js-line-number" data-line-number="1658"></td>
        <td id="LC1658" class="blob-code blob-code-inner js-file-line">                    y<span class="pl-k">:</span> mY2</td>
      </tr>
      <tr>
        <td id="L1659" class="blob-num js-line-number" data-line-number="1659"></td>
        <td id="LC1659" class="blob-code blob-code-inner js-file-line">                } ];</td>
      </tr>
      <tr>
        <td id="L1660" class="blob-num js-line-number" data-line-number="1660"></td>
        <td id="LC1660" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1661" class="blob-num js-line-number" data-line-number="1661"></td>
        <td id="LC1661" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>generateBezier(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> [ mX1, mY1, mX2, mY2 ] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1662" class="blob-num js-line-number" data-line-number="1662"></td>
        <td id="LC1662" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">f</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1663" class="blob-num js-line-number" data-line-number="1663"></td>
        <td id="LC1663" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> str;</td>
      </tr>
      <tr>
        <td id="L1664" class="blob-num js-line-number" data-line-number="1664"></td>
        <td id="LC1664" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1665" class="blob-num js-line-number" data-line-number="1665"></td>
        <td id="LC1665" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> f;</td>
      </tr>
      <tr>
        <td id="L1666" class="blob-num js-line-number" data-line-number="1666"></td>
        <td id="LC1666" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1667" class="blob-num js-line-number" data-line-number="1667"></td>
        <td id="LC1667" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">generateBezier</span> <span class="pl-k">=</span> generateBezier;</td>
      </tr>
      <tr>
        <td id="L1668" class="blob-num js-line-number" data-line-number="1668"></td>
        <td id="LC1668" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Common easings <span class="pl-c">*/</span></span>        <span class="pl-k">var</span> easeIn <span class="pl-k">=</span> <span class="pl-en">generateBezier</span>(<span class="pl-c1">.42</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>), easeOut <span class="pl-k">=</span> <span class="pl-en">generateBezier</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">.58</span>, <span class="pl-c1">1</span>), easeInOut <span class="pl-k">=</span> <span class="pl-en">generateBezier</span>(<span class="pl-c1">.42</span>, <span class="pl-c1">0</span>, <span class="pl-c1">.58</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1669" class="blob-num js-line-number" data-line-number="1669"></td>
        <td id="LC1669" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>ease<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.25</span>, <span class="pl-c1">.1</span>, <span class="pl-c1">.25</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1670" class="blob-num js-line-number" data-line-number="1670"></td>
        <td id="LC1670" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeIn<span class="pl-pds">&quot;</span></span>, easeIn ]);</td>
      </tr>
      <tr>
        <td id="L1671" class="blob-num js-line-number" data-line-number="1671"></td>
        <td id="LC1671" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>ease-in<span class="pl-pds">&quot;</span></span>, easeIn ]);</td>
      </tr>
      <tr>
        <td id="L1672" class="blob-num js-line-number" data-line-number="1672"></td>
        <td id="LC1672" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeOut<span class="pl-pds">&quot;</span></span>, easeOut ]);</td>
      </tr>
      <tr>
        <td id="L1673" class="blob-num js-line-number" data-line-number="1673"></td>
        <td id="LC1673" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>ease-out<span class="pl-pds">&quot;</span></span>, easeOut ]);</td>
      </tr>
      <tr>
        <td id="L1674" class="blob-num js-line-number" data-line-number="1674"></td>
        <td id="LC1674" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInOut<span class="pl-pds">&quot;</span></span>, easeInOut ]);</td>
      </tr>
      <tr>
        <td id="L1675" class="blob-num js-line-number" data-line-number="1675"></td>
        <td id="LC1675" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>ease-in-out<span class="pl-pds">&quot;</span></span>, easeInOut ]);</td>
      </tr>
      <tr>
        <td id="L1676" class="blob-num js-line-number" data-line-number="1676"></td>
        <td id="LC1676" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInSine<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.47</span>, <span class="pl-c1">0</span>, <span class="pl-c1">.745</span>, <span class="pl-c1">.715</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1677" class="blob-num js-line-number" data-line-number="1677"></td>
        <td id="LC1677" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutSine<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.39</span>, <span class="pl-c1">.575</span>, <span class="pl-c1">.565</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1678" class="blob-num js-line-number" data-line-number="1678"></td>
        <td id="LC1678" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutSine<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.445</span>, <span class="pl-c1">.05</span>, <span class="pl-c1">.55</span>, <span class="pl-c1">.95</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1679" class="blob-num js-line-number" data-line-number="1679"></td>
        <td id="LC1679" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInQuad<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.55</span>, <span class="pl-c1">.085</span>, <span class="pl-c1">.68</span>, <span class="pl-c1">.53</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1680" class="blob-num js-line-number" data-line-number="1680"></td>
        <td id="LC1680" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutQuad<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.25</span>, <span class="pl-c1">.46</span>, <span class="pl-c1">.45</span>, <span class="pl-c1">.94</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1681" class="blob-num js-line-number" data-line-number="1681"></td>
        <td id="LC1681" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutQuad<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.455</span>, <span class="pl-c1">.03</span>, <span class="pl-c1">.515</span>, <span class="pl-c1">.955</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1682" class="blob-num js-line-number" data-line-number="1682"></td>
        <td id="LC1682" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInCubic<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.55</span>, <span class="pl-c1">.055</span>, <span class="pl-c1">.675</span>, <span class="pl-c1">.19</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1683" class="blob-num js-line-number" data-line-number="1683"></td>
        <td id="LC1683" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutCubic<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.215</span>, <span class="pl-c1">.61</span>, <span class="pl-c1">.355</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1684" class="blob-num js-line-number" data-line-number="1684"></td>
        <td id="LC1684" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutCubic<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.645</span>, <span class="pl-c1">.045</span>, <span class="pl-c1">.355</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1685" class="blob-num js-line-number" data-line-number="1685"></td>
        <td id="LC1685" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInQuart<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.895</span>, <span class="pl-c1">.03</span>, <span class="pl-c1">.685</span>, <span class="pl-c1">.22</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1686" class="blob-num js-line-number" data-line-number="1686"></td>
        <td id="LC1686" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutQuart<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.165</span>, <span class="pl-c1">.84</span>, <span class="pl-c1">.44</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1687" class="blob-num js-line-number" data-line-number="1687"></td>
        <td id="LC1687" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutQuart<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.77</span>, <span class="pl-c1">0</span>, <span class="pl-c1">.175</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1688" class="blob-num js-line-number" data-line-number="1688"></td>
        <td id="LC1688" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInQuint<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.755</span>, <span class="pl-c1">.05</span>, <span class="pl-c1">.855</span>, <span class="pl-c1">.06</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1689" class="blob-num js-line-number" data-line-number="1689"></td>
        <td id="LC1689" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutQuint<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.23</span>, <span class="pl-c1">1</span>, <span class="pl-c1">.32</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1690" class="blob-num js-line-number" data-line-number="1690"></td>
        <td id="LC1690" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutQuint<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.86</span>, <span class="pl-c1">0</span>, <span class="pl-c1">.07</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1691" class="blob-num js-line-number" data-line-number="1691"></td>
        <td id="LC1691" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInExpo<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.95</span>, <span class="pl-c1">.05</span>, <span class="pl-c1">.795</span>, <span class="pl-c1">.035</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1692" class="blob-num js-line-number" data-line-number="1692"></td>
        <td id="LC1692" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutExpo<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.19</span>, <span class="pl-c1">1</span>, <span class="pl-c1">.22</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1693" class="blob-num js-line-number" data-line-number="1693"></td>
        <td id="LC1693" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutExpo<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1694" class="blob-num js-line-number" data-line-number="1694"></td>
        <td id="LC1694" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInCirc<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.6</span>, <span class="pl-c1">.04</span>, <span class="pl-c1">.98</span>, <span class="pl-c1">.335</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1695" class="blob-num js-line-number" data-line-number="1695"></td>
        <td id="LC1695" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutCirc<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.075</span>, <span class="pl-c1">.82</span>, <span class="pl-c1">.165</span>, <span class="pl-c1">1</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1696" class="blob-num js-line-number" data-line-number="1696"></td>
        <td id="LC1696" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutCirc<span class="pl-pds">&quot;</span></span>, <span class="pl-en">generateBezier</span>(<span class="pl-c1">.785</span>, <span class="pl-c1">.135</span>, <span class="pl-c1">.15</span>, <span class="pl-c1">.86</span>) ]);</td>
      </tr>
      <tr>
        <td id="L1697" class="blob-num js-line-number" data-line-number="1697"></td>
        <td id="LC1697" class="blob-code blob-code-inner js-file-line">    })(Easing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1698" class="blob-num js-line-number" data-line-number="1698"></td>
        <td id="LC1698" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1699" class="blob-num js-line-number" data-line-number="1699"></td>
        <td id="LC1699" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1700" class="blob-num js-line-number" data-line-number="1700"></td>
        <td id="LC1700" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;easings.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1701" class="blob-num js-line-number" data-line-number="1701"></td>
        <td id="LC1701" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1702" class="blob-num js-line-number" data-line-number="1702"></td>
        <td id="LC1702" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1703" class="blob-num js-line-number" data-line-number="1703"></td>
        <td id="LC1703" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1704" class="blob-num js-line-number" data-line-number="1704"></td>
        <td id="LC1704" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1705" class="blob-num js-line-number" data-line-number="1705"></td>
        <td id="LC1705" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1706" class="blob-num js-line-number" data-line-number="1706"></td>
        <td id="LC1706" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Bounce easings, based on code from https://github.com/yuichiroharai/easeplus-velocity</span></td>
      </tr>
      <tr>
        <td id="L1707" class="blob-num js-line-number" data-line-number="1707"></td>
        <td id="LC1707" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1708" class="blob-num js-line-number" data-line-number="1708"></td>
        <td id="LC1708" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1709" class="blob-num js-line-number" data-line-number="1709"></td>
        <td id="LC1709" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1710" class="blob-num js-line-number" data-line-number="1710"></td>
        <td id="LC1710" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1711" class="blob-num js-line-number" data-line-number="1711"></td>
        <td id="LC1711" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Easing;</td>
      </tr>
      <tr>
        <td id="L1712" class="blob-num js-line-number" data-line-number="1712"></td>
        <td id="LC1712" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-smi">Easing</span>) {</td>
      </tr>
      <tr>
        <td id="L1713" class="blob-num js-line-number" data-line-number="1713"></td>
        <td id="LC1713" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">easeOutBounce</span>(<span class="pl-smi">percentComplete</span>) {</td>
      </tr>
      <tr>
        <td id="L1714" class="blob-num js-line-number" data-line-number="1714"></td>
        <td id="LC1714" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (percentComplete <span class="pl-k">&lt;</span> <span class="pl-c1">1</span> <span class="pl-k">/</span> <span class="pl-c1">2.75</span>) {</td>
      </tr>
      <tr>
        <td id="L1715" class="blob-num js-line-number" data-line-number="1715"></td>
        <td id="LC1715" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> percentComplete <span class="pl-k">*</span> percentComplete;</td>
      </tr>
      <tr>
        <td id="L1716" class="blob-num js-line-number" data-line-number="1716"></td>
        <td id="LC1716" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1717" class="blob-num js-line-number" data-line-number="1717"></td>
        <td id="LC1717" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (percentComplete <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">/</span> <span class="pl-c1">2.75</span>) {</td>
      </tr>
      <tr>
        <td id="L1718" class="blob-num js-line-number" data-line-number="1718"></td>
        <td id="LC1718" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (percentComplete <span class="pl-k">-=</span> <span class="pl-c1">1.5</span> <span class="pl-k">/</span> <span class="pl-c1">2.75</span>) <span class="pl-k">*</span> percentComplete <span class="pl-k">+</span> <span class="pl-c1">.75</span>;</td>
      </tr>
      <tr>
        <td id="L1719" class="blob-num js-line-number" data-line-number="1719"></td>
        <td id="LC1719" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1720" class="blob-num js-line-number" data-line-number="1720"></td>
        <td id="LC1720" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (percentComplete <span class="pl-k">&lt;</span> <span class="pl-c1">2.5</span> <span class="pl-k">/</span> <span class="pl-c1">2.75</span>) {</td>
      </tr>
      <tr>
        <td id="L1721" class="blob-num js-line-number" data-line-number="1721"></td>
        <td id="LC1721" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (percentComplete <span class="pl-k">-=</span> <span class="pl-c1">2.25</span> <span class="pl-k">/</span> <span class="pl-c1">2.75</span>) <span class="pl-k">*</span> percentComplete <span class="pl-k">+</span> <span class="pl-c1">.9375</span>;</td>
      </tr>
      <tr>
        <td id="L1722" class="blob-num js-line-number" data-line-number="1722"></td>
        <td id="LC1722" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1723" class="blob-num js-line-number" data-line-number="1723"></td>
        <td id="LC1723" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (percentComplete <span class="pl-k">-=</span> <span class="pl-c1">2.625</span> <span class="pl-k">/</span> <span class="pl-c1">2.75</span>) <span class="pl-k">*</span> percentComplete <span class="pl-k">+</span> <span class="pl-c1">.984375</span>;</td>
      </tr>
      <tr>
        <td id="L1724" class="blob-num js-line-number" data-line-number="1724"></td>
        <td id="LC1724" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1725" class="blob-num js-line-number" data-line-number="1725"></td>
        <td id="LC1725" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">easeInBounce</span>(<span class="pl-smi">percentComplete</span>) {</td>
      </tr>
      <tr>
        <td id="L1726" class="blob-num js-line-number" data-line-number="1726"></td>
        <td id="LC1726" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-en">easeOutBounce</span>(<span class="pl-c1">1</span> <span class="pl-k">-</span> percentComplete);</td>
      </tr>
      <tr>
        <td id="L1727" class="blob-num js-line-number" data-line-number="1727"></td>
        <td id="LC1727" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1728" class="blob-num js-line-number" data-line-number="1728"></td>
        <td id="LC1728" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInBounce<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1729" class="blob-num js-line-number" data-line-number="1729"></td>
        <td id="LC1729" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1730" class="blob-num js-line-number" data-line-number="1730"></td>
        <td id="LC1730" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1731" class="blob-num js-line-number" data-line-number="1731"></td>
        <td id="LC1731" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1732" class="blob-num js-line-number" data-line-number="1732"></td>
        <td id="LC1732" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1733" class="blob-num js-line-number" data-line-number="1733"></td>
        <td id="LC1733" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1734" class="blob-num js-line-number" data-line-number="1734"></td>
        <td id="LC1734" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1735" class="blob-num js-line-number" data-line-number="1735"></td>
        <td id="LC1735" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">easeInBounce</span>(percentComplete) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1736" class="blob-num js-line-number" data-line-number="1736"></td>
        <td id="LC1736" class="blob-code blob-code-inner js-file-line">        } ]);</td>
      </tr>
      <tr>
        <td id="L1737" class="blob-num js-line-number" data-line-number="1737"></td>
        <td id="LC1737" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutBounce<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1738" class="blob-num js-line-number" data-line-number="1738"></td>
        <td id="LC1738" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1739" class="blob-num js-line-number" data-line-number="1739"></td>
        <td id="LC1739" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1740" class="blob-num js-line-number" data-line-number="1740"></td>
        <td id="LC1740" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1741" class="blob-num js-line-number" data-line-number="1741"></td>
        <td id="LC1741" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1742" class="blob-num js-line-number" data-line-number="1742"></td>
        <td id="LC1742" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1743" class="blob-num js-line-number" data-line-number="1743"></td>
        <td id="LC1743" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1744" class="blob-num js-line-number" data-line-number="1744"></td>
        <td id="LC1744" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">easeOutBounce</span>(percentComplete) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1745" class="blob-num js-line-number" data-line-number="1745"></td>
        <td id="LC1745" class="blob-code blob-code-inner js-file-line">        } ]);</td>
      </tr>
      <tr>
        <td id="L1746" class="blob-num js-line-number" data-line-number="1746"></td>
        <td id="LC1746" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutBounce<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1747" class="blob-num js-line-number" data-line-number="1747"></td>
        <td id="LC1747" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1748" class="blob-num js-line-number" data-line-number="1748"></td>
        <td id="LC1748" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1749" class="blob-num js-line-number" data-line-number="1749"></td>
        <td id="LC1749" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1750" class="blob-num js-line-number" data-line-number="1750"></td>
        <td id="LC1750" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1751" class="blob-num js-line-number" data-line-number="1751"></td>
        <td id="LC1751" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1752" class="blob-num js-line-number" data-line-number="1752"></td>
        <td id="LC1752" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1753" class="blob-num js-line-number" data-line-number="1753"></td>
        <td id="LC1753" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> (percentComplete <span class="pl-k">&lt;</span> <span class="pl-c1">.5</span> <span class="pl-k">?</span> <span class="pl-en">easeInBounce</span>(percentComplete <span class="pl-k">*</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> <span class="pl-c1">.5</span> <span class="pl-k">:</span> <span class="pl-en">easeOutBounce</span>(percentComplete <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> <span class="pl-c1">.5</span> <span class="pl-k">+</span> <span class="pl-c1">.5</span>) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1754" class="blob-num js-line-number" data-line-number="1754"></td>
        <td id="LC1754" class="blob-code blob-code-inner js-file-line">        } ]);</td>
      </tr>
      <tr>
        <td id="L1755" class="blob-num js-line-number" data-line-number="1755"></td>
        <td id="LC1755" class="blob-code blob-code-inner js-file-line">    })(Easing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1756" class="blob-num js-line-number" data-line-number="1756"></td>
        <td id="LC1756" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1757" class="blob-num js-line-number" data-line-number="1757"></td>
        <td id="LC1757" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1758" class="blob-num js-line-number" data-line-number="1758"></td>
        <td id="LC1758" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;easings.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1759" class="blob-num js-line-number" data-line-number="1759"></td>
        <td id="LC1759" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1760" class="blob-num js-line-number" data-line-number="1760"></td>
        <td id="LC1760" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1761" class="blob-num js-line-number" data-line-number="1761"></td>
        <td id="LC1761" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1762" class="blob-num js-line-number" data-line-number="1762"></td>
        <td id="LC1762" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1763" class="blob-num js-line-number" data-line-number="1763"></td>
        <td id="LC1763" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1764" class="blob-num js-line-number" data-line-number="1764"></td>
        <td id="LC1764" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Elastic easings, based on code from https://github.com/yuichiroharai/easeplus-velocity</span></td>
      </tr>
      <tr>
        <td id="L1765" class="blob-num js-line-number" data-line-number="1765"></td>
        <td id="LC1765" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1766" class="blob-num js-line-number" data-line-number="1766"></td>
        <td id="LC1766" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1767" class="blob-num js-line-number" data-line-number="1767"></td>
        <td id="LC1767" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1768" class="blob-num js-line-number" data-line-number="1768"></td>
        <td id="LC1768" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1769" class="blob-num js-line-number" data-line-number="1769"></td>
        <td id="LC1769" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Easing;</td>
      </tr>
      <tr>
        <td id="L1770" class="blob-num js-line-number" data-line-number="1770"></td>
        <td id="LC1770" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-smi">Easing</span>) {</td>
      </tr>
      <tr>
        <td id="L1771" class="blob-num js-line-number" data-line-number="1771"></td>
        <td id="LC1771" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> pi2 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> <span class="pl-k">*</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1772" class="blob-num js-line-number" data-line-number="1772"></td>
        <td id="LC1772" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">registerElasticIn</span>(<span class="pl-smi">name</span>, <span class="pl-smi">amplitude</span>, <span class="pl-smi">period</span>) {</td>
      </tr>
      <tr>
        <td id="L1773" class="blob-num js-line-number" data-line-number="1773"></td>
        <td id="LC1773" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ name, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1774" class="blob-num js-line-number" data-line-number="1774"></td>
        <td id="LC1774" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1775" class="blob-num js-line-number" data-line-number="1775"></td>
        <td id="LC1775" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1776" class="blob-num js-line-number" data-line-number="1776"></td>
        <td id="LC1776" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1777" class="blob-num js-line-number" data-line-number="1777"></td>
        <td id="LC1777" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1778" class="blob-num js-line-number" data-line-number="1778"></td>
        <td id="LC1778" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1779" class="blob-num js-line-number" data-line-number="1779"></td>
        <td id="LC1779" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1780" class="blob-num js-line-number" data-line-number="1780"></td>
        <td id="LC1780" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-k">-</span>(amplitude <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span> <span class="pl-k">*</span> (percentComplete <span class="pl-k">-=</span> <span class="pl-c1">1</span>)) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((percentComplete <span class="pl-k">-</span> period <span class="pl-k">/</span> pi2 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-c1">1</span> <span class="pl-k">/</span> amplitude)) <span class="pl-k">*</span> pi2 <span class="pl-k">/</span> period)) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1781" class="blob-num js-line-number" data-line-number="1781"></td>
        <td id="LC1781" class="blob-code blob-code-inner js-file-line">            } ]);</td>
      </tr>
      <tr>
        <td id="L1782" class="blob-num js-line-number" data-line-number="1782"></td>
        <td id="LC1782" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1783" class="blob-num js-line-number" data-line-number="1783"></td>
        <td id="LC1783" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">registerElasticIn</span> <span class="pl-k">=</span> registerElasticIn;</td>
      </tr>
      <tr>
        <td id="L1784" class="blob-num js-line-number" data-line-number="1784"></td>
        <td id="LC1784" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">registerElasticOut</span>(<span class="pl-smi">name</span>, <span class="pl-smi">amplitude</span>, <span class="pl-smi">period</span>) {</td>
      </tr>
      <tr>
        <td id="L1785" class="blob-num js-line-number" data-line-number="1785"></td>
        <td id="LC1785" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ name, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1786" class="blob-num js-line-number" data-line-number="1786"></td>
        <td id="LC1786" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1787" class="blob-num js-line-number" data-line-number="1787"></td>
        <td id="LC1787" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1788" class="blob-num js-line-number" data-line-number="1788"></td>
        <td id="LC1788" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1789" class="blob-num js-line-number" data-line-number="1789"></td>
        <td id="LC1789" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1790" class="blob-num js-line-number" data-line-number="1790"></td>
        <td id="LC1790" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1791" class="blob-num js-line-number" data-line-number="1791"></td>
        <td id="LC1791" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1792" class="blob-num js-line-number" data-line-number="1792"></td>
        <td id="LC1792" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> (amplitude <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">10</span> <span class="pl-k">*</span> percentComplete) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((percentComplete <span class="pl-k">-</span> period <span class="pl-k">/</span> pi2 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-c1">1</span> <span class="pl-k">/</span> amplitude)) <span class="pl-k">*</span> pi2 <span class="pl-k">/</span> period) <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1793" class="blob-num js-line-number" data-line-number="1793"></td>
        <td id="LC1793" class="blob-code blob-code-inner js-file-line">            } ]);</td>
      </tr>
      <tr>
        <td id="L1794" class="blob-num js-line-number" data-line-number="1794"></td>
        <td id="LC1794" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1795" class="blob-num js-line-number" data-line-number="1795"></td>
        <td id="LC1795" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">registerElasticOut</span> <span class="pl-k">=</span> registerElasticOut;</td>
      </tr>
      <tr>
        <td id="L1796" class="blob-num js-line-number" data-line-number="1796"></td>
        <td id="LC1796" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">registerElasticInOut</span>(<span class="pl-smi">name</span>, <span class="pl-smi">amplitude</span>, <span class="pl-smi">period</span>) {</td>
      </tr>
      <tr>
        <td id="L1797" class="blob-num js-line-number" data-line-number="1797"></td>
        <td id="LC1797" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ name, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1798" class="blob-num js-line-number" data-line-number="1798"></td>
        <td id="LC1798" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1799" class="blob-num js-line-number" data-line-number="1799"></td>
        <td id="LC1799" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1800" class="blob-num js-line-number" data-line-number="1800"></td>
        <td id="LC1800" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1801" class="blob-num js-line-number" data-line-number="1801"></td>
        <td id="LC1801" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1802" class="blob-num js-line-number" data-line-number="1802"></td>
        <td id="LC1802" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1803" class="blob-num js-line-number" data-line-number="1803"></td>
        <td id="LC1803" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1804" class="blob-num js-line-number" data-line-number="1804"></td>
        <td id="LC1804" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> s <span class="pl-k">=</span> period <span class="pl-k">/</span> pi2 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-c1">1</span> <span class="pl-k">/</span> amplitude);</td>
      </tr>
      <tr>
        <td id="L1805" class="blob-num js-line-number" data-line-number="1805"></td>
        <td id="LC1805" class="blob-code blob-code-inner js-file-line">                percentComplete <span class="pl-k">=</span> percentComplete <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1806" class="blob-num js-line-number" data-line-number="1806"></td>
        <td id="LC1806" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> (percentComplete <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">.5</span> <span class="pl-k">*</span> (amplitude <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span> <span class="pl-k">*</span> percentComplete) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((percentComplete <span class="pl-k">-</span> s) <span class="pl-k">*</span> pi2 <span class="pl-k">/</span> period)) <span class="pl-k">:</span> amplitude <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">10</span> <span class="pl-k">*</span> percentComplete) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((percentComplete <span class="pl-k">-</span> s) <span class="pl-k">*</span> pi2 <span class="pl-k">/</span> period) <span class="pl-k">*</span> <span class="pl-c1">.5</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1807" class="blob-num js-line-number" data-line-number="1807"></td>
        <td id="LC1807" class="blob-code blob-code-inner js-file-line">            } ]);</td>
      </tr>
      <tr>
        <td id="L1808" class="blob-num js-line-number" data-line-number="1808"></td>
        <td id="LC1808" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1809" class="blob-num js-line-number" data-line-number="1809"></td>
        <td id="LC1809" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">registerElasticInOut</span> <span class="pl-k">=</span> registerElasticInOut;</td>
      </tr>
      <tr>
        <td id="L1810" class="blob-num js-line-number" data-line-number="1810"></td>
        <td id="LC1810" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">registerElasticIn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>easeInElastic<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>, <span class="pl-c1">.3</span>);</td>
      </tr>
      <tr>
        <td id="L1811" class="blob-num js-line-number" data-line-number="1811"></td>
        <td id="LC1811" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">registerElasticOut</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>easeOutElastic<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>, <span class="pl-c1">.3</span>);</td>
      </tr>
      <tr>
        <td id="L1812" class="blob-num js-line-number" data-line-number="1812"></td>
        <td id="LC1812" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">registerElasticInOut</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>easeInOutElastic<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>, <span class="pl-c1">.3</span> <span class="pl-k">*</span> <span class="pl-c1">1.5</span>);</td>
      </tr>
      <tr>
        <td id="L1813" class="blob-num js-line-number" data-line-number="1813"></td>
        <td id="LC1813" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: Expose these as actions to register custom easings?</span></td>
      </tr>
      <tr>
        <td id="L1814" class="blob-num js-line-number" data-line-number="1814"></td>
        <td id="LC1814" class="blob-code blob-code-inner js-file-line">        })(Easing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1815" class="blob-num js-line-number" data-line-number="1815"></td>
        <td id="LC1815" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1816" class="blob-num js-line-number" data-line-number="1816"></td>
        <td id="LC1816" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1817" class="blob-num js-line-number" data-line-number="1817"></td>
        <td id="LC1817" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;easings.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1818" class="blob-num js-line-number" data-line-number="1818"></td>
        <td id="LC1818" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1819" class="blob-num js-line-number" data-line-number="1819"></td>
        <td id="LC1819" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1820" class="blob-num js-line-number" data-line-number="1820"></td>
        <td id="LC1820" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1821" class="blob-num js-line-number" data-line-number="1821"></td>
        <td id="LC1821" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1822" class="blob-num js-line-number" data-line-number="1822"></td>
        <td id="LC1822" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1823" class="blob-num js-line-number" data-line-number="1823"></td>
        <td id="LC1823" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1824" class="blob-num js-line-number" data-line-number="1824"></td>
        <td id="LC1824" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1825" class="blob-num js-line-number" data-line-number="1825"></td>
        <td id="LC1825" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1826" class="blob-num js-line-number" data-line-number="1826"></td>
        <td id="LC1826" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Easing;</td>
      </tr>
      <tr>
        <td id="L1827" class="blob-num js-line-number" data-line-number="1827"></td>
        <td id="LC1827" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-smi">Easing</span>) {</td>
      </tr>
      <tr>
        <td id="L1828" class="blob-num js-line-number" data-line-number="1828"></td>
        <td id="LC1828" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1829" class="blob-num js-line-number" data-line-number="1829"></td>
        <td id="LC1829" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass</span></td>
      </tr>
      <tr>
        <td id="L1830" class="blob-num js-line-number" data-line-number="1830"></td>
        <td id="LC1830" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1831" class="blob-num js-line-number" data-line-number="1831"></td>
        <td id="LC1831" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">springAccelerationForState</span>(<span class="pl-smi">state</span>) {</td>
      </tr>
      <tr>
        <td id="L1832" class="blob-num js-line-number" data-line-number="1832"></td>
        <td id="LC1832" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-smi">state</span>.<span class="pl-smi">tension</span> <span class="pl-k">*</span> <span class="pl-smi">state</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> <span class="pl-smi">state</span>.<span class="pl-smi">friction</span> <span class="pl-k">*</span> <span class="pl-smi">state</span>.<span class="pl-smi">v</span>;</td>
      </tr>
      <tr>
        <td id="L1833" class="blob-num js-line-number" data-line-number="1833"></td>
        <td id="LC1833" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1834" class="blob-num js-line-number" data-line-number="1834"></td>
        <td id="LC1834" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">springEvaluateStateWithDerivative</span>(<span class="pl-smi">initialState</span>, <span class="pl-smi">dt</span>, <span class="pl-smi">derivative</span>) {</td>
      </tr>
      <tr>
        <td id="L1835" class="blob-num js-line-number" data-line-number="1835"></td>
        <td id="LC1835" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> state <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1836" class="blob-num js-line-number" data-line-number="1836"></td>
        <td id="LC1836" class="blob-code blob-code-inner js-file-line">                x<span class="pl-k">:</span> <span class="pl-smi">initialState</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-smi">derivative</span>.<span class="pl-smi">dx</span> <span class="pl-k">*</span> dt,</td>
      </tr>
      <tr>
        <td id="L1837" class="blob-num js-line-number" data-line-number="1837"></td>
        <td id="LC1837" class="blob-code blob-code-inner js-file-line">                v<span class="pl-k">:</span> <span class="pl-smi">initialState</span>.<span class="pl-smi">v</span> <span class="pl-k">+</span> <span class="pl-smi">derivative</span>.<span class="pl-smi">dv</span> <span class="pl-k">*</span> dt,</td>
      </tr>
      <tr>
        <td id="L1838" class="blob-num js-line-number" data-line-number="1838"></td>
        <td id="LC1838" class="blob-code blob-code-inner js-file-line">                tension<span class="pl-k">:</span> <span class="pl-smi">initialState</span>.<span class="pl-smi">tension</span>,</td>
      </tr>
      <tr>
        <td id="L1839" class="blob-num js-line-number" data-line-number="1839"></td>
        <td id="LC1839" class="blob-code blob-code-inner js-file-line">                friction<span class="pl-k">:</span> <span class="pl-smi">initialState</span>.<span class="pl-smi">friction</span></td>
      </tr>
      <tr>
        <td id="L1840" class="blob-num js-line-number" data-line-number="1840"></td>
        <td id="LC1840" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1841" class="blob-num js-line-number" data-line-number="1841"></td>
        <td id="LC1841" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L1842" class="blob-num js-line-number" data-line-number="1842"></td>
        <td id="LC1842" class="blob-code blob-code-inner js-file-line">                dx<span class="pl-k">:</span> <span class="pl-smi">state</span>.<span class="pl-smi">v</span>,</td>
      </tr>
      <tr>
        <td id="L1843" class="blob-num js-line-number" data-line-number="1843"></td>
        <td id="LC1843" class="blob-code blob-code-inner js-file-line">                dv<span class="pl-k">:</span> <span class="pl-en">springAccelerationForState</span>(state)</td>
      </tr>
      <tr>
        <td id="L1844" class="blob-num js-line-number" data-line-number="1844"></td>
        <td id="LC1844" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1845" class="blob-num js-line-number" data-line-number="1845"></td>
        <td id="LC1845" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1846" class="blob-num js-line-number" data-line-number="1846"></td>
        <td id="LC1846" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">springIntegrateState</span>(<span class="pl-smi">state</span>, <span class="pl-smi">dt</span>) {</td>
      </tr>
      <tr>
        <td id="L1847" class="blob-num js-line-number" data-line-number="1847"></td>
        <td id="LC1847" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> a <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1848" class="blob-num js-line-number" data-line-number="1848"></td>
        <td id="LC1848" class="blob-code blob-code-inner js-file-line">                dx<span class="pl-k">:</span> <span class="pl-smi">state</span>.<span class="pl-smi">v</span>,</td>
      </tr>
      <tr>
        <td id="L1849" class="blob-num js-line-number" data-line-number="1849"></td>
        <td id="LC1849" class="blob-code blob-code-inner js-file-line">                dv<span class="pl-k">:</span> <span class="pl-en">springAccelerationForState</span>(state)</td>
      </tr>
      <tr>
        <td id="L1850" class="blob-num js-line-number" data-line-number="1850"></td>
        <td id="LC1850" class="blob-code blob-code-inner js-file-line">            }, b <span class="pl-k">=</span> <span class="pl-en">springEvaluateStateWithDerivative</span>(state, dt <span class="pl-k">*</span> <span class="pl-c1">.5</span>, a), c <span class="pl-k">=</span> <span class="pl-en">springEvaluateStateWithDerivative</span>(state, dt <span class="pl-k">*</span> <span class="pl-c1">.5</span>, b), d <span class="pl-k">=</span> <span class="pl-en">springEvaluateStateWithDerivative</span>(state, dt, c), dxdt <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> (<span class="pl-smi">a</span>.<span class="pl-smi">dx</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> (<span class="pl-smi">b</span>.<span class="pl-smi">dx</span> <span class="pl-k">+</span> <span class="pl-smi">c</span>.<span class="pl-smi">dx</span>) <span class="pl-k">+</span> <span class="pl-smi">d</span>.<span class="pl-smi">dx</span>), dvdt <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> (<span class="pl-smi">a</span>.<span class="pl-smi">dv</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> (<span class="pl-smi">b</span>.<span class="pl-smi">dv</span> <span class="pl-k">+</span> <span class="pl-smi">c</span>.<span class="pl-smi">dv</span>) <span class="pl-k">+</span> <span class="pl-smi">d</span>.<span class="pl-smi">dv</span>);</td>
      </tr>
      <tr>
        <td id="L1851" class="blob-num js-line-number" data-line-number="1851"></td>
        <td id="LC1851" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">state</span>.<span class="pl-c1">x</span> <span class="pl-k">=</span> <span class="pl-smi">state</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> dxdt <span class="pl-k">*</span> dt;</td>
      </tr>
      <tr>
        <td id="L1852" class="blob-num js-line-number" data-line-number="1852"></td>
        <td id="LC1852" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">state</span>.<span class="pl-smi">v</span> <span class="pl-k">=</span> <span class="pl-smi">state</span>.<span class="pl-smi">v</span> <span class="pl-k">+</span> dvdt <span class="pl-k">*</span> dt;</td>
      </tr>
      <tr>
        <td id="L1853" class="blob-num js-line-number" data-line-number="1853"></td>
        <td id="LC1853" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> state;</td>
      </tr>
      <tr>
        <td id="L1854" class="blob-num js-line-number" data-line-number="1854"></td>
        <td id="LC1854" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1855" class="blob-num js-line-number" data-line-number="1855"></td>
        <td id="LC1855" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">generateSpringRK4</span>(<span class="pl-smi">tension</span>, <span class="pl-smi">friction</span>, <span class="pl-smi">duration</span>) {</td>
      </tr>
      <tr>
        <td id="L1856" class="blob-num js-line-number" data-line-number="1856"></td>
        <td id="LC1856" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> initState <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1857" class="blob-num js-line-number" data-line-number="1857"></td>
        <td id="LC1857" class="blob-code blob-code-inner js-file-line">                x<span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1858" class="blob-num js-line-number" data-line-number="1858"></td>
        <td id="LC1858" class="blob-code blob-code-inner js-file-line">                v<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1859" class="blob-num js-line-number" data-line-number="1859"></td>
        <td id="LC1859" class="blob-code blob-code-inner js-file-line">                tension<span class="pl-k">:</span> <span class="pl-c1">parseFloat</span>(tension) <span class="pl-k">||</span> <span class="pl-c1">500</span>,</td>
      </tr>
      <tr>
        <td id="L1860" class="blob-num js-line-number" data-line-number="1860"></td>
        <td id="LC1860" class="blob-code blob-code-inner js-file-line">                friction<span class="pl-k">:</span> <span class="pl-c1">parseFloat</span>(friction) <span class="pl-k">||</span> <span class="pl-c1">20</span></td>
      </tr>
      <tr>
        <td id="L1861" class="blob-num js-line-number" data-line-number="1861"></td>
        <td id="LC1861" class="blob-code blob-code-inner js-file-line">            }, path <span class="pl-k">=</span> [ <span class="pl-c1">0</span> ], time_lapsed <span class="pl-k">=</span> <span class="pl-c1">0</span>, tolerance <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">/</span> <span class="pl-c1">1e4</span>, <span class="pl-c1">DT</span> <span class="pl-k">=</span> <span class="pl-c1">16</span> <span class="pl-k">/</span> <span class="pl-c1">1e3</span>, have_duration <span class="pl-k">=</span> duration <span class="pl-k">!=</span> <span class="pl-c1">null</span>, <span class="pl-c"><span class="pl-c">//</span> deliberate &quot;==&quot;, as undefined == null != 0</span></td>
      </tr>
      <tr>
        <td id="L1862" class="blob-num js-line-number" data-line-number="1862"></td>
        <td id="LC1862" class="blob-code blob-code-inner js-file-line">            dt, last_state;</td>
      </tr>
      <tr>
        <td id="L1863" class="blob-num js-line-number" data-line-number="1863"></td>
        <td id="LC1863" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Calculate the actual time it takes for this animation to complete with the provided conditions. <span class="pl-c">*/</span></span>            <span class="pl-k">if</span> (have_duration) {</td>
      </tr>
      <tr>
        <td id="L1864" class="blob-num js-line-number" data-line-number="1864"></td>
        <td id="LC1864" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Run the simulation without a duration. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1865" class="blob-num js-line-number" data-line-number="1865"></td>
        <td id="LC1865" class="blob-code blob-code-inner js-file-line">                time_lapsed <span class="pl-k">=</span> <span class="pl-en">generateSpringRK4</span>(<span class="pl-smi">initState</span>.<span class="pl-smi">tension</span>, <span class="pl-smi">initState</span>.<span class="pl-smi">friction</span>);</td>
      </tr>
      <tr>
        <td id="L1866" class="blob-num js-line-number" data-line-number="1866"></td>
        <td id="LC1866" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Compute the adjusted time delta. <span class="pl-c">*/</span></span>                dt <span class="pl-k">=</span> time_lapsed <span class="pl-k">/</span> duration <span class="pl-k">*</span> <span class="pl-c1">DT</span>;</td>
      </tr>
      <tr>
        <td id="L1867" class="blob-num js-line-number" data-line-number="1867"></td>
        <td id="LC1867" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1868" class="blob-num js-line-number" data-line-number="1868"></td>
        <td id="LC1868" class="blob-code blob-code-inner js-file-line">                dt <span class="pl-k">=</span> <span class="pl-c1">DT</span>;</td>
      </tr>
      <tr>
        <td id="L1869" class="blob-num js-line-number" data-line-number="1869"></td>
        <td id="LC1869" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1870" class="blob-num js-line-number" data-line-number="1870"></td>
        <td id="LC1870" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (<span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L1871" class="blob-num js-line-number" data-line-number="1871"></td>
        <td id="LC1871" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Next/step function .<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1872" class="blob-num js-line-number" data-line-number="1872"></td>
        <td id="LC1872" class="blob-code blob-code-inner js-file-line">                last_state <span class="pl-k">=</span> <span class="pl-en">springIntegrateState</span>(last_state <span class="pl-k">||</span> initState, dt);</td>
      </tr>
      <tr>
        <td id="L1873" class="blob-num js-line-number" data-line-number="1873"></td>
        <td id="LC1873" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Store the position. <span class="pl-c">*/</span></span>                <span class="pl-smi">path</span>.<span class="pl-c1">push</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-smi">last_state</span>.<span class="pl-c1">x</span>);</td>
      </tr>
      <tr>
        <td id="L1874" class="blob-num js-line-number" data-line-number="1874"></td>
        <td id="LC1874" class="blob-code blob-code-inner js-file-line">                time_lapsed <span class="pl-k">+=</span> <span class="pl-c1">16</span>;</td>
      </tr>
      <tr>
        <td id="L1875" class="blob-num js-line-number" data-line-number="1875"></td>
        <td id="LC1875" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> If the change threshold is reached, break. <span class="pl-c">*/</span></span>                <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">last_state</span>.<span class="pl-c1">x</span>) <span class="pl-k">&gt;</span> tolerance <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">last_state</span>.<span class="pl-smi">v</span>) <span class="pl-k">&gt;</span> tolerance)) {</td>
      </tr>
      <tr>
        <td id="L1876" class="blob-num js-line-number" data-line-number="1876"></td>
        <td id="LC1876" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1877" class="blob-num js-line-number" data-line-number="1877"></td>
        <td id="LC1877" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1878" class="blob-num js-line-number" data-line-number="1878"></td>
        <td id="LC1878" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1879" class="blob-num js-line-number" data-line-number="1879"></td>
        <td id="LC1879" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the</span></td>
      </tr>
      <tr>
        <td id="L1880" class="blob-num js-line-number" data-line-number="1880"></td>
        <td id="LC1880" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             computed path and returns a snapshot of the position according to a given percentComplete. <span class="pl-c">*/</span></span>            <span class="pl-k">return</span> <span class="pl-k">!</span>have_duration <span class="pl-k">?</span> time_lapsed <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1881" class="blob-num js-line-number" data-line-number="1881"></td>
        <td id="LC1881" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1882" class="blob-num js-line-number" data-line-number="1882"></td>
        <td id="LC1882" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1883" class="blob-num js-line-number" data-line-number="1883"></td>
        <td id="LC1883" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1884" class="blob-num js-line-number" data-line-number="1884"></td>
        <td id="LC1884" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1885" class="blob-num js-line-number" data-line-number="1885"></td>
        <td id="LC1885" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1886" class="blob-num js-line-number" data-line-number="1886"></td>
        <td id="LC1886" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1887" class="blob-num js-line-number" data-line-number="1887"></td>
        <td id="LC1887" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> startValue <span class="pl-k">+</span> path[percentComplete <span class="pl-k">*</span> (<span class="pl-smi">path</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">|</span> <span class="pl-c1">0</span>] <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1888" class="blob-num js-line-number" data-line-number="1888"></td>
        <td id="LC1888" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1889" class="blob-num js-line-number" data-line-number="1889"></td>
        <td id="LC1889" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1890" class="blob-num js-line-number" data-line-number="1890"></td>
        <td id="LC1890" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">generateSpringRK4</span> <span class="pl-k">=</span> generateSpringRK4;</td>
      </tr>
      <tr>
        <td id="L1891" class="blob-num js-line-number" data-line-number="1891"></td>
        <td id="LC1891" class="blob-code blob-code-inner js-file-line">    })(Easing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1892" class="blob-num js-line-number" data-line-number="1892"></td>
        <td id="LC1892" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1893" class="blob-num js-line-number" data-line-number="1893"></td>
        <td id="LC1893" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1894" class="blob-num js-line-number" data-line-number="1894"></td>
        <td id="LC1894" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;easings.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1895" class="blob-num js-line-number" data-line-number="1895"></td>
        <td id="LC1895" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1896" class="blob-num js-line-number" data-line-number="1896"></td>
        <td id="LC1896" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1897" class="blob-num js-line-number" data-line-number="1897"></td>
        <td id="LC1897" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1898" class="blob-num js-line-number" data-line-number="1898"></td>
        <td id="LC1898" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details</span></td>
      </tr>
      <tr>
        <td id="L1899" class="blob-num js-line-number" data-line-number="1899"></td>
        <td id="LC1899" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1900" class="blob-num js-line-number" data-line-number="1900"></td>
        <td id="LC1900" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Step easing generator.</span></td>
      </tr>
      <tr>
        <td id="L1901" class="blob-num js-line-number" data-line-number="1901"></td>
        <td id="LC1901" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1902" class="blob-num js-line-number" data-line-number="1902"></td>
        <td id="LC1902" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1903" class="blob-num js-line-number" data-line-number="1903"></td>
        <td id="LC1903" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1904" class="blob-num js-line-number" data-line-number="1904"></td>
        <td id="LC1904" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1905" class="blob-num js-line-number" data-line-number="1905"></td>
        <td id="LC1905" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Easing;</td>
      </tr>
      <tr>
        <td id="L1906" class="blob-num js-line-number" data-line-number="1906"></td>
        <td id="LC1906" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-smi">Easing</span>) {</td>
      </tr>
      <tr>
        <td id="L1907" class="blob-num js-line-number" data-line-number="1907"></td>
        <td id="LC1907" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> cache <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L1908" class="blob-num js-line-number" data-line-number="1908"></td>
        <td id="LC1908" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">generateStep</span>(<span class="pl-smi">steps</span>) {</td>
      </tr>
      <tr>
        <td id="L1909" class="blob-num js-line-number" data-line-number="1909"></td>
        <td id="LC1909" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> fn <span class="pl-k">=</span> cache[steps];</td>
      </tr>
      <tr>
        <td id="L1910" class="blob-num js-line-number" data-line-number="1910"></td>
        <td id="LC1910" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (fn) {</td>
      </tr>
      <tr>
        <td id="L1911" class="blob-num js-line-number" data-line-number="1911"></td>
        <td id="LC1911" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> fn;</td>
      </tr>
      <tr>
        <td id="L1912" class="blob-num js-line-number" data-line-number="1912"></td>
        <td id="LC1912" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1913" class="blob-num js-line-number" data-line-number="1913"></td>
        <td id="LC1913" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> cache[steps] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1914" class="blob-num js-line-number" data-line-number="1914"></td>
        <td id="LC1914" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1915" class="blob-num js-line-number" data-line-number="1915"></td>
        <td id="LC1915" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1916" class="blob-num js-line-number" data-line-number="1916"></td>
        <td id="LC1916" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1917" class="blob-num js-line-number" data-line-number="1917"></td>
        <td id="LC1917" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1918" class="blob-num js-line-number" data-line-number="1918"></td>
        <td id="LC1918" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1919" class="blob-num js-line-number" data-line-number="1919"></td>
        <td id="LC1919" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1920" class="blob-num js-line-number" data-line-number="1920"></td>
        <td id="LC1920" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> startValue <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(percentComplete <span class="pl-k">*</span> steps) <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">/</span> steps) <span class="pl-k">*</span> (endValue <span class="pl-k">-</span> startValue);</td>
      </tr>
      <tr>
        <td id="L1921" class="blob-num js-line-number" data-line-number="1921"></td>
        <td id="LC1921" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1922" class="blob-num js-line-number" data-line-number="1922"></td>
        <td id="LC1922" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1923" class="blob-num js-line-number" data-line-number="1923"></td>
        <td id="LC1923" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-smi">generateStep</span> <span class="pl-k">=</span> generateStep;</td>
      </tr>
      <tr>
        <td id="L1924" class="blob-num js-line-number" data-line-number="1924"></td>
        <td id="LC1924" class="blob-code blob-code-inner js-file-line">    })(Easing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1925" class="blob-num js-line-number" data-line-number="1925"></td>
        <td id="LC1925" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1926" class="blob-num js-line-number" data-line-number="1926"></td>
        <td id="LC1926" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1927" class="blob-num js-line-number" data-line-number="1927"></td>
        <td id="LC1927" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;easings.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1928" class="blob-num js-line-number" data-line-number="1928"></td>
        <td id="LC1928" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1929" class="blob-num js-line-number" data-line-number="1929"></td>
        <td id="LC1929" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1930" class="blob-num js-line-number" data-line-number="1930"></td>
        <td id="LC1930" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1931" class="blob-num js-line-number" data-line-number="1931"></td>
        <td id="LC1931" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1932" class="blob-num js-line-number" data-line-number="1932"></td>
        <td id="LC1932" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1933" class="blob-num js-line-number" data-line-number="1933"></td>
        <td id="LC1933" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Easings to act on strings, either set at the start or at the end depending on</span></td>
      </tr>
      <tr>
        <td id="L1934" class="blob-num js-line-number" data-line-number="1934"></td>
        <td id="LC1934" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * need.</span></td>
      </tr>
      <tr>
        <td id="L1935" class="blob-num js-line-number" data-line-number="1935"></td>
        <td id="LC1935" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1936" class="blob-num js-line-number" data-line-number="1936"></td>
        <td id="LC1936" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1937" class="blob-num js-line-number" data-line-number="1937"></td>
        <td id="LC1937" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1938" class="blob-num js-line-number" data-line-number="1938"></td>
        <td id="LC1938" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1939" class="blob-num js-line-number" data-line-number="1939"></td>
        <td id="LC1939" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Easing;</td>
      </tr>
      <tr>
        <td id="L1940" class="blob-num js-line-number" data-line-number="1940"></td>
        <td id="LC1940" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-smi">Easing</span>) {</td>
      </tr>
      <tr>
        <td id="L1941" class="blob-num js-line-number" data-line-number="1941"></td>
        <td id="LC1941" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1942" class="blob-num js-line-number" data-line-number="1942"></td>
        <td id="LC1942" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Easing function that sets to the specified value immediately after the</span></td>
      </tr>
      <tr>
        <td id="L1943" class="blob-num js-line-number" data-line-number="1943"></td>
        <td id="LC1943" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * animation starts.</span></td>
      </tr>
      <tr>
        <td id="L1944" class="blob-num js-line-number" data-line-number="1944"></td>
        <td id="LC1944" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1945" class="blob-num js-line-number" data-line-number="1945"></td>
        <td id="LC1945" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>at-start<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1946" class="blob-num js-line-number" data-line-number="1946"></td>
        <td id="LC1946" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> startValue <span class="pl-k">:</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1947" class="blob-num js-line-number" data-line-number="1947"></td>
        <td id="LC1947" class="blob-code blob-code-inner js-file-line">        } ]);</td>
      </tr>
      <tr>
        <td id="L1948" class="blob-num js-line-number" data-line-number="1948"></td>
        <td id="LC1948" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1949" class="blob-num js-line-number" data-line-number="1949"></td>
        <td id="LC1949" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Easing function that sets to the specified value while the animation is</span></td>
      </tr>
      <tr>
        <td id="L1950" class="blob-num js-line-number" data-line-number="1950"></td>
        <td id="LC1950" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * running.</span></td>
      </tr>
      <tr>
        <td id="L1951" class="blob-num js-line-number" data-line-number="1951"></td>
        <td id="LC1951" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span>        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>during<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1952" class="blob-num js-line-number" data-line-number="1952"></td>
        <td id="LC1952" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> percentComplete <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> startValue <span class="pl-k">:</span> endValue;</td>
      </tr>
      <tr>
        <td id="L1953" class="blob-num js-line-number" data-line-number="1953"></td>
        <td id="LC1953" class="blob-code blob-code-inner js-file-line">        } ]);</td>
      </tr>
      <tr>
        <td id="L1954" class="blob-num js-line-number" data-line-number="1954"></td>
        <td id="LC1954" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1955" class="blob-num js-line-number" data-line-number="1955"></td>
        <td id="LC1955" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Easing function that sets to the specified value when the animation ends.</span></td>
      </tr>
      <tr>
        <td id="L1956" class="blob-num js-line-number" data-line-number="1956"></td>
        <td id="LC1956" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span>        <span class="pl-smi">Easing</span>.<span class="pl-en">registerEasing</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>at-end<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">percentComplete</span>, <span class="pl-smi">startValue</span>, <span class="pl-smi">endValue</span>) {</td>
      </tr>
      <tr>
        <td id="L1957" class="blob-num js-line-number" data-line-number="1957"></td>
        <td id="LC1957" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> endValue <span class="pl-k">:</span> startValue;</td>
      </tr>
      <tr>
        <td id="L1958" class="blob-num js-line-number" data-line-number="1958"></td>
        <td id="LC1958" class="blob-code blob-code-inner js-file-line">        } ]);</td>
      </tr>
      <tr>
        <td id="L1959" class="blob-num js-line-number" data-line-number="1959"></td>
        <td id="LC1959" class="blob-code blob-code-inner js-file-line">    })(Easing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1960" class="blob-num js-line-number" data-line-number="1960"></td>
        <td id="LC1960" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L1961" class="blob-num js-line-number" data-line-number="1961"></td>
        <td id="LC1961" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1962" class="blob-num js-line-number" data-line-number="1962"></td>
        <td id="LC1962" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;../actions/_all.d.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L1963" class="blob-num js-line-number" data-line-number="1963"></td>
        <td id="LC1963" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L1964" class="blob-num js-line-number" data-line-number="1964"></td>
        <td id="LC1964" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L1965" class="blob-num js-line-number" data-line-number="1965"></td>
        <td id="LC1965" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1966" class="blob-num js-line-number" data-line-number="1966"></td>
        <td id="LC1966" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L1967" class="blob-num js-line-number" data-line-number="1967"></td>
        <td id="LC1967" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1968" class="blob-num js-line-number" data-line-number="1968"></td>
        <td id="LC1968" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Normalisations are used when getting or setting a (normally css compound</span></td>
      </tr>
      <tr>
        <td id="L1969" class="blob-num js-line-number" data-line-number="1969"></td>
        <td id="LC1969" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * properties) value that can have a different order in different browsers.</span></td>
      </tr>
      <tr>
        <td id="L1970" class="blob-num js-line-number" data-line-number="1970"></td>
        <td id="LC1970" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1971" class="blob-num js-line-number" data-line-number="1971"></td>
        <td id="LC1971" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * It can also be used to extend and create specific properties that otherwise</span></td>
      </tr>
      <tr>
        <td id="L1972" class="blob-num js-line-number" data-line-number="1972"></td>
        <td id="LC1972" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * don&#39;t exist (such as for scrolling, or inner/outer dimensions).</span></td>
      </tr>
      <tr>
        <td id="L1973" class="blob-num js-line-number" data-line-number="1973"></td>
        <td id="LC1973" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1974" class="blob-num js-line-number" data-line-number="1974"></td>
        <td id="LC1974" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L1975" class="blob-num js-line-number" data-line-number="1975"></td>
        <td id="LC1975" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1976" class="blob-num js-line-number" data-line-number="1976"></td>
        <td id="LC1976" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L1977" class="blob-num js-line-number" data-line-number="1977"></td>
        <td id="LC1977" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1978" class="blob-num js-line-number" data-line-number="1978"></td>
        <td id="LC1978" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The highest type index for finding the best normalization for a property.</span></td>
      </tr>
      <tr>
        <td id="L1979" class="blob-num js-line-number" data-line-number="1979"></td>
        <td id="LC1979" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1980" class="blob-num js-line-number" data-line-number="1980"></td>
        <td id="LC1980" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">MaxType</span> <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1981" class="blob-num js-line-number" data-line-number="1981"></td>
        <td id="LC1981" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1982" class="blob-num js-line-number" data-line-number="1982"></td>
        <td id="LC1982" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Unlike &quot;actions&quot;, normalizations can always be replaced by users.</span></td>
      </tr>
      <tr>
        <td id="L1983" class="blob-num js-line-number" data-line-number="1983"></td>
        <td id="LC1983" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Normalizations</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1984" class="blob-num js-line-number" data-line-number="1984"></td>
        <td id="LC1984" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1985" class="blob-num js-line-number" data-line-number="1985"></td>
        <td id="LC1985" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Any normalisations that should never be cached are listed here.</span></td>
      </tr>
      <tr>
        <td id="L1986" class="blob-num js-line-number" data-line-number="1986"></td>
        <td id="LC1986" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Faster than an array - https://jsperf.com/array-includes-and-find-methods-vs-set-has</span></td>
      </tr>
      <tr>
        <td id="L1987" class="blob-num js-line-number" data-line-number="1987"></td>
        <td id="LC1987" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">NoCacheNormalizations</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Set</span>();</td>
      </tr>
      <tr>
        <td id="L1988" class="blob-num js-line-number" data-line-number="1988"></td>
        <td id="LC1988" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1989" class="blob-num js-line-number" data-line-number="1989"></td>
        <td id="LC1989" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * An array of classes used for the per-class normalizations. This</span></td>
      </tr>
      <tr>
        <td id="L1990" class="blob-num js-line-number" data-line-number="1990"></td>
        <td id="LC1990" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * translates into a bitwise enum for quick cross-reference, and so that</span></td>
      </tr>
      <tr>
        <td id="L1991" class="blob-num js-line-number" data-line-number="1991"></td>
        <td id="LC1991" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * the element doesn&#39;t need multiple &lt;code&gt;instanceof&lt;/code&gt; calls every</span></td>
      </tr>
      <tr>
        <td id="L1992" class="blob-num js-line-number" data-line-number="1992"></td>
        <td id="LC1992" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * frame.</span></td>
      </tr>
      <tr>
        <td id="L1993" class="blob-num js-line-number" data-line-number="1993"></td>
        <td id="LC1993" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">constructors</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1994" class="blob-num js-line-number" data-line-number="1994"></td>
        <td id="LC1994" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1995" class="blob-num js-line-number" data-line-number="1995"></td>
        <td id="LC1995" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Used to register a normalization. This should never be called by users</span></td>
      </tr>
      <tr>
        <td id="L1996" class="blob-num js-line-number" data-line-number="1996"></td>
        <td id="LC1996" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * directly, instead it should be called via an action:&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L1997" class="blob-num js-line-number" data-line-number="1997"></td>
        <td id="LC1997" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;code&gt;Velocity(&quot;registerNormalization&quot;, Element, &quot;name&quot;, VelocityNormalizationsFn[, false]);&lt;/code&gt;</span></td>
      </tr>
      <tr>
        <td id="L1998" class="blob-num js-line-number" data-line-number="1998"></td>
        <td id="LC1998" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1999" class="blob-num js-line-number" data-line-number="1999"></td>
        <td id="LC1999" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The fourth argument can be an explicit &lt;code&gt;false&lt;/code&gt;, which prevents</span></td>
      </tr>
      <tr>
        <td id="L2000" class="blob-num js-line-number" data-line-number="2000"></td>
        <td id="LC2000" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * the property from being cached. Please note that this can be dangerous</span></td>
      </tr>
      <tr>
        <td id="L2001" class="blob-num js-line-number" data-line-number="2001"></td>
        <td id="LC2001" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * for performance!</span></td>
      </tr>
      <tr>
        <td id="L2002" class="blob-num js-line-number" data-line-number="2002"></td>
        <td id="LC2002" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2003" class="blob-num js-line-number" data-line-number="2003"></td>
        <td id="LC2003" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L2004" class="blob-num js-line-number" data-line-number="2004"></td>
        <td id="LC2004" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">registerNormalization</span>(<span class="pl-smi">args</span>) {</td>
      </tr>
      <tr>
        <td id="L2005" class="blob-num js-line-number" data-line-number="2005"></td>
        <td id="LC2005" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">constructor </span>= args[0], name = args[1], callback = args[2];</td>
      </tr>
      <tr>
        <td id="L2006" class="blob-num js-line-number" data-line-number="2006"></td>
        <td id="LC2006" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">if</span> (<span class="pl-en">isString</span>(<span class="pl-en">constructor</span>) || !(constructor instanceof Object)) {</td>
      </tr>
      <tr>
        <td id="L2007" class="blob-num js-line-number" data-line-number="2007"></td>
        <td id="LC2007" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;registerNormalization&#39; constructor to an invalid value:<span class="pl-pds">&quot;</span></span>, <span class="pl-en">constructor</span>);</td>
      </tr>
      <tr>
        <td id="L2008" class="blob-num js-line-number" data-line-number="2008"></td>
        <td id="LC2008" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isString</span>(name)) {</td>
      </tr>
      <tr>
        <td id="L2009" class="blob-num js-line-number" data-line-number="2009"></td>
        <td id="LC2009" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;registerNormalization&#39; name to an invalid value:<span class="pl-pds">&quot;</span></span>, name);</td>
      </tr>
      <tr>
        <td id="L2010" class="blob-num js-line-number" data-line-number="2010"></td>
        <td id="LC2010" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isFunction</span>(callback)) {</td>
      </tr>
      <tr>
        <td id="L2011" class="blob-num js-line-number" data-line-number="2011"></td>
        <td id="LC2011" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;registerNormalization&#39; callback to an invalid value:<span class="pl-pds">&quot;</span></span>, name, callback);</td>
      </tr>
      <tr>
        <td id="L2012" class="blob-num js-line-number" data-line-number="2012"></td>
        <td id="LC2012" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2013" class="blob-num js-line-number" data-line-number="2013"></td>
        <td id="LC2013" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> index <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">constructors</span>.<span class="pl-c1">indexOf</span>(<span class="pl-en">constructor</span>);</td>
      </tr>
      <tr>
        <td id="L2014" class="blob-num js-line-number" data-line-number="2014"></td>
        <td id="LC2014" class="blob-code blob-code-inner js-file-line">            if (index &lt; 0) {</td>
      </tr>
      <tr>
        <td id="L2015" class="blob-num js-line-number" data-line-number="2015"></td>
        <td id="LC2015" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">MaxType</span> <span class="pl-k">=</span> index <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">constructors</span>.<span class="pl-c1">push</span>(<span class="pl-en">constructor</span>) - 1;</td>
      </tr>
      <tr>
        <td id="L2016" class="blob-num js-line-number" data-line-number="2016"></td>
        <td id="LC2016" class="blob-code blob-code-inner js-file-line">                VelocityStatic.Normalizations[index] = Object.create(null);</td>
      </tr>
      <tr>
        <td id="L2017" class="blob-num js-line-number" data-line-number="2017"></td>
        <td id="LC2017" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2018" class="blob-num js-line-number" data-line-number="2018"></td>
        <td id="LC2018" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Normalizations</span>[index][name] <span class="pl-k">=</span> callback;</td>
      </tr>
      <tr>
        <td id="L2019" class="blob-num js-line-number" data-line-number="2019"></td>
        <td id="LC2019" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (args[<span class="pl-c1">3</span>] <span class="pl-k">===</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L2020" class="blob-num js-line-number" data-line-number="2020"></td>
        <td id="LC2020" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">NoCacheNormalizations</span>.<span class="pl-c1">add</span>(name);</td>
      </tr>
      <tr>
        <td id="L2021" class="blob-num js-line-number" data-line-number="2021"></td>
        <td id="LC2021" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2022" class="blob-num js-line-number" data-line-number="2022"></td>
        <td id="LC2022" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2023" class="blob-num js-line-number" data-line-number="2023"></td>
        <td id="LC2023" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2024" class="blob-num js-line-number" data-line-number="2024"></td>
        <td id="LC2024" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">registerNormalization</span> <span class="pl-k">=</span> registerNormalization;</td>
      </tr>
      <tr>
        <td id="L2025" class="blob-num js-line-number" data-line-number="2025"></td>
        <td id="LC2025" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2026" class="blob-num js-line-number" data-line-number="2026"></td>
        <td id="LC2026" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Used to check if a normalisation exists on a specific class.</span></td>
      </tr>
      <tr>
        <td id="L2027" class="blob-num js-line-number" data-line-number="2027"></td>
        <td id="LC2027" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">hasNormalization</span>(<span class="pl-smi">args</span>) {</td>
      </tr>
      <tr>
        <td id="L2028" class="blob-num js-line-number" data-line-number="2028"></td>
        <td id="LC2028" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">constructor </span>= args[0], name = args[1];</td>
      </tr>
      <tr>
        <td id="L2029" class="blob-num js-line-number" data-line-number="2029"></td>
        <td id="LC2029" class="blob-code blob-code-inner js-file-line">        var index = VelocityStatic.<span class="pl-en">constructor</span>s.<span class="pl-en">indexOf</span>(<span class="pl-en">constructor</span>);</td>
      </tr>
      <tr>
        <td id="L2030" class="blob-num js-line-number" data-line-number="2030"></td>
        <td id="LC2030" class="blob-code blob-code-inner js-file-line">        return !!VelocityStatic.Normalizations[index][name];</td>
      </tr>
      <tr>
        <td id="L2031" class="blob-num js-line-number" data-line-number="2031"></td>
        <td id="LC2031" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2032" class="blob-num js-line-number" data-line-number="2032"></td>
        <td id="LC2032" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">hasNormalization</span> <span class="pl-k">=</span> <span class="pl-smi">hasNormalization</span>;</td>
      </tr>
      <tr>
        <td id="L2033" class="blob-num js-line-number" data-line-number="2033"></td>
        <td id="LC2033" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getNormalization</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyName</span>) {</td>
      </tr>
      <tr>
        <td id="L2034" class="blob-num js-line-number" data-line-number="2034"></td>
        <td id="LC2034" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element);</td>
      </tr>
      <tr>
        <td id="L2035" class="blob-num js-line-number" data-line-number="2035"></td>
        <td id="LC2035" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> fn;</td>
      </tr>
      <tr>
        <td id="L2036" class="blob-num js-line-number" data-line-number="2036"></td>
        <td id="LC2036" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> index <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">MaxType</span>, types <span class="pl-k">=</span> <span class="pl-smi">data</span>.<span class="pl-smi">types</span>; <span class="pl-k">!</span>fn <span class="pl-k">&amp;&amp;</span> index <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; index<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L2037" class="blob-num js-line-number" data-line-number="2037"></td>
        <td id="LC2037" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (types <span class="pl-k">&amp;</span> <span class="pl-c1">1</span> <span class="pl-k">&lt;&lt;</span> index) {</td>
      </tr>
      <tr>
        <td id="L2038" class="blob-num js-line-number" data-line-number="2038"></td>
        <td id="LC2038" class="blob-code blob-code-inner js-file-line">                fn <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Normalizations</span>[index][propertyName];</td>
      </tr>
      <tr>
        <td id="L2039" class="blob-num js-line-number" data-line-number="2039"></td>
        <td id="LC2039" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2040" class="blob-num js-line-number" data-line-number="2040"></td>
        <td id="LC2040" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2041" class="blob-num js-line-number" data-line-number="2041"></td>
        <td id="LC2041" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> fn;</td>
      </tr>
      <tr>
        <td id="L2042" class="blob-num js-line-number" data-line-number="2042"></td>
        <td id="LC2042" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2043" class="blob-num js-line-number" data-line-number="2043"></td>
        <td id="LC2043" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">getNormalization</span> <span class="pl-k">=</span> <span class="pl-smi">getNormalization</span>;</td>
      </tr>
      <tr>
        <td id="L2044" class="blob-num js-line-number" data-line-number="2044"></td>
        <td id="LC2044" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>registerNormalization<span class="pl-pds">&quot;</span></span>, registerNormalization ]);</td>
      </tr>
      <tr>
        <td id="L2045" class="blob-num js-line-number" data-line-number="2045"></td>
        <td id="LC2045" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerAction</span>([ <span class="pl-s"><span class="pl-pds">&quot;</span>hasNormalization<span class="pl-pds">&quot;</span></span>, hasNormalization ]);</td>
      </tr>
      <tr>
        <td id="L2046" class="blob-num js-line-number" data-line-number="2046"></td>
        <td id="LC2046" class="blob-code blob-code-inner js-file-line">})(VelocityStatic || (VelocityStatic = {}));</td>
      </tr>
      <tr>
        <td id="L2047" class="blob-num js-line-number" data-line-number="2047"></td>
        <td id="LC2047" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2048" class="blob-num js-line-number" data-line-number="2048"></td>
        <td id="LC2048" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;../normalizations.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L2049" class="blob-num js-line-number" data-line-number="2049"></td>
        <td id="LC2049" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2050" class="blob-num js-line-number" data-line-number="2050"></td>
        <td id="LC2050" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2051" class="blob-num js-line-number" data-line-number="2051"></td>
        <td id="LC2051" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2052" class="blob-num js-line-number" data-line-number="2052"></td>
        <td id="LC2052" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2053" class="blob-num js-line-number" data-line-number="2053"></td>
        <td id="LC2053" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2054" class="blob-num js-line-number" data-line-number="2054"></td>
        <td id="LC2054" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2055" class="blob-num js-line-number" data-line-number="2055"></td>
        <td id="LC2055" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2056" class="blob-num js-line-number" data-line-number="2056"></td>
        <td id="LC2056" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CSS</span>;</td>
      </tr>
      <tr>
        <td id="L2057" class="blob-num js-line-number" data-line-number="2057"></td>
        <td id="LC2057" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-c1">CSS</span>) {</td>
      </tr>
      <tr>
        <td id="L2058" class="blob-num js-line-number" data-line-number="2058"></td>
        <td id="LC2058" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2059" class="blob-num js-line-number" data-line-number="2059"></td>
        <td id="LC2059" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Get/set an attribute.</span></td>
      </tr>
      <tr>
        <td id="L2060" class="blob-num js-line-number" data-line-number="2060"></td>
        <td id="LC2060" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2061" class="blob-num js-line-number" data-line-number="2061"></td>
        <td id="LC2061" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">getAttribute</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L2062" class="blob-num js-line-number" data-line-number="2062"></td>
        <td id="LC2062" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2063" class="blob-num js-line-number" data-line-number="2063"></td>
        <td id="LC2063" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (propertyValue <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2064" class="blob-num js-line-number" data-line-number="2064"></td>
        <td id="LC2064" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-smi">element</span>.<span class="pl-c1">getAttribute</span>(name);</td>
      </tr>
      <tr>
        <td id="L2065" class="blob-num js-line-number" data-line-number="2065"></td>
        <td id="LC2065" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2066" class="blob-num js-line-number" data-line-number="2066"></td>
        <td id="LC2066" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">element</span>.<span class="pl-c1">setAttribute</span>(name, propertyValue);</td>
      </tr>
      <tr>
        <td id="L2067" class="blob-num js-line-number" data-line-number="2067"></td>
        <td id="LC2067" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L2068" class="blob-num js-line-number" data-line-number="2068"></td>
        <td id="LC2068" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2069" class="blob-num js-line-number" data-line-number="2069"></td>
        <td id="LC2069" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> base <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>), rxSubtype <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>SVG(<span class="pl-c1">.</span><span class="pl-k">*</span>)Element<span class="pl-k">$</span><span class="pl-pds">/</span></span>, rxElement <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>Element<span class="pl-k">$</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L2070" class="blob-num js-line-number" data-line-number="2070"></td>
        <td id="LC2070" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">getOwnPropertyNames</span>(<span class="pl-c1">window</span>).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">globals</span>) {</td>
      </tr>
      <tr>
        <td id="L2071" class="blob-num js-line-number" data-line-number="2071"></td>
        <td id="LC2071" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> subtype <span class="pl-k">=</span> <span class="pl-smi">rxSubtype</span>.<span class="pl-c1">exec</span>(globals);</td>
      </tr>
      <tr>
        <td id="L2072" class="blob-num js-line-number" data-line-number="2072"></td>
        <td id="LC2072" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (subtype <span class="pl-k">&amp;&amp;</span> subtype[<span class="pl-c1">1</span>] <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>SVG<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2073" class="blob-num js-line-number" data-line-number="2073"></td>
        <td id="LC2073" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2074" class="blob-num js-line-number" data-line-number="2074"></td>
        <td id="LC2074" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> element <span class="pl-k">=</span> subtype[<span class="pl-c1">1</span>] <span class="pl-k">?</span> <span class="pl-c1">document</span>.<span class="pl-c1">createElementNS</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/2000/svg<span class="pl-pds">&quot;</span></span>, (subtype[<span class="pl-c1">1</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>()) <span class="pl-k">:</span> <span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>), <span class="pl-en">constructor </span>= element.<span class="pl-en">constructor</span>;</td>
      </tr>
      <tr>
        <td id="L2075" class="blob-num js-line-number" data-line-number="2075"></td>
        <td id="LC2075" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">for</span> (<span class="pl-k">var</span> <span class="pl-smi">attribute</span> <span class="pl-k">in</span> <span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L2076" class="blob-num js-line-number" data-line-number="2076"></td>
        <td id="LC2076" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> value <span class="pl-k">=</span> element[attribute];</td>
      </tr>
      <tr>
        <td id="L2077" class="blob-num js-line-number" data-line-number="2077"></td>
        <td id="LC2077" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-en">isString</span>(attribute) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(attribute[<span class="pl-c1">0</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>o<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> attribute[<span class="pl-c1">1</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span>) <span class="pl-k">&amp;&amp;</span> attribute <span class="pl-k">!==</span> <span class="pl-smi">attribute</span>.<span class="pl-c1">toUpperCase</span>() <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-smi">rxElement</span>.<span class="pl-c1">test</span>(attribute) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(attribute <span class="pl-k">in</span> base) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-en">isFunction</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L2078" class="blob-num js-line-number" data-line-number="2078"></td>
        <td id="LC2078" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">//</span> TODO: Should this all be set on the generic SVGElement, it would save space and time, but not as powerful</span></td>
      </tr>
      <tr>
        <td id="L2079" class="blob-num js-line-number" data-line-number="2079"></td>
        <td id="LC2079" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-en">constructor</span>, attribute, <span class="pl-en">getAttribute</span>(<span class="pl-smi">attribute</span>) ]);</td>
      </tr>
      <tr>
        <td id="L2080" class="blob-num js-line-number" data-line-number="2080"></td>
        <td id="LC2080" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L2081" class="blob-num js-line-number" data-line-number="2081"></td>
        <td id="LC2081" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2082" class="blob-num js-line-number" data-line-number="2082"></td>
        <td id="LC2082" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L2083" class="blob-num js-line-number" data-line-number="2083"></td>
        <td id="LC2083" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Error when trying to identify SVG attributes on <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> globals <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>, e);</td>
      </tr>
      <tr>
        <td id="L2084" class="blob-num js-line-number" data-line-number="2084"></td>
        <td id="LC2084" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2085" class="blob-num js-line-number" data-line-number="2085"></td>
        <td id="LC2085" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2086" class="blob-num js-line-number" data-line-number="2086"></td>
        <td id="LC2086" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2087" class="blob-num js-line-number" data-line-number="2087"></td>
        <td id="LC2087" class="blob-code blob-code-inner js-file-line">    })(<span class="pl-c1">CSS</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2088" class="blob-num js-line-number" data-line-number="2088"></td>
        <td id="LC2088" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2089" class="blob-num js-line-number" data-line-number="2089"></td>
        <td id="LC2089" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2090" class="blob-num js-line-number" data-line-number="2090"></td>
        <td id="LC2090" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;../normalizations.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L2091" class="blob-num js-line-number" data-line-number="2091"></td>
        <td id="LC2091" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2092" class="blob-num js-line-number" data-line-number="2092"></td>
        <td id="LC2092" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2093" class="blob-num js-line-number" data-line-number="2093"></td>
        <td id="LC2093" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2094" class="blob-num js-line-number" data-line-number="2094"></td>
        <td id="LC2094" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2095" class="blob-num js-line-number" data-line-number="2095"></td>
        <td id="LC2095" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2096" class="blob-num js-line-number" data-line-number="2096"></td>
        <td id="LC2096" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2097" class="blob-num js-line-number" data-line-number="2097"></td>
        <td id="LC2097" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2098" class="blob-num js-line-number" data-line-number="2098"></td>
        <td id="LC2098" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">CSS</span>;</td>
      </tr>
      <tr>
        <td id="L2099" class="blob-num js-line-number" data-line-number="2099"></td>
        <td id="LC2099" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span>(<span class="pl-c1">CSS</span>) {</td>
      </tr>
      <tr>
        <td id="L2100" class="blob-num js-line-number" data-line-number="2100"></td>
        <td id="LC2100" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2101" class="blob-num js-line-number" data-line-number="2101"></td>
        <td id="LC2101" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Get/set the width or height.</span></td>
      </tr>
      <tr>
        <td id="L2102" class="blob-num js-line-number" data-line-number="2102"></td>
        <td id="LC2102" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2103" class="blob-num js-line-number" data-line-number="2103"></td>
        <td id="LC2103" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">getDimension</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L2104" class="blob-num js-line-number" data-line-number="2104"></td>
        <td id="LC2104" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2105" class="blob-num js-line-number" data-line-number="2105"></td>
        <td id="LC2105" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (propertyValue <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2106" class="blob-num js-line-number" data-line-number="2106"></td>
        <td id="LC2106" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Firefox throws an error if .getBBox() is called on an SVG that isn&#39;t attached to the DOM.</span></td>
      </tr>
      <tr>
        <td id="L2107" class="blob-num js-line-number" data-line-number="2107"></td>
        <td id="LC2107" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2108" class="blob-num js-line-number" data-line-number="2108"></td>
        <td id="LC2108" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> <span class="pl-smi">element</span>.<span class="pl-en">getBBox</span>()[name] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2109" class="blob-num js-line-number" data-line-number="2109"></td>
        <td id="LC2109" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L2110" class="blob-num js-line-number" data-line-number="2110"></td>
        <td id="LC2110" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2111" class="blob-num js-line-number" data-line-number="2111"></td>
        <td id="LC2111" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2112" class="blob-num js-line-number" data-line-number="2112"></td>
        <td id="LC2112" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2113" class="blob-num js-line-number" data-line-number="2113"></td>
        <td id="LC2113" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">element</span>.<span class="pl-c1">setAttribute</span>(name, propertyValue);</td>
      </tr>
      <tr>
        <td id="L2114" class="blob-num js-line-number" data-line-number="2114"></td>
        <td id="LC2114" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L2115" class="blob-num js-line-number" data-line-number="2115"></td>
        <td id="LC2115" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2116" class="blob-num js-line-number" data-line-number="2116"></td>
        <td id="LC2116" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">SVGElement</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, <span class="pl-en">getDimension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>) ]);</td>
      </tr>
      <tr>
        <td id="L2117" class="blob-num js-line-number" data-line-number="2117"></td>
        <td id="LC2117" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">SVGElement</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, <span class="pl-en">getDimension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>) ]);</td>
      </tr>
      <tr>
        <td id="L2118" class="blob-num js-line-number" data-line-number="2118"></td>
        <td id="LC2118" class="blob-code blob-code-inner js-file-line">    })(<span class="pl-c1">CSS</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">||</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span> <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2119" class="blob-num js-line-number" data-line-number="2119"></td>
        <td id="LC2119" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2120" class="blob-num js-line-number" data-line-number="2120"></td>
        <td id="LC2120" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2121" class="blob-num js-line-number" data-line-number="2121"></td>
        <td id="LC2121" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;normalizations.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L2122" class="blob-num js-line-number" data-line-number="2122"></td>
        <td id="LC2122" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2123" class="blob-num js-line-number" data-line-number="2123"></td>
        <td id="LC2123" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2124" class="blob-num js-line-number" data-line-number="2124"></td>
        <td id="LC2124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2125" class="blob-num js-line-number" data-line-number="2125"></td>
        <td id="LC2125" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2126" class="blob-num js-line-number" data-line-number="2126"></td>
        <td id="LC2126" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2127" class="blob-num js-line-number" data-line-number="2127"></td>
        <td id="LC2127" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2128" class="blob-num js-line-number" data-line-number="2128"></td>
        <td id="LC2128" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2129" class="blob-num js-line-number" data-line-number="2129"></td>
        <td id="LC2129" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2130" class="blob-num js-line-number" data-line-number="2130"></td>
        <td id="LC2130" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Figure out the dimensions for this width / height based on the</span></td>
      </tr>
      <tr>
        <td id="L2131" class="blob-num js-line-number" data-line-number="2131"></td>
        <td id="LC2131" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * potential borders and whether we care about them.</span></td>
      </tr>
      <tr>
        <td id="L2132" class="blob-num js-line-number" data-line-number="2132"></td>
        <td id="LC2132" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2133" class="blob-num js-line-number" data-line-number="2133"></td>
        <td id="LC2133" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">augmentDimension</span>(<span class="pl-smi">element</span>, <span class="pl-smi">name</span>, <span class="pl-smi">wantInner</span>) {</td>
      </tr>
      <tr>
        <td id="L2134" class="blob-num js-line-number" data-line-number="2134"></td>
        <td id="LC2134" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> isBorderBox <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>boxSizing<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toString</span>().<span class="pl-c1">toLowerCase</span>() <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>border-box<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2135" class="blob-num js-line-number" data-line-number="2135"></td>
        <td id="LC2135" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isBorderBox <span class="pl-k">===</span> wantInner) {</td>
      </tr>
      <tr>
        <td id="L2136" class="blob-num js-line-number" data-line-number="2136"></td>
        <td id="LC2136" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> in box-sizing mode, the CSS width / height accessors already</span></td>
      </tr>
      <tr>
        <td id="L2137" class="blob-num js-line-number" data-line-number="2137"></td>
        <td id="LC2137" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> give the outerWidth / outerHeight.</span></td>
      </tr>
      <tr>
        <td id="L2138" class="blob-num js-line-number" data-line-number="2138"></td>
        <td id="LC2138" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> sides <span class="pl-k">=</span> name <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>Left<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Right<span class="pl-pds">&quot;</span></span> ] <span class="pl-k">:</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Bottom<span class="pl-pds">&quot;</span></span> ], fields <span class="pl-k">=</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>padding<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> sides[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>padding<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> sides[<span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>border<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> sides[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>border<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> sides[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span> ];</td>
      </tr>
      <tr>
        <td id="L2139" class="blob-num js-line-number" data-line-number="2139"></td>
        <td id="LC2139" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>, value <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>, augment <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2140" class="blob-num js-line-number" data-line-number="2140"></td>
        <td id="LC2140" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">fields</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2141" class="blob-num js-line-number" data-line-number="2141"></td>
        <td id="LC2141" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, fields[i]));</td>
      </tr>
      <tr>
        <td id="L2142" class="blob-num js-line-number" data-line-number="2142"></td>
        <td id="LC2142" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L2143" class="blob-num js-line-number" data-line-number="2143"></td>
        <td id="LC2143" class="blob-code blob-code-inner js-file-line">                    augment <span class="pl-k">+=</span> value;</td>
      </tr>
      <tr>
        <td id="L2144" class="blob-num js-line-number" data-line-number="2144"></td>
        <td id="LC2144" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2145" class="blob-num js-line-number" data-line-number="2145"></td>
        <td id="LC2145" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2146" class="blob-num js-line-number" data-line-number="2146"></td>
        <td id="LC2146" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> wantInner <span class="pl-k">?</span> <span class="pl-k">-</span>augment <span class="pl-k">:</span> augment;</td>
      </tr>
      <tr>
        <td id="L2147" class="blob-num js-line-number" data-line-number="2147"></td>
        <td id="LC2147" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2148" class="blob-num js-line-number" data-line-number="2148"></td>
        <td id="LC2148" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2149" class="blob-num js-line-number" data-line-number="2149"></td>
        <td id="LC2149" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2150" class="blob-num js-line-number" data-line-number="2150"></td>
        <td id="LC2150" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">augmentDimension</span> <span class="pl-k">=</span> augmentDimension;</td>
      </tr>
      <tr>
        <td id="L2151" class="blob-num js-line-number" data-line-number="2151"></td>
        <td id="LC2151" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2152" class="blob-num js-line-number" data-line-number="2152"></td>
        <td id="LC2152" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Get/set the inner/outer dimension.</span></td>
      </tr>
      <tr>
        <td id="L2153" class="blob-num js-line-number" data-line-number="2153"></td>
        <td id="LC2153" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">getDimension</span>(<span class="pl-smi">name</span>, <span class="pl-smi">wantInner</span>) {</td>
      </tr>
      <tr>
        <td id="L2154" class="blob-num js-line-number" data-line-number="2154"></td>
        <td id="LC2154" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2155" class="blob-num js-line-number" data-line-number="2155"></td>
        <td id="LC2155" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (propertyValue <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2156" class="blob-num js-line-number" data-line-number="2156"></td>
        <td id="LC2156" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">augmentDimension</span>(element, name, wantInner) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2157" class="blob-num js-line-number" data-line-number="2157"></td>
        <td id="LC2157" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2158" class="blob-num js-line-number" data-line-number="2158"></td>
        <td id="LC2158" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">setPropertyValue</span>(element, name, <span class="pl-c1">parseFloat</span>(propertyValue) <span class="pl-k">-</span> <span class="pl-en">augmentDimension</span>(element, name, wantInner) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2159" class="blob-num js-line-number" data-line-number="2159"></td>
        <td id="LC2159" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2160" class="blob-num js-line-number" data-line-number="2160"></td>
        <td id="LC2160" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2161" class="blob-num js-line-number" data-line-number="2161"></td>
        <td id="LC2161" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">Element</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>innerWidth<span class="pl-pds">&quot;</span></span>, <span class="pl-en">getDimension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">true</span>) ]);</td>
      </tr>
      <tr>
        <td id="L2162" class="blob-num js-line-number" data-line-number="2162"></td>
        <td id="LC2162" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">Element</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>innerHeight<span class="pl-pds">&quot;</span></span>, <span class="pl-en">getDimension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">true</span>) ]);</td>
      </tr>
      <tr>
        <td id="L2163" class="blob-num js-line-number" data-line-number="2163"></td>
        <td id="LC2163" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">Element</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>outerWidth<span class="pl-pds">&quot;</span></span>, <span class="pl-en">getDimension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">false</span>) ]);</td>
      </tr>
      <tr>
        <td id="L2164" class="blob-num js-line-number" data-line-number="2164"></td>
        <td id="LC2164" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">Element</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>outerHeight<span class="pl-pds">&quot;</span></span>, <span class="pl-en">getDimension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">false</span>) ]);</td>
      </tr>
      <tr>
        <td id="L2165" class="blob-num js-line-number" data-line-number="2165"></td>
        <td id="LC2165" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2166" class="blob-num js-line-number" data-line-number="2166"></td>
        <td id="LC2166" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2167" class="blob-num js-line-number" data-line-number="2167"></td>
        <td id="LC2167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;normalizations.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L2168" class="blob-num js-line-number" data-line-number="2168"></td>
        <td id="LC2168" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2169" class="blob-num js-line-number" data-line-number="2169"></td>
        <td id="LC2169" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2170" class="blob-num js-line-number" data-line-number="2170"></td>
        <td id="LC2170" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2171" class="blob-num js-line-number" data-line-number="2171"></td>
        <td id="LC2171" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2172" class="blob-num js-line-number" data-line-number="2172"></td>
        <td id="LC2172" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2173" class="blob-num js-line-number" data-line-number="2173"></td>
        <td id="LC2173" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2174" class="blob-num js-line-number" data-line-number="2174"></td>
        <td id="LC2174" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2175" class="blob-num js-line-number" data-line-number="2175"></td>
        <td id="LC2175" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">inlineRx</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(b<span class="pl-k">|</span>big<span class="pl-k">|</span>i<span class="pl-k">|</span>small<span class="pl-k">|</span>tt<span class="pl-k">|</span>abbr<span class="pl-k">|</span>acronym<span class="pl-k">|</span>cite<span class="pl-k">|</span>code<span class="pl-k">|</span>dfn<span class="pl-k">|</span>em<span class="pl-k">|</span>kbd<span class="pl-k">|</span>strong<span class="pl-k">|</span>samp<span class="pl-k">|</span>let<span class="pl-k">|</span>a<span class="pl-k">|</span>bdo<span class="pl-k">|</span>br<span class="pl-k">|</span>img<span class="pl-k">|</span>map<span class="pl-k">|</span>object<span class="pl-k">|</span>q<span class="pl-k">|</span>script<span class="pl-k">|</span>span<span class="pl-k">|</span>sub<span class="pl-k">|</span>sup<span class="pl-k">|</span>button<span class="pl-k">|</span>input<span class="pl-k">|</span>label<span class="pl-k">|</span>select<span class="pl-k">|</span>textarea)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>, </td>
      </tr>
      <tr>
        <td id="L2176" class="blob-num js-line-number" data-line-number="2176"></td>
        <td id="LC2176" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">listItemRx</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(li)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">tableRowRx</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(tr)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">tableRx</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(table)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>, </td>
      </tr>
      <tr>
        <td id="L2177" class="blob-num js-line-number" data-line-number="2177"></td>
        <td id="LC2177" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">tableRowGroupRx</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(tbody)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>;</td>
      </tr>
      <tr>
        <td id="L2178" class="blob-num js-line-number" data-line-number="2178"></td>
        <td id="LC2178" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">display</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2179" class="blob-num js-line-number" data-line-number="2179"></td>
        <td id="LC2179" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> style <span class="pl-k">=</span> <span class="pl-smi">element</span>.<span class="pl-c1">style</span>;</td>
      </tr>
      <tr>
        <td id="L2180" class="blob-num js-line-number" data-line-number="2180"></td>
        <td id="LC2180" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (propertyValue <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2181" class="blob-num js-line-number" data-line-number="2181"></td>
        <td id="LC2181" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">computePropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2182" class="blob-num js-line-number" data-line-number="2182"></td>
        <td id="LC2182" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2183" class="blob-num js-line-number" data-line-number="2183"></td>
        <td id="LC2183" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (propertyValue <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2184" class="blob-num js-line-number" data-line-number="2184"></td>
        <td id="LC2184" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> nodeName <span class="pl-k">=</span> element <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">element</span>.<span class="pl-c1">nodeName</span>, data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element);</td>
      </tr>
      <tr>
        <td id="L2185" class="blob-num js-line-number" data-line-number="2185"></td>
        <td id="LC2185" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">inlineRx</span>.<span class="pl-c1">test</span>(nodeName)) {</td>
      </tr>
      <tr>
        <td id="L2186" class="blob-num js-line-number" data-line-number="2186"></td>
        <td id="LC2186" class="blob-code blob-code-inner js-file-line">                propertyValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>inline<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2187" class="blob-num js-line-number" data-line-number="2187"></td>
        <td id="LC2187" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">listItemRx</span>.<span class="pl-c1">test</span>(nodeName)) {</td>
      </tr>
      <tr>
        <td id="L2188" class="blob-num js-line-number" data-line-number="2188"></td>
        <td id="LC2188" class="blob-code blob-code-inner js-file-line">                propertyValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>list-item<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2189" class="blob-num js-line-number" data-line-number="2189"></td>
        <td id="LC2189" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">tableRowRx</span>.<span class="pl-c1">test</span>(nodeName)) {</td>
      </tr>
      <tr>
        <td id="L2190" class="blob-num js-line-number" data-line-number="2190"></td>
        <td id="LC2190" class="blob-code blob-code-inner js-file-line">                propertyValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>table-row<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2191" class="blob-num js-line-number" data-line-number="2191"></td>
        <td id="LC2191" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">tableRx</span>.<span class="pl-c1">test</span>(nodeName)) {</td>
      </tr>
      <tr>
        <td id="L2192" class="blob-num js-line-number" data-line-number="2192"></td>
        <td id="LC2192" class="blob-code blob-code-inner js-file-line">                propertyValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>table<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2193" class="blob-num js-line-number" data-line-number="2193"></td>
        <td id="LC2193" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">tableRowGroupRx</span>.<span class="pl-c1">test</span>(nodeName)) {</td>
      </tr>
      <tr>
        <td id="L2194" class="blob-num js-line-number" data-line-number="2194"></td>
        <td id="LC2194" class="blob-code blob-code-inner js-file-line">                propertyValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>table-row-group<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2195" class="blob-num js-line-number" data-line-number="2195"></td>
        <td id="LC2195" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2196" class="blob-num js-line-number" data-line-number="2196"></td>
        <td id="LC2196" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Default to &quot;block&quot; when no match is found.</span></td>
      </tr>
      <tr>
        <td id="L2197" class="blob-num js-line-number" data-line-number="2197"></td>
        <td id="LC2197" class="blob-code blob-code-inner js-file-line">                propertyValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2198" class="blob-num js-line-number" data-line-number="2198"></td>
        <td id="LC2198" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2199" class="blob-num js-line-number" data-line-number="2199"></td>
        <td id="LC2199" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> IMPORTANT: We need to do this as getPropertyValue bypasses the</span></td>
      </tr>
      <tr>
        <td id="L2200" class="blob-num js-line-number" data-line-number="2200"></td>
        <td id="LC2200" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Normalisation when it exists in the cache.</span></td>
      </tr>
      <tr>
        <td id="L2201" class="blob-num js-line-number" data-line-number="2201"></td>
        <td id="LC2201" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">data</span>.<span class="pl-smi">cache</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> propertyValue;</td>
      </tr>
      <tr>
        <td id="L2202" class="blob-num js-line-number" data-line-number="2202"></td>
        <td id="LC2202" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2203" class="blob-num js-line-number" data-line-number="2203"></td>
        <td id="LC2203" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">style</span>.<span class="pl-c1">display</span> <span class="pl-k">=</span> propertyValue;</td>
      </tr>
      <tr>
        <td id="L2204" class="blob-num js-line-number" data-line-number="2204"></td>
        <td id="LC2204" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2205" class="blob-num js-line-number" data-line-number="2205"></td>
        <td id="LC2205" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">Element</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>, display ]);</td>
      </tr>
      <tr>
        <td id="L2206" class="blob-num js-line-number" data-line-number="2206"></td>
        <td id="LC2206" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2207" class="blob-num js-line-number" data-line-number="2207"></td>
        <td id="LC2207" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2208" class="blob-num js-line-number" data-line-number="2208"></td>
        <td id="LC2208" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;normalizations.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L2209" class="blob-num js-line-number" data-line-number="2209"></td>
        <td id="LC2209" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2210" class="blob-num js-line-number" data-line-number="2210"></td>
        <td id="LC2210" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2211" class="blob-num js-line-number" data-line-number="2211"></td>
        <td id="LC2211" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2212" class="blob-num js-line-number" data-line-number="2212"></td>
        <td id="LC2212" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2213" class="blob-num js-line-number" data-line-number="2213"></td>
        <td id="LC2213" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2214" class="blob-num js-line-number" data-line-number="2214"></td>
        <td id="LC2214" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2215" class="blob-num js-line-number" data-line-number="2215"></td>
        <td id="LC2215" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2216" class="blob-num js-line-number" data-line-number="2216"></td>
        <td id="LC2216" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">clientWidth</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2217" class="blob-num js-line-number" data-line-number="2217"></td>
        <td id="LC2217" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (propertyValue <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L2218" class="blob-num js-line-number" data-line-number="2218"></td>
        <td id="LC2218" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">element</span>.<span class="pl-smi">clientWidth</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2219" class="blob-num js-line-number" data-line-number="2219"></td>
        <td id="LC2219" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2220" class="blob-num js-line-number" data-line-number="2220"></td>
        <td id="LC2220" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2221" class="blob-num js-line-number" data-line-number="2221"></td>
        <td id="LC2221" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scrollWidth</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2222" class="blob-num js-line-number" data-line-number="2222"></td>
        <td id="LC2222" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (propertyValue <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L2223" class="blob-num js-line-number" data-line-number="2223"></td>
        <td id="LC2223" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">element</span>.<span class="pl-smi">scrollWidth</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2224" class="blob-num js-line-number" data-line-number="2224"></td>
        <td id="LC2224" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2225" class="blob-num js-line-number" data-line-number="2225"></td>
        <td id="LC2225" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2226" class="blob-num js-line-number" data-line-number="2226"></td>
        <td id="LC2226" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">clientHeight</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2227" class="blob-num js-line-number" data-line-number="2227"></td>
        <td id="LC2227" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (propertyValue <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L2228" class="blob-num js-line-number" data-line-number="2228"></td>
        <td id="LC2228" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">element</span>.<span class="pl-smi">clientHeight</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2229" class="blob-num js-line-number" data-line-number="2229"></td>
        <td id="LC2229" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2230" class="blob-num js-line-number" data-line-number="2230"></td>
        <td id="LC2230" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2231" class="blob-num js-line-number" data-line-number="2231"></td>
        <td id="LC2231" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scrollHeight</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2232" class="blob-num js-line-number" data-line-number="2232"></td>
        <td id="LC2232" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (propertyValue <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L2233" class="blob-num js-line-number" data-line-number="2233"></td>
        <td id="LC2233" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">element</span>.<span class="pl-smi">scrollHeight</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2234" class="blob-num js-line-number" data-line-number="2234"></td>
        <td id="LC2234" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2235" class="blob-num js-line-number" data-line-number="2235"></td>
        <td id="LC2235" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2236" class="blob-num js-line-number" data-line-number="2236"></td>
        <td id="LC2236" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scroll</span>(<span class="pl-smi">direction</span>, <span class="pl-smi">end</span>) {</td>
      </tr>
      <tr>
        <td id="L2237" class="blob-num js-line-number" data-line-number="2237"></td>
        <td id="LC2237" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2238" class="blob-num js-line-number" data-line-number="2238"></td>
        <td id="LC2238" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (propertyValue <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L2239" class="blob-num js-line-number" data-line-number="2239"></td>
        <td id="LC2239" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Make sure we have these values cached.</span></td>
      </tr>
      <tr>
        <td id="L2240" class="blob-num js-line-number" data-line-number="2240"></td>
        <td id="LC2240" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>client<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> direction, <span class="pl-c1">null</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2241" class="blob-num js-line-number" data-line-number="2241"></td>
        <td id="LC2241" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> direction, <span class="pl-c1">null</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2242" class="blob-num js-line-number" data-line-number="2242"></td>
        <td id="LC2242" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> end, <span class="pl-c1">null</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2243" class="blob-num js-line-number" data-line-number="2243"></td>
        <td id="LC2243" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> element[<span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> end] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2244" class="blob-num js-line-number" data-line-number="2244"></td>
        <td id="LC2244" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2245" class="blob-num js-line-number" data-line-number="2245"></td>
        <td id="LC2245" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>		console.log(&quot;setScrollTop&quot;, propertyValue)</span></td>
      </tr>
      <tr>
        <td id="L2246" class="blob-num js-line-number" data-line-number="2246"></td>
        <td id="LC2246" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> value <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(propertyValue), unit <span class="pl-k">=</span> <span class="pl-smi">propertyValue</span>.<span class="pl-c1">replace</span>(<span class="pl-c1">String</span>(value), <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2247" class="blob-num js-line-number" data-line-number="2247"></td>
        <td id="LC2247" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">switch</span> (unit) {</td>
      </tr>
      <tr>
        <td id="L2248" class="blob-num js-line-number" data-line-number="2248"></td>
        <td id="LC2248" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L2249" class="blob-num js-line-number" data-line-number="2249"></td>
        <td id="LC2249" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L2250" class="blob-num js-line-number" data-line-number="2250"></td>
        <td id="LC2250" class="blob-code blob-code-inner js-file-line">                element[<span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> end] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2251" class="blob-num js-line-number" data-line-number="2251"></td>
        <td id="LC2251" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L2252" class="blob-num js-line-number" data-line-number="2252"></td>
        <td id="LC2252" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2253" class="blob-num js-line-number" data-line-number="2253"></td>
        <td id="LC2253" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>:</td>
      </tr>
      <tr>
        <td id="L2254" class="blob-num js-line-number" data-line-number="2254"></td>
        <td id="LC2254" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> client <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>client<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> direction)), scroll_1 <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> direction));</td>
      </tr>
      <tr>
        <td id="L2255" class="blob-num js-line-number" data-line-number="2255"></td>
        <td id="LC2255" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>				console.log(&quot;setScrollTop percent&quot;, scrollHeight, clientHeight, value, Math.max(0, scrollHeight - clientHeight) * value / 100)</span></td>
      </tr>
      <tr>
        <td id="L2256" class="blob-num js-line-number" data-line-number="2256"></td>
        <td id="LC2256" class="blob-code blob-code-inner js-file-line">                                element[<span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> end] <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, scroll_1 <span class="pl-k">-</span> client) <span class="pl-k">*</span> value <span class="pl-k">/</span> <span class="pl-c1">100</span>;</td>
      </tr>
      <tr>
        <td id="L2257" class="blob-num js-line-number" data-line-number="2257"></td>
        <td id="LC2257" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2258" class="blob-num js-line-number" data-line-number="2258"></td>
        <td id="LC2258" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2259" class="blob-num js-line-number" data-line-number="2259"></td>
        <td id="LC2259" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2260" class="blob-num js-line-number" data-line-number="2260"></td>
        <td id="LC2260" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">HTMLElement</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span>, <span class="pl-en">scroll</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Height<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>), <span class="pl-c1">false</span> ]);</td>
      </tr>
      <tr>
        <td id="L2261" class="blob-num js-line-number" data-line-number="2261"></td>
        <td id="LC2261" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">HTMLElement</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>scrollTop<span class="pl-pds">&quot;</span></span>, <span class="pl-en">scroll</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Height<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>), <span class="pl-c1">false</span> ]);</td>
      </tr>
      <tr>
        <td id="L2262" class="blob-num js-line-number" data-line-number="2262"></td>
        <td id="LC2262" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">HTMLElement</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>scrollLeft<span class="pl-pds">&quot;</span></span>, <span class="pl-en">scroll</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Left<span class="pl-pds">&quot;</span></span>), <span class="pl-c1">false</span> ]);</td>
      </tr>
      <tr>
        <td id="L2263" class="blob-num js-line-number" data-line-number="2263"></td>
        <td id="LC2263" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">HTMLElement</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>scrollWidth<span class="pl-pds">&quot;</span></span>, scrollWidth ]);</td>
      </tr>
      <tr>
        <td id="L2264" class="blob-num js-line-number" data-line-number="2264"></td>
        <td id="LC2264" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">HTMLElement</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>clientWidth<span class="pl-pds">&quot;</span></span>, clientWidth ]);</td>
      </tr>
      <tr>
        <td id="L2265" class="blob-num js-line-number" data-line-number="2265"></td>
        <td id="LC2265" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">HTMLElement</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>scrollHeight<span class="pl-pds">&quot;</span></span>, scrollHeight ]);</td>
      </tr>
      <tr>
        <td id="L2266" class="blob-num js-line-number" data-line-number="2266"></td>
        <td id="LC2266" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">HTMLElement</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>clientHeight<span class="pl-pds">&quot;</span></span>, clientHeight ]);</td>
      </tr>
      <tr>
        <td id="L2267" class="blob-num js-line-number" data-line-number="2267"></td>
        <td id="LC2267" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2268" class="blob-num js-line-number" data-line-number="2268"></td>
        <td id="LC2268" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2269" class="blob-num js-line-number" data-line-number="2269"></td>
        <td id="LC2269" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;normalizations.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L2270" class="blob-num js-line-number" data-line-number="2270"></td>
        <td id="LC2270" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2271" class="blob-num js-line-number" data-line-number="2271"></td>
        <td id="LC2271" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2272" class="blob-num js-line-number" data-line-number="2272"></td>
        <td id="LC2272" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2273" class="blob-num js-line-number" data-line-number="2273"></td>
        <td id="LC2273" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2274" class="blob-num js-line-number" data-line-number="2274"></td>
        <td id="LC2274" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2275" class="blob-num js-line-number" data-line-number="2275"></td>
        <td id="LC2275" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This handles all CSS style properties. With browser prefixed properties it</span></td>
      </tr>
      <tr>
        <td id="L2276" class="blob-num js-line-number" data-line-number="2276"></td>
        <td id="LC2276" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * will register a version that handles setting (and getting) both the prefixed</span></td>
      </tr>
      <tr>
        <td id="L2277" class="blob-num js-line-number" data-line-number="2277"></td>
        <td id="LC2277" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * and non-prefixed version.</span></td>
      </tr>
      <tr>
        <td id="L2278" class="blob-num js-line-number" data-line-number="2278"></td>
        <td id="LC2278" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2279" class="blob-num js-line-number" data-line-number="2279"></td>
        <td id="LC2279" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2280" class="blob-num js-line-number" data-line-number="2280"></td>
        <td id="LC2280" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2281" class="blob-num js-line-number" data-line-number="2281"></td>
        <td id="LC2281" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2282" class="blob-num js-line-number" data-line-number="2282"></td>
        <td id="LC2282" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Return a Normalisation that can be used to set / get a prefixed style</span></td>
      </tr>
      <tr>
        <td id="L2283" class="blob-num js-line-number" data-line-number="2283"></td>
        <td id="LC2283" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * property.</span></td>
      </tr>
      <tr>
        <td id="L2284" class="blob-num js-line-number" data-line-number="2284"></td>
        <td id="LC2284" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2285" class="blob-num js-line-number" data-line-number="2285"></td>
        <td id="LC2285" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getSetPrefixed</span>(<span class="pl-smi">propertyName</span>, <span class="pl-smi">unprefixed</span>) {</td>
      </tr>
      <tr>
        <td id="L2286" class="blob-num js-line-number" data-line-number="2286"></td>
        <td id="LC2286" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2287" class="blob-num js-line-number" data-line-number="2287"></td>
        <td id="LC2287" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (propertyValue <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2288" class="blob-num js-line-number" data-line-number="2288"></td>
        <td id="LC2288" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">computePropertyValue</span>(element, propertyName) <span class="pl-k">||</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">computePropertyValue</span>(element, unprefixed);</td>
      </tr>
      <tr>
        <td id="L2289" class="blob-num js-line-number" data-line-number="2289"></td>
        <td id="LC2289" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2290" class="blob-num js-line-number" data-line-number="2290"></td>
        <td id="LC2290" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">element</span>.<span class="pl-c1">style</span>[propertyName] <span class="pl-k">=</span> <span class="pl-smi">element</span>.<span class="pl-c1">style</span>[unprefixed] <span class="pl-k">=</span> propertyValue;</td>
      </tr>
      <tr>
        <td id="L2291" class="blob-num js-line-number" data-line-number="2291"></td>
        <td id="LC2291" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2292" class="blob-num js-line-number" data-line-number="2292"></td>
        <td id="LC2292" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2293" class="blob-num js-line-number" data-line-number="2293"></td>
        <td id="LC2293" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2294" class="blob-num js-line-number" data-line-number="2294"></td>
        <td id="LC2294" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Return a Normalisation that can be used to set / get a style property.</span></td>
      </tr>
      <tr>
        <td id="L2295" class="blob-num js-line-number" data-line-number="2295"></td>
        <td id="LC2295" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">getSetStyle</span>(<span class="pl-smi">propertyName</span>) {</td>
      </tr>
      <tr>
        <td id="L2296" class="blob-num js-line-number" data-line-number="2296"></td>
        <td id="LC2296" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2297" class="blob-num js-line-number" data-line-number="2297"></td>
        <td id="LC2297" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (propertyValue <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2298" class="blob-num js-line-number" data-line-number="2298"></td>
        <td id="LC2298" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">computePropertyValue</span>(element, propertyName);</td>
      </tr>
      <tr>
        <td id="L2299" class="blob-num js-line-number" data-line-number="2299"></td>
        <td id="LC2299" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2300" class="blob-num js-line-number" data-line-number="2300"></td>
        <td id="LC2300" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">element</span>.<span class="pl-c1">style</span>[propertyName] <span class="pl-k">=</span> propertyValue;</td>
      </tr>
      <tr>
        <td id="L2301" class="blob-num js-line-number" data-line-number="2301"></td>
        <td id="LC2301" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2302" class="blob-num js-line-number" data-line-number="2302"></td>
        <td id="LC2302" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2303" class="blob-num js-line-number" data-line-number="2303"></td>
        <td id="LC2303" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> rxVendors <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(webkit<span class="pl-k">|</span>moz<span class="pl-k">|</span>ms<span class="pl-k">|</span>o)<span class="pl-c1">[<span class="pl-c1">A-Z</span>]</span><span class="pl-pds">/</span></span>, rxUnit <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\d</span><span class="pl-k">+</span>(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span>)<span class="pl-pds">/</span></span>, prefixElement <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">prefixElement</span>;</td>
      </tr>
      <tr>
        <td id="L2304" class="blob-num js-line-number" data-line-number="2304"></td>
        <td id="LC2304" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> propertyName <span class="pl-k">in</span> <span class="pl-smi">prefixElement</span>.<span class="pl-c1">style</span>) {</td>
      </tr>
      <tr>
        <td id="L2305" class="blob-num js-line-number" data-line-number="2305"></td>
        <td id="LC2305" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">rxVendors</span>.<span class="pl-c1">test</span>(propertyName)) {</td>
      </tr>
      <tr>
        <td id="L2306" class="blob-num js-line-number" data-line-number="2306"></td>
        <td id="LC2306" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> unprefixed <span class="pl-k">=</span> <span class="pl-smi">propertyName</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span>(<span class="pl-c1">[<span class="pl-c1">A-Z</span>]</span>)<span class="pl-pds">/</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$</span>, <span class="pl-smi">letter</span>) {</td>
      </tr>
      <tr>
        <td id="L2307" class="blob-num js-line-number" data-line-number="2307"></td>
        <td id="LC2307" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-smi">letter</span>.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L2308" class="blob-num js-line-number" data-line-number="2308"></td>
        <td id="LC2308" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2309" class="blob-num js-line-number" data-line-number="2309"></td>
        <td id="LC2309" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">ALL_VENDOR_PREFIXES</span> <span class="pl-k">||</span> <span class="pl-en">isString</span>(<span class="pl-smi">prefixElement</span>.<span class="pl-c1">style</span>[unprefixed])) {</td>
      </tr>
      <tr>
        <td id="L2310" class="blob-num js-line-number" data-line-number="2310"></td>
        <td id="LC2310" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">Element</span>, unprefixed, <span class="pl-en">getSetPrefixed</span>(propertyName, unprefixed) ]);</td>
      </tr>
      <tr>
        <td id="L2311" class="blob-num js-line-number" data-line-number="2311"></td>
        <td id="LC2311" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2312" class="blob-num js-line-number" data-line-number="2312"></td>
        <td id="LC2312" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">VelocityStatic</span>.<span class="pl-en">hasNormalization</span>([ <span class="pl-c1">Element</span>, propertyName ])) {</td>
      </tr>
      <tr>
        <td id="L2313" class="blob-num js-line-number" data-line-number="2313"></td>
        <td id="LC2313" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">Element</span>, propertyName, <span class="pl-en">getSetStyle</span>(propertyName) ]);</td>
      </tr>
      <tr>
        <td id="L2314" class="blob-num js-line-number" data-line-number="2314"></td>
        <td id="LC2314" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2315" class="blob-num js-line-number" data-line-number="2315"></td>
        <td id="LC2315" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2316" class="blob-num js-line-number" data-line-number="2316"></td>
        <td id="LC2316" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2317" class="blob-num js-line-number" data-line-number="2317"></td>
        <td id="LC2317" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2318" class="blob-num js-line-number" data-line-number="2318"></td>
        <td id="LC2318" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;normalizations.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L2319" class="blob-num js-line-number" data-line-number="2319"></td>
        <td id="LC2319" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2320" class="blob-num js-line-number" data-line-number="2320"></td>
        <td id="LC2320" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2321" class="blob-num js-line-number" data-line-number="2321"></td>
        <td id="LC2321" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2322" class="blob-num js-line-number" data-line-number="2322"></td>
        <td id="LC2322" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2323" class="blob-num js-line-number" data-line-number="2323"></td>
        <td id="LC2323" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2324" class="blob-num js-line-number" data-line-number="2324"></td>
        <td id="LC2324" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2325" class="blob-num js-line-number" data-line-number="2325"></td>
        <td id="LC2325" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2326" class="blob-num js-line-number" data-line-number="2326"></td>
        <td id="LC2326" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2327" class="blob-num js-line-number" data-line-number="2327"></td>
        <td id="LC2327" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * A fake normalization used to allow the &quot;tween&quot; property easy access.</span></td>
      </tr>
      <tr>
        <td id="L2328" class="blob-num js-line-number" data-line-number="2328"></td>
        <td id="LC2328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2329" class="blob-num js-line-number" data-line-number="2329"></td>
        <td id="LC2329" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getSetTween</span>(<span class="pl-smi">element</span>, <span class="pl-smi">propertyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L2330" class="blob-num js-line-number" data-line-number="2330"></td>
        <td id="LC2330" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (propertyValue <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2331" class="blob-num js-line-number" data-line-number="2331"></td>
        <td id="LC2331" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2332" class="blob-num js-line-number" data-line-number="2332"></td>
        <td id="LC2332" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2333" class="blob-num js-line-number" data-line-number="2333"></td>
        <td id="LC2333" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2334" class="blob-num js-line-number" data-line-number="2334"></td>
        <td id="LC2334" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">registerNormalization</span>([ <span class="pl-c1">Element</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>tween<span class="pl-pds">&quot;</span></span>, getSetTween ]);</td>
      </tr>
      <tr>
        <td id="L2335" class="blob-num js-line-number" data-line-number="2335"></td>
        <td id="LC2335" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2336" class="blob-num js-line-number" data-line-number="2336"></td>
        <td id="LC2336" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2337" class="blob-num js-line-number" data-line-number="2337"></td>
        <td id="LC2337" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2338" class="blob-num js-line-number" data-line-number="2338"></td>
        <td id="LC2338" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2339" class="blob-num js-line-number" data-line-number="2339"></td>
        <td id="LC2339" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2340" class="blob-num js-line-number" data-line-number="2340"></td>
        <td id="LC2340" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2341" class="blob-num js-line-number" data-line-number="2341"></td>
        <td id="LC2341" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2342" class="blob-num js-line-number" data-line-number="2342"></td>
        <td id="LC2342" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Call Completion</span></td>
      </tr>
      <tr>
        <td id="L2343" class="blob-num js-line-number" data-line-number="2343"></td>
        <td id="LC2343" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2344" class="blob-num js-line-number" data-line-number="2344"></td>
        <td id="LC2344" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2345" class="blob-num js-line-number" data-line-number="2345"></td>
        <td id="LC2345" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2346" class="blob-num js-line-number" data-line-number="2346"></td>
        <td id="LC2346" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2347" class="blob-num js-line-number" data-line-number="2347"></td>
        <td id="LC2347" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Call the complete method of an animation in a separate function so it can</span></td>
      </tr>
      <tr>
        <td id="L2348" class="blob-num js-line-number" data-line-number="2348"></td>
        <td id="LC2348" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * benefit from JIT compiling while still having a try/catch block.</span></td>
      </tr>
      <tr>
        <td id="L2349" class="blob-num js-line-number" data-line-number="2349"></td>
        <td id="LC2349" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2350" class="blob-num js-line-number" data-line-number="2350"></td>
        <td id="LC2350" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">callComplete</span>(<span class="pl-smi">activeCall</span>) {</td>
      </tr>
      <tr>
        <td id="L2351" class="blob-num js-line-number" data-line-number="2351"></td>
        <td id="LC2351" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2352" class="blob-num js-line-number" data-line-number="2352"></td>
        <td id="LC2352" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> elements <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-c1">elements</span>;</td>
      </tr>
      <tr>
        <td id="L2353" class="blob-num js-line-number" data-line-number="2353"></td>
        <td id="LC2353" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">activeCall</span>.<span class="pl-c1">options</span>.<span class="pl-c1">complete</span>.<span class="pl-c1">call</span>(elements, elements, activeCall);</td>
      </tr>
      <tr>
        <td id="L2354" class="blob-num js-line-number" data-line-number="2354"></td>
        <td id="LC2354" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span> (error) {</td>
      </tr>
      <tr>
        <td id="L2355" class="blob-num js-line-number" data-line-number="2355"></td>
        <td id="LC2355" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2356" class="blob-num js-line-number" data-line-number="2356"></td>
        <td id="LC2356" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> error;</td>
      </tr>
      <tr>
        <td id="L2357" class="blob-num js-line-number" data-line-number="2357"></td>
        <td id="LC2357" class="blob-code blob-code-inner js-file-line">            }, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2358" class="blob-num js-line-number" data-line-number="2358"></td>
        <td id="LC2358" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2359" class="blob-num js-line-number" data-line-number="2359"></td>
        <td id="LC2359" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2360" class="blob-num js-line-number" data-line-number="2360"></td>
        <td id="LC2360" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2361" class="blob-num js-line-number" data-line-number="2361"></td>
        <td id="LC2361" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Complete an animation. This might involve restarting (for loop or repeat</span></td>
      </tr>
      <tr>
        <td id="L2362" class="blob-num js-line-number" data-line-number="2362"></td>
        <td id="LC2362" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * options). Once it is finished we also check for any callbacks or Promises</span></td>
      </tr>
      <tr>
        <td id="L2363" class="blob-num js-line-number" data-line-number="2363"></td>
        <td id="LC2363" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * that need updating.</span></td>
      </tr>
      <tr>
        <td id="L2364" class="blob-num js-line-number" data-line-number="2364"></td>
        <td id="LC2364" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">completeCall</span>(<span class="pl-smi">activeCall</span>) {</td>
      </tr>
      <tr>
        <td id="L2365" class="blob-num js-line-number" data-line-number="2365"></td>
        <td id="LC2365" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>		console.log(&quot;complete&quot;, activeCall)</span></td>
      </tr>
      <tr>
        <td id="L2366" class="blob-num js-line-number" data-line-number="2366"></td>
        <td id="LC2366" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: Check if it&#39;s not been completed already</span></td>
      </tr>
      <tr>
        <td id="L2367" class="blob-num js-line-number" data-line-number="2367"></td>
        <td id="LC2367" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> options <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-c1">options</span>, queue <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">queue</span>, <span class="pl-smi">options</span>.<span class="pl-smi">queue</span>), isLoop <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">loop</span>, <span class="pl-smi">options</span>.<span class="pl-smi">loop</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">loop</span>), isRepeat <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">repeat</span>, <span class="pl-smi">options</span>.<span class="pl-smi">repeat</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">repeat</span>), isStopped <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_flags</span> <span class="pl-k">&amp;</span> <span class="pl-c1">8</span> <span class="pl-c"><span class="pl-c">/*</span> STOPPED <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L2368" class="blob-num js-line-number" data-line-number="2368"></td>
        <td id="LC2368" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>isStopped <span class="pl-k">&amp;&amp;</span> (isLoop <span class="pl-k">||</span> isRepeat)) {</td>
      </tr>
      <tr>
        <td id="L2369" class="blob-num js-line-number" data-line-number="2369"></td>
        <td id="LC2369" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>//////////////////</span></td>
      </tr>
      <tr>
        <td id="L2370" class="blob-num js-line-number" data-line-number="2370"></td>
        <td id="LC2370" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Option: Loop   //</span></td>
      </tr>
      <tr>
        <td id="L2371" class="blob-num js-line-number" data-line-number="2371"></td>
        <td id="LC2371" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Option: Repeat //</span></td>
      </tr>
      <tr>
        <td id="L2372" class="blob-num js-line-number" data-line-number="2372"></td>
        <td id="LC2372" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>//////////////////</span></td>
      </tr>
      <tr>
        <td id="L2373" class="blob-num js-line-number" data-line-number="2373"></td>
        <td id="LC2373" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isRepeat <span class="pl-k">&amp;&amp;</span> isRepeat <span class="pl-k">!==</span> <span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L2374" class="blob-num js-line-number" data-line-number="2374"></td>
        <td id="LC2374" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">activeCall</span>.<span class="pl-smi">repeat</span> <span class="pl-k">=</span> isRepeat <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2375" class="blob-num js-line-number" data-line-number="2375"></td>
        <td id="LC2375" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (isLoop <span class="pl-k">&amp;&amp;</span> isLoop <span class="pl-k">!==</span> <span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L2376" class="blob-num js-line-number" data-line-number="2376"></td>
        <td id="LC2376" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">activeCall</span>.<span class="pl-smi">loop</span> <span class="pl-k">=</span> isLoop <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2377" class="blob-num js-line-number" data-line-number="2377"></td>
        <td id="LC2377" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">activeCall</span>.<span class="pl-smi">repeat</span> <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">repeatAgain</span>, <span class="pl-smi">options</span>.<span class="pl-smi">repeatAgain</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">repeatAgain</span>);</td>
      </tr>
      <tr>
        <td id="L2378" class="blob-num js-line-number" data-line-number="2378"></td>
        <td id="LC2378" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2379" class="blob-num js-line-number" data-line-number="2379"></td>
        <td id="LC2379" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isLoop) {</td>
      </tr>
      <tr>
        <td id="L2380" class="blob-num js-line-number" data-line-number="2380"></td>
        <td id="LC2380" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">activeCall</span>.<span class="pl-smi">_flags</span> <span class="pl-k">^=</span> <span class="pl-c1">64</span> <span class="pl-c"><span class="pl-c">/*</span> REVERSE <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L2381" class="blob-num js-line-number" data-line-number="2381"></td>
        <td id="LC2381" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2382" class="blob-num js-line-number" data-line-number="2382"></td>
        <td id="LC2382" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (queue <span class="pl-k">!==</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L2383" class="blob-num js-line-number" data-line-number="2383"></td>
        <td id="LC2383" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Can&#39;t be called when stopped so no need for an extra check.</span></td>
      </tr>
      <tr>
        <td id="L2384" class="blob-num js-line-number" data-line-number="2384"></td>
        <td id="LC2384" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">Data</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>).<span class="pl-smi">lastFinishList</span>[queue] <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">+</span> <span class="pl-en">getValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">duration</span>, <span class="pl-smi">options</span>.<span class="pl-smi">duration</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">duration</span>);</td>
      </tr>
      <tr>
        <td id="L2385" class="blob-num js-line-number" data-line-number="2385"></td>
        <td id="LC2385" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2386" class="blob-num js-line-number" data-line-number="2386"></td>
        <td id="LC2386" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">ellapsedTime</span> <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">percentComplete</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2387" class="blob-num js-line-number" data-line-number="2387"></td>
        <td id="LC2387" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">activeCall</span>.<span class="pl-smi">_flags</span> <span class="pl-k">&amp;=</span> <span class="pl-k">~</span><span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span> STARTED <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L2388" class="blob-num js-line-number" data-line-number="2388"></td>
        <td id="LC2388" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2389" class="blob-num js-line-number" data-line-number="2389"></td>
        <td id="LC2389" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> element <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>, data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element);</td>
      </tr>
      <tr>
        <td id="L2390" class="blob-num js-line-number" data-line-number="2390"></td>
        <td id="LC2390" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-k">--</span><span class="pl-smi">data</span>.<span class="pl-smi">count</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isStopped) {</td>
      </tr>
      <tr>
        <td id="L2391" class="blob-num js-line-number" data-line-number="2391"></td>
        <td id="LC2391" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>//////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2392" class="blob-num js-line-number" data-line-number="2392"></td>
        <td id="LC2392" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Feature: Classname //</span></td>
      </tr>
      <tr>
        <td id="L2393" class="blob-num js-line-number" data-line-number="2393"></td>
        <td id="LC2393" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>//////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2394" class="blob-num js-line-number" data-line-number="2394"></td>
        <td id="LC2394" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">removeClass</span>(element, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-c1">className</span>);</td>
      </tr>
      <tr>
        <td id="L2395" class="blob-num js-line-number" data-line-number="2395"></td>
        <td id="LC2395" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2396" class="blob-num js-line-number" data-line-number="2396"></td>
        <td id="LC2396" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2397" class="blob-num js-line-number" data-line-number="2397"></td>
        <td id="LC2397" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Option: Complete //</span></td>
      </tr>
      <tr>
        <td id="L2398" class="blob-num js-line-number" data-line-number="2398"></td>
        <td id="LC2398" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2399" class="blob-num js-line-number" data-line-number="2399"></td>
        <td id="LC2399" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> If this is the last animation in this list then we can check for</span></td>
      </tr>
      <tr>
        <td id="L2400" class="blob-num js-line-number" data-line-number="2400"></td>
        <td id="LC2400" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> and complete calls or Promises.</span></td>
      </tr>
      <tr>
        <td id="L2401" class="blob-num js-line-number" data-line-number="2401"></td>
        <td id="LC2401" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> TODO: When deleting an element we need to adjust these values.</span></td>
      </tr>
      <tr>
        <td id="L2402" class="blob-num js-line-number" data-line-number="2402"></td>
        <td id="LC2402" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (options <span class="pl-k">&amp;&amp;</span> <span class="pl-k">++</span><span class="pl-smi">options</span>.<span class="pl-smi">_completed</span> <span class="pl-k">===</span> <span class="pl-smi">options</span>.<span class="pl-smi">_total</span>) {</td>
      </tr>
      <tr>
        <td id="L2403" class="blob-num js-line-number" data-line-number="2403"></td>
        <td id="LC2403" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>isStopped <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">options</span>.<span class="pl-c1">complete</span>) {</td>
      </tr>
      <tr>
        <td id="L2404" class="blob-num js-line-number" data-line-number="2404"></td>
        <td id="LC2404" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> We don&#39;t call the complete if the animation is stopped,</span></td>
      </tr>
      <tr>
        <td id="L2405" class="blob-num js-line-number" data-line-number="2405"></td>
        <td id="LC2405" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> and we clear the key to prevent it being called again.</span></td>
      </tr>
      <tr>
        <td id="L2406" class="blob-num js-line-number" data-line-number="2406"></td>
        <td id="LC2406" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">callComplete</span>(activeCall);</td>
      </tr>
      <tr>
        <td id="L2407" class="blob-num js-line-number" data-line-number="2407"></td>
        <td id="LC2407" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">options</span>.<span class="pl-c1">complete</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2408" class="blob-num js-line-number" data-line-number="2408"></td>
        <td id="LC2408" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2409" class="blob-num js-line-number" data-line-number="2409"></td>
        <td id="LC2409" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> resolver <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">_resolver</span>;</td>
      </tr>
      <tr>
        <td id="L2410" class="blob-num js-line-number" data-line-number="2410"></td>
        <td id="LC2410" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (resolver) {</td>
      </tr>
      <tr>
        <td id="L2411" class="blob-num js-line-number" data-line-number="2411"></td>
        <td id="LC2411" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Fulfil the Promise</span></td>
      </tr>
      <tr>
        <td id="L2412" class="blob-num js-line-number" data-line-number="2412"></td>
        <td id="LC2412" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">resolver</span>(<span class="pl-smi">activeCall</span>.<span class="pl-c1">elements</span>);</td>
      </tr>
      <tr>
        <td id="L2413" class="blob-num js-line-number" data-line-number="2413"></td>
        <td id="LC2413" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">delete</span> <span class="pl-smi">options</span>.<span class="pl-smi">_resolver</span>;</td>
      </tr>
      <tr>
        <td id="L2414" class="blob-num js-line-number" data-line-number="2414"></td>
        <td id="LC2414" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2415" class="blob-num js-line-number" data-line-number="2415"></td>
        <td id="LC2415" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2416" class="blob-num js-line-number" data-line-number="2416"></td>
        <td id="LC2416" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>/////////////////</span></td>
      </tr>
      <tr>
        <td id="L2417" class="blob-num js-line-number" data-line-number="2417"></td>
        <td id="LC2417" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Option: Queue //</span></td>
      </tr>
      <tr>
        <td id="L2418" class="blob-num js-line-number" data-line-number="2418"></td>
        <td id="LC2418" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>/////////////////</span></td>
      </tr>
      <tr>
        <td id="L2419" class="blob-num js-line-number" data-line-number="2419"></td>
        <td id="LC2419" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (queue <span class="pl-k">!==</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L2420" class="blob-num js-line-number" data-line-number="2420"></td>
        <td id="LC2420" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> We only do clever things with queues...</span></td>
      </tr>
      <tr>
        <td id="L2421" class="blob-num js-line-number" data-line-number="2421"></td>
        <td id="LC2421" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>isStopped) {</td>
      </tr>
      <tr>
        <td id="L2422" class="blob-num js-line-number" data-line-number="2422"></td>
        <td id="LC2422" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> If we&#39;re not stopping an animation, we need to remember</span></td>
      </tr>
      <tr>
        <td id="L2423" class="blob-num js-line-number" data-line-number="2423"></td>
        <td id="LC2423" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> what time it finished so that the next animation in</span></td>
      </tr>
      <tr>
        <td id="L2424" class="blob-num js-line-number" data-line-number="2424"></td>
        <td id="LC2424" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> sequence gets the correct start time.</span></td>
      </tr>
      <tr>
        <td id="L2425" class="blob-num js-line-number" data-line-number="2425"></td>
        <td id="LC2425" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">data</span>.<span class="pl-smi">lastFinishList</span>[queue] <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">+</span> <span class="pl-en">getValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">duration</span>, <span class="pl-smi">options</span>.<span class="pl-smi">duration</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">duration</span>);</td>
      </tr>
      <tr>
        <td id="L2426" class="blob-num js-line-number" data-line-number="2426"></td>
        <td id="LC2426" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2427" class="blob-num js-line-number" data-line-number="2427"></td>
        <td id="LC2427" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Start the next animation in sequence, or delete the queue if</span></td>
      </tr>
      <tr>
        <td id="L2428" class="blob-num js-line-number" data-line-number="2428"></td>
        <td id="LC2428" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> this was the last one.</span></td>
      </tr>
      <tr>
        <td id="L2429" class="blob-num js-line-number" data-line-number="2429"></td>
        <td id="LC2429" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">dequeue</span>(element, queue);</td>
      </tr>
      <tr>
        <td id="L2430" class="blob-num js-line-number" data-line-number="2430"></td>
        <td id="LC2430" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2431" class="blob-num js-line-number" data-line-number="2431"></td>
        <td id="LC2431" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Cleanup any pointers, and remember the last animation etc.</span></td>
      </tr>
      <tr>
        <td id="L2432" class="blob-num js-line-number" data-line-number="2432"></td>
        <td id="LC2432" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">freeAnimationCall</span>(activeCall);</td>
      </tr>
      <tr>
        <td id="L2433" class="blob-num js-line-number" data-line-number="2433"></td>
        <td id="LC2433" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2434" class="blob-num js-line-number" data-line-number="2434"></td>
        <td id="LC2434" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2435" class="blob-num js-line-number" data-line-number="2435"></td>
        <td id="LC2435" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">completeCall</span> <span class="pl-k">=</span> completeCall;</td>
      </tr>
      <tr>
        <td id="L2436" class="blob-num js-line-number" data-line-number="2436"></td>
        <td id="LC2436" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2437" class="blob-num js-line-number" data-line-number="2437"></td>
        <td id="LC2437" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2438" class="blob-num js-line-number" data-line-number="2438"></td>
        <td id="LC2438" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2439" class="blob-num js-line-number" data-line-number="2439"></td>
        <td id="LC2439" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2440" class="blob-num js-line-number" data-line-number="2440"></td>
        <td id="LC2440" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2441" class="blob-num js-line-number" data-line-number="2441"></td>
        <td id="LC2441" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2442" class="blob-num js-line-number" data-line-number="2442"></td>
        <td id="LC2442" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2443" class="blob-num js-line-number" data-line-number="2443"></td>
        <td id="LC2443" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2444" class="blob-num js-line-number" data-line-number="2444"></td>
        <td id="LC2444" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Get (and create) the internal data store for an element.</span></td>
      </tr>
      <tr>
        <td id="L2445" class="blob-num js-line-number" data-line-number="2445"></td>
        <td id="LC2445" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2446" class="blob-num js-line-number" data-line-number="2446"></td>
        <td id="LC2446" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Data</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L2447" class="blob-num js-line-number" data-line-number="2447"></td>
        <td id="LC2447" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Use a string member so Uglify doesn&#39;t mangle it.</span></td>
      </tr>
      <tr>
        <td id="L2448" class="blob-num js-line-number" data-line-number="2448"></td>
        <td id="LC2448" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> data <span class="pl-k">=</span> element[<span class="pl-s"><span class="pl-pds">&quot;</span>velocityData<span class="pl-pds">&quot;</span></span>];</td>
      </tr>
      <tr>
        <td id="L2449" class="blob-num js-line-number" data-line-number="2449"></td>
        <td id="LC2449" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (data) {</td>
      </tr>
      <tr>
        <td id="L2450" class="blob-num js-line-number" data-line-number="2450"></td>
        <td id="LC2450" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> data;</td>
      </tr>
      <tr>
        <td id="L2451" class="blob-num js-line-number" data-line-number="2451"></td>
        <td id="LC2451" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2452" class="blob-num js-line-number" data-line-number="2452"></td>
        <td id="LC2452" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> types <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2453" class="blob-num js-line-number" data-line-number="2453"></td>
        <td id="LC2453" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> index <span class="pl-k">=</span> <span class="pl-c1">0</span>, constructors <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">constructors</span>; index <span class="pl-k">&lt;</span> <span class="pl-smi">constructors</span>.<span class="pl-c1">length</span>; index<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2454" class="blob-num js-line-number" data-line-number="2454"></td>
        <td id="LC2454" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (element <span class="pl-k">instanceof</span> constructors[index]) {</td>
      </tr>
      <tr>
        <td id="L2455" class="blob-num js-line-number" data-line-number="2455"></td>
        <td id="LC2455" class="blob-code blob-code-inner js-file-line">            types <span class="pl-k">|=</span> <span class="pl-c1">1</span> <span class="pl-k">&lt;&lt;</span> index;</td>
      </tr>
      <tr>
        <td id="L2456" class="blob-num js-line-number" data-line-number="2456"></td>
        <td id="LC2456" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2457" class="blob-num js-line-number" data-line-number="2457"></td>
        <td id="LC2457" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2458" class="blob-num js-line-number" data-line-number="2458"></td>
        <td id="LC2458" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Do it this way so it errors on incorrect data.</span></td>
      </tr>
      <tr>
        <td id="L2459" class="blob-num js-line-number" data-line-number="2459"></td>
        <td id="LC2459" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> newData <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2460" class="blob-num js-line-number" data-line-number="2460"></td>
        <td id="LC2460" class="blob-code blob-code-inner js-file-line">        types<span class="pl-k">:</span> types,</td>
      </tr>
      <tr>
        <td id="L2461" class="blob-num js-line-number" data-line-number="2461"></td>
        <td id="LC2461" class="blob-code blob-code-inner js-file-line">        count<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2462" class="blob-num js-line-number" data-line-number="2462"></td>
        <td id="LC2462" class="blob-code blob-code-inner js-file-line">        computedStyle<span class="pl-k">:</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L2463" class="blob-num js-line-number" data-line-number="2463"></td>
        <td id="LC2463" class="blob-code blob-code-inner js-file-line">        cache<span class="pl-k">:</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>),</td>
      </tr>
      <tr>
        <td id="L2464" class="blob-num js-line-number" data-line-number="2464"></td>
        <td id="LC2464" class="blob-code blob-code-inner js-file-line">        queueList<span class="pl-k">:</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>),</td>
      </tr>
      <tr>
        <td id="L2465" class="blob-num js-line-number" data-line-number="2465"></td>
        <td id="LC2465" class="blob-code blob-code-inner js-file-line">        lastAnimationList<span class="pl-k">:</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>),</td>
      </tr>
      <tr>
        <td id="L2466" class="blob-num js-line-number" data-line-number="2466"></td>
        <td id="LC2466" class="blob-code blob-code-inner js-file-line">        lastFinishList<span class="pl-k">:</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>)</td>
      </tr>
      <tr>
        <td id="L2467" class="blob-num js-line-number" data-line-number="2467"></td>
        <td id="LC2467" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2468" class="blob-num js-line-number" data-line-number="2468"></td>
        <td id="LC2468" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>velocityData<span class="pl-pds">&quot;</span></span>, {</td>
      </tr>
      <tr>
        <td id="L2469" class="blob-num js-line-number" data-line-number="2469"></td>
        <td id="LC2469" class="blob-code blob-code-inner js-file-line">        value<span class="pl-k">:</span> newData</td>
      </tr>
      <tr>
        <td id="L2470" class="blob-num js-line-number" data-line-number="2470"></td>
        <td id="LC2470" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2471" class="blob-num js-line-number" data-line-number="2471"></td>
        <td id="LC2471" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> newData;</td>
      </tr>
      <tr>
        <td id="L2472" class="blob-num js-line-number" data-line-number="2472"></td>
        <td id="LC2472" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2473" class="blob-num js-line-number" data-line-number="2473"></td>
        <td id="LC2473" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2474" class="blob-num js-line-number" data-line-number="2474"></td>
        <td id="LC2474" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2475" class="blob-num js-line-number" data-line-number="2475"></td>
        <td id="LC2475" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2476" class="blob-num js-line-number" data-line-number="2476"></td>
        <td id="LC2476" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2477" class="blob-num js-line-number" data-line-number="2477"></td>
        <td id="LC2477" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2478" class="blob-num js-line-number" data-line-number="2478"></td>
        <td id="LC2478" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2479" class="blob-num js-line-number" data-line-number="2479"></td>
        <td id="LC2479" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2480" class="blob-num js-line-number" data-line-number="2480"></td>
        <td id="LC2480" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2481" class="blob-num js-line-number" data-line-number="2481"></td>
        <td id="LC2481" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2482" class="blob-num js-line-number" data-line-number="2482"></td>
        <td id="LC2482" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Set to true, 1 or 2 (most verbose) to output debug info to console.</span></td>
      </tr>
      <tr>
        <td id="L2483" class="blob-num js-line-number" data-line-number="2483"></td>
        <td id="LC2483" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2484" class="blob-num js-line-number" data-line-number="2484"></td>
        <td id="LC2484" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">debug</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2485" class="blob-num js-line-number" data-line-number="2485"></td>
        <td id="LC2485" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2486" class="blob-num js-line-number" data-line-number="2486"></td>
        <td id="LC2486" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2487" class="blob-num js-line-number" data-line-number="2487"></td>
        <td id="LC2487" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2488" class="blob-num js-line-number" data-line-number="2488"></td>
        <td id="LC2488" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2489" class="blob-num js-line-number" data-line-number="2489"></td>
        <td id="LC2489" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2490" class="blob-num js-line-number" data-line-number="2490"></td>
        <td id="LC2490" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2491" class="blob-num js-line-number" data-line-number="2491"></td>
        <td id="LC2491" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2492" class="blob-num js-line-number" data-line-number="2492"></td>
        <td id="LC2492" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Velocity option defaults, which can be overriden by the user.</span></td>
      </tr>
      <tr>
        <td id="L2493" class="blob-num js-line-number" data-line-number="2493"></td>
        <td id="LC2493" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2494" class="blob-num js-line-number" data-line-number="2494"></td>
        <td id="LC2494" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2495" class="blob-num js-line-number" data-line-number="2495"></td>
        <td id="LC2495" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2496" class="blob-num js-line-number" data-line-number="2496"></td>
        <td id="LC2496" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2497" class="blob-num js-line-number" data-line-number="2497"></td>
        <td id="LC2497" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> NOTE: Add the variable here, then add the default state in &quot;reset&quot; below.</span></td>
      </tr>
      <tr>
        <td id="L2498" class="blob-num js-line-number" data-line-number="2498"></td>
        <td id="LC2498" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> _cache, _begin, _complete, _delay, _duration, _easing, _fpsLimit, _loop, _minFrameTime, _promise, _promiseRejectEmpty, _queue, _repeat, _speed, _sync;</td>
      </tr>
      <tr>
        <td id="L2499" class="blob-num js-line-number" data-line-number="2499"></td>
        <td id="LC2499" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2500" class="blob-num js-line-number" data-line-number="2500"></td>
        <td id="LC2500" class="blob-code blob-code-inner js-file-line">        mobileHA<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2501" class="blob-num js-line-number" data-line-number="2501"></td>
        <td id="LC2501" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2502" class="blob-num js-line-number" data-line-number="2502"></td>
        <td id="LC2502" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> IMPORTANT: Make sure any new defaults get added to the actions/set.ts list</span></td>
      </tr>
      <tr>
        <td id="L2503" class="blob-num js-line-number" data-line-number="2503"></td>
        <td id="LC2503" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>, {</td>
      </tr>
      <tr>
        <td id="L2504" class="blob-num js-line-number" data-line-number="2504"></td>
        <td id="LC2504" class="blob-code blob-code-inner js-file-line">        reset<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2505" class="blob-num js-line-number" data-line-number="2505"></td>
        <td id="LC2505" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2506" class="blob-num js-line-number" data-line-number="2506"></td>
        <td id="LC2506" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">value</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2507" class="blob-num js-line-number" data-line-number="2507"></td>
        <td id="LC2507" class="blob-code blob-code-inner js-file-line">                _cache <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_CACHE</span>;</td>
      </tr>
      <tr>
        <td id="L2508" class="blob-num js-line-number" data-line-number="2508"></td>
        <td id="LC2508" class="blob-code blob-code-inner js-file-line">                _begin <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L2509" class="blob-num js-line-number" data-line-number="2509"></td>
        <td id="LC2509" class="blob-code blob-code-inner js-file-line">                _complete <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L2510" class="blob-num js-line-number" data-line-number="2510"></td>
        <td id="LC2510" class="blob-code blob-code-inner js-file-line">                _delay <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_DELAY</span>;</td>
      </tr>
      <tr>
        <td id="L2511" class="blob-num js-line-number" data-line-number="2511"></td>
        <td id="LC2511" class="blob-code blob-code-inner js-file-line">                _duration <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_DURATION</span>;</td>
      </tr>
      <tr>
        <td id="L2512" class="blob-num js-line-number" data-line-number="2512"></td>
        <td id="LC2512" class="blob-code blob-code-inner js-file-line">                _easing <span class="pl-k">=</span> <span class="pl-en">validateEasing</span>(<span class="pl-c1">DEFAULT_EASING</span>, <span class="pl-c1">DEFAULT_DURATION</span>);</td>
      </tr>
      <tr>
        <td id="L2513" class="blob-num js-line-number" data-line-number="2513"></td>
        <td id="LC2513" class="blob-code blob-code-inner js-file-line">                _fpsLimit <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_FPSLIMIT</span>;</td>
      </tr>
      <tr>
        <td id="L2514" class="blob-num js-line-number" data-line-number="2514"></td>
        <td id="LC2514" class="blob-code blob-code-inner js-file-line">                _loop <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_LOOP</span>;</td>
      </tr>
      <tr>
        <td id="L2515" class="blob-num js-line-number" data-line-number="2515"></td>
        <td id="LC2515" class="blob-code blob-code-inner js-file-line">                _minFrameTime <span class="pl-k">=</span> <span class="pl-c1">FUZZY_MS_PER_SECOND</span> <span class="pl-k">/</span> <span class="pl-c1">DEFAULT_FPSLIMIT</span>;</td>
      </tr>
      <tr>
        <td id="L2516" class="blob-num js-line-number" data-line-number="2516"></td>
        <td id="LC2516" class="blob-code blob-code-inner js-file-line">                _promise <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_PROMISE</span>;</td>
      </tr>
      <tr>
        <td id="L2517" class="blob-num js-line-number" data-line-number="2517"></td>
        <td id="LC2517" class="blob-code blob-code-inner js-file-line">                _promiseRejectEmpty <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_PROMISE_REJECT_EMPTY</span>;</td>
      </tr>
      <tr>
        <td id="L2518" class="blob-num js-line-number" data-line-number="2518"></td>
        <td id="LC2518" class="blob-code blob-code-inner js-file-line">                _queue <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_QUEUE</span>;</td>
      </tr>
      <tr>
        <td id="L2519" class="blob-num js-line-number" data-line-number="2519"></td>
        <td id="LC2519" class="blob-code blob-code-inner js-file-line">                _repeat <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_REPEAT</span>;</td>
      </tr>
      <tr>
        <td id="L2520" class="blob-num js-line-number" data-line-number="2520"></td>
        <td id="LC2520" class="blob-code blob-code-inner js-file-line">                _speed <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_SPEED</span>;</td>
      </tr>
      <tr>
        <td id="L2521" class="blob-num js-line-number" data-line-number="2521"></td>
        <td id="LC2521" class="blob-code blob-code-inner js-file-line">                _sync <span class="pl-k">=</span> <span class="pl-c1">DEFAULT_SYNC</span>;</td>
      </tr>
      <tr>
        <td id="L2522" class="blob-num js-line-number" data-line-number="2522"></td>
        <td id="LC2522" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2523" class="blob-num js-line-number" data-line-number="2523"></td>
        <td id="LC2523" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2524" class="blob-num js-line-number" data-line-number="2524"></td>
        <td id="LC2524" class="blob-code blob-code-inner js-file-line">        cache<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2525" class="blob-num js-line-number" data-line-number="2525"></td>
        <td id="LC2525" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2526" class="blob-num js-line-number" data-line-number="2526"></td>
        <td id="LC2526" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2527" class="blob-num js-line-number" data-line-number="2527"></td>
        <td id="LC2527" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _cache;</td>
      </tr>
      <tr>
        <td id="L2528" class="blob-num js-line-number" data-line-number="2528"></td>
        <td id="LC2528" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2529" class="blob-num js-line-number" data-line-number="2529"></td>
        <td id="LC2529" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2530" class="blob-num js-line-number" data-line-number="2530"></td>
        <td id="LC2530" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateCache</span>(value);</td>
      </tr>
      <tr>
        <td id="L2531" class="blob-num js-line-number" data-line-number="2531"></td>
        <td id="LC2531" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2532" class="blob-num js-line-number" data-line-number="2532"></td>
        <td id="LC2532" class="blob-code blob-code-inner js-file-line">                    _cache <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2533" class="blob-num js-line-number" data-line-number="2533"></td>
        <td id="LC2533" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2534" class="blob-num js-line-number" data-line-number="2534"></td>
        <td id="LC2534" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2535" class="blob-num js-line-number" data-line-number="2535"></td>
        <td id="LC2535" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2536" class="blob-num js-line-number" data-line-number="2536"></td>
        <td id="LC2536" class="blob-code blob-code-inner js-file-line">        begin<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2537" class="blob-num js-line-number" data-line-number="2537"></td>
        <td id="LC2537" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2538" class="blob-num js-line-number" data-line-number="2538"></td>
        <td id="LC2538" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2539" class="blob-num js-line-number" data-line-number="2539"></td>
        <td id="LC2539" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _begin;</td>
      </tr>
      <tr>
        <td id="L2540" class="blob-num js-line-number" data-line-number="2540"></td>
        <td id="LC2540" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2541" class="blob-num js-line-number" data-line-number="2541"></td>
        <td id="LC2541" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2542" class="blob-num js-line-number" data-line-number="2542"></td>
        <td id="LC2542" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateBegin</span>(value);</td>
      </tr>
      <tr>
        <td id="L2543" class="blob-num js-line-number" data-line-number="2543"></td>
        <td id="LC2543" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2544" class="blob-num js-line-number" data-line-number="2544"></td>
        <td id="LC2544" class="blob-code blob-code-inner js-file-line">                    _begin <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2545" class="blob-num js-line-number" data-line-number="2545"></td>
        <td id="LC2545" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2546" class="blob-num js-line-number" data-line-number="2546"></td>
        <td id="LC2546" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2547" class="blob-num js-line-number" data-line-number="2547"></td>
        <td id="LC2547" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2548" class="blob-num js-line-number" data-line-number="2548"></td>
        <td id="LC2548" class="blob-code blob-code-inner js-file-line">        complete<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2549" class="blob-num js-line-number" data-line-number="2549"></td>
        <td id="LC2549" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2550" class="blob-num js-line-number" data-line-number="2550"></td>
        <td id="LC2550" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2551" class="blob-num js-line-number" data-line-number="2551"></td>
        <td id="LC2551" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _complete;</td>
      </tr>
      <tr>
        <td id="L2552" class="blob-num js-line-number" data-line-number="2552"></td>
        <td id="LC2552" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2553" class="blob-num js-line-number" data-line-number="2553"></td>
        <td id="LC2553" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2554" class="blob-num js-line-number" data-line-number="2554"></td>
        <td id="LC2554" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateComplete</span>(value);</td>
      </tr>
      <tr>
        <td id="L2555" class="blob-num js-line-number" data-line-number="2555"></td>
        <td id="LC2555" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2556" class="blob-num js-line-number" data-line-number="2556"></td>
        <td id="LC2556" class="blob-code blob-code-inner js-file-line">                    _complete <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2557" class="blob-num js-line-number" data-line-number="2557"></td>
        <td id="LC2557" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2558" class="blob-num js-line-number" data-line-number="2558"></td>
        <td id="LC2558" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2559" class="blob-num js-line-number" data-line-number="2559"></td>
        <td id="LC2559" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2560" class="blob-num js-line-number" data-line-number="2560"></td>
        <td id="LC2560" class="blob-code blob-code-inner js-file-line">        delay<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2561" class="blob-num js-line-number" data-line-number="2561"></td>
        <td id="LC2561" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2562" class="blob-num js-line-number" data-line-number="2562"></td>
        <td id="LC2562" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2563" class="blob-num js-line-number" data-line-number="2563"></td>
        <td id="LC2563" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _delay;</td>
      </tr>
      <tr>
        <td id="L2564" class="blob-num js-line-number" data-line-number="2564"></td>
        <td id="LC2564" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2565" class="blob-num js-line-number" data-line-number="2565"></td>
        <td id="LC2565" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2566" class="blob-num js-line-number" data-line-number="2566"></td>
        <td id="LC2566" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateDelay</span>(value);</td>
      </tr>
      <tr>
        <td id="L2567" class="blob-num js-line-number" data-line-number="2567"></td>
        <td id="LC2567" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2568" class="blob-num js-line-number" data-line-number="2568"></td>
        <td id="LC2568" class="blob-code blob-code-inner js-file-line">                    _delay <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2569" class="blob-num js-line-number" data-line-number="2569"></td>
        <td id="LC2569" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2570" class="blob-num js-line-number" data-line-number="2570"></td>
        <td id="LC2570" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2571" class="blob-num js-line-number" data-line-number="2571"></td>
        <td id="LC2571" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2572" class="blob-num js-line-number" data-line-number="2572"></td>
        <td id="LC2572" class="blob-code blob-code-inner js-file-line">        duration<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2573" class="blob-num js-line-number" data-line-number="2573"></td>
        <td id="LC2573" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2574" class="blob-num js-line-number" data-line-number="2574"></td>
        <td id="LC2574" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2575" class="blob-num js-line-number" data-line-number="2575"></td>
        <td id="LC2575" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _duration;</td>
      </tr>
      <tr>
        <td id="L2576" class="blob-num js-line-number" data-line-number="2576"></td>
        <td id="LC2576" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2577" class="blob-num js-line-number" data-line-number="2577"></td>
        <td id="LC2577" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2578" class="blob-num js-line-number" data-line-number="2578"></td>
        <td id="LC2578" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateDuration</span>(value);</td>
      </tr>
      <tr>
        <td id="L2579" class="blob-num js-line-number" data-line-number="2579"></td>
        <td id="LC2579" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2580" class="blob-num js-line-number" data-line-number="2580"></td>
        <td id="LC2580" class="blob-code blob-code-inner js-file-line">                    _duration <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2581" class="blob-num js-line-number" data-line-number="2581"></td>
        <td id="LC2581" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2582" class="blob-num js-line-number" data-line-number="2582"></td>
        <td id="LC2582" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2583" class="blob-num js-line-number" data-line-number="2583"></td>
        <td id="LC2583" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2584" class="blob-num js-line-number" data-line-number="2584"></td>
        <td id="LC2584" class="blob-code blob-code-inner js-file-line">        easing<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2585" class="blob-num js-line-number" data-line-number="2585"></td>
        <td id="LC2585" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2586" class="blob-num js-line-number" data-line-number="2586"></td>
        <td id="LC2586" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2587" class="blob-num js-line-number" data-line-number="2587"></td>
        <td id="LC2587" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _easing;</td>
      </tr>
      <tr>
        <td id="L2588" class="blob-num js-line-number" data-line-number="2588"></td>
        <td id="LC2588" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2589" class="blob-num js-line-number" data-line-number="2589"></td>
        <td id="LC2589" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2590" class="blob-num js-line-number" data-line-number="2590"></td>
        <td id="LC2590" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateEasing</span>(value, _duration);</td>
      </tr>
      <tr>
        <td id="L2591" class="blob-num js-line-number" data-line-number="2591"></td>
        <td id="LC2591" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2592" class="blob-num js-line-number" data-line-number="2592"></td>
        <td id="LC2592" class="blob-code blob-code-inner js-file-line">                    _easing <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2593" class="blob-num js-line-number" data-line-number="2593"></td>
        <td id="LC2593" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2594" class="blob-num js-line-number" data-line-number="2594"></td>
        <td id="LC2594" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2595" class="blob-num js-line-number" data-line-number="2595"></td>
        <td id="LC2595" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2596" class="blob-num js-line-number" data-line-number="2596"></td>
        <td id="LC2596" class="blob-code blob-code-inner js-file-line">        fpsLimit<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2597" class="blob-num js-line-number" data-line-number="2597"></td>
        <td id="LC2597" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2598" class="blob-num js-line-number" data-line-number="2598"></td>
        <td id="LC2598" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2599" class="blob-num js-line-number" data-line-number="2599"></td>
        <td id="LC2599" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _fpsLimit;</td>
      </tr>
      <tr>
        <td id="L2600" class="blob-num js-line-number" data-line-number="2600"></td>
        <td id="LC2600" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2601" class="blob-num js-line-number" data-line-number="2601"></td>
        <td id="LC2601" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2602" class="blob-num js-line-number" data-line-number="2602"></td>
        <td id="LC2602" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateFpsLimit</span>(value);</td>
      </tr>
      <tr>
        <td id="L2603" class="blob-num js-line-number" data-line-number="2603"></td>
        <td id="LC2603" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2604" class="blob-num js-line-number" data-line-number="2604"></td>
        <td id="LC2604" class="blob-code blob-code-inner js-file-line">                    _fpsLimit <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2605" class="blob-num js-line-number" data-line-number="2605"></td>
        <td id="LC2605" class="blob-code blob-code-inner js-file-line">                    _minFrameTime <span class="pl-k">=</span> <span class="pl-c1">FUZZY_MS_PER_SECOND</span> <span class="pl-k">/</span> value;</td>
      </tr>
      <tr>
        <td id="L2606" class="blob-num js-line-number" data-line-number="2606"></td>
        <td id="LC2606" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2607" class="blob-num js-line-number" data-line-number="2607"></td>
        <td id="LC2607" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2608" class="blob-num js-line-number" data-line-number="2608"></td>
        <td id="LC2608" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2609" class="blob-num js-line-number" data-line-number="2609"></td>
        <td id="LC2609" class="blob-code blob-code-inner js-file-line">        loop<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2610" class="blob-num js-line-number" data-line-number="2610"></td>
        <td id="LC2610" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2611" class="blob-num js-line-number" data-line-number="2611"></td>
        <td id="LC2611" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2612" class="blob-num js-line-number" data-line-number="2612"></td>
        <td id="LC2612" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _loop;</td>
      </tr>
      <tr>
        <td id="L2613" class="blob-num js-line-number" data-line-number="2613"></td>
        <td id="LC2613" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2614" class="blob-num js-line-number" data-line-number="2614"></td>
        <td id="LC2614" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2615" class="blob-num js-line-number" data-line-number="2615"></td>
        <td id="LC2615" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateLoop</span>(value);</td>
      </tr>
      <tr>
        <td id="L2616" class="blob-num js-line-number" data-line-number="2616"></td>
        <td id="LC2616" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2617" class="blob-num js-line-number" data-line-number="2617"></td>
        <td id="LC2617" class="blob-code blob-code-inner js-file-line">                    _loop <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2618" class="blob-num js-line-number" data-line-number="2618"></td>
        <td id="LC2618" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2619" class="blob-num js-line-number" data-line-number="2619"></td>
        <td id="LC2619" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2620" class="blob-num js-line-number" data-line-number="2620"></td>
        <td id="LC2620" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2621" class="blob-num js-line-number" data-line-number="2621"></td>
        <td id="LC2621" class="blob-code blob-code-inner js-file-line">        minFrameTime<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2622" class="blob-num js-line-number" data-line-number="2622"></td>
        <td id="LC2622" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2623" class="blob-num js-line-number" data-line-number="2623"></td>
        <td id="LC2623" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2624" class="blob-num js-line-number" data-line-number="2624"></td>
        <td id="LC2624" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _minFrameTime;</td>
      </tr>
      <tr>
        <td id="L2625" class="blob-num js-line-number" data-line-number="2625"></td>
        <td id="LC2625" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2626" class="blob-num js-line-number" data-line-number="2626"></td>
        <td id="LC2626" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2627" class="blob-num js-line-number" data-line-number="2627"></td>
        <td id="LC2627" class="blob-code blob-code-inner js-file-line">        promise<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2628" class="blob-num js-line-number" data-line-number="2628"></td>
        <td id="LC2628" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2629" class="blob-num js-line-number" data-line-number="2629"></td>
        <td id="LC2629" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2630" class="blob-num js-line-number" data-line-number="2630"></td>
        <td id="LC2630" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _promise;</td>
      </tr>
      <tr>
        <td id="L2631" class="blob-num js-line-number" data-line-number="2631"></td>
        <td id="LC2631" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2632" class="blob-num js-line-number" data-line-number="2632"></td>
        <td id="LC2632" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2633" class="blob-num js-line-number" data-line-number="2633"></td>
        <td id="LC2633" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validatePromise</span>(value);</td>
      </tr>
      <tr>
        <td id="L2634" class="blob-num js-line-number" data-line-number="2634"></td>
        <td id="LC2634" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2635" class="blob-num js-line-number" data-line-number="2635"></td>
        <td id="LC2635" class="blob-code blob-code-inner js-file-line">                    _promise <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2636" class="blob-num js-line-number" data-line-number="2636"></td>
        <td id="LC2636" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2637" class="blob-num js-line-number" data-line-number="2637"></td>
        <td id="LC2637" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2638" class="blob-num js-line-number" data-line-number="2638"></td>
        <td id="LC2638" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2639" class="blob-num js-line-number" data-line-number="2639"></td>
        <td id="LC2639" class="blob-code blob-code-inner js-file-line">        promiseRejectEmpty<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2640" class="blob-num js-line-number" data-line-number="2640"></td>
        <td id="LC2640" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2641" class="blob-num js-line-number" data-line-number="2641"></td>
        <td id="LC2641" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2642" class="blob-num js-line-number" data-line-number="2642"></td>
        <td id="LC2642" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _promiseRejectEmpty;</td>
      </tr>
      <tr>
        <td id="L2643" class="blob-num js-line-number" data-line-number="2643"></td>
        <td id="LC2643" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2644" class="blob-num js-line-number" data-line-number="2644"></td>
        <td id="LC2644" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2645" class="blob-num js-line-number" data-line-number="2645"></td>
        <td id="LC2645" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validatePromiseRejectEmpty</span>(value);</td>
      </tr>
      <tr>
        <td id="L2646" class="blob-num js-line-number" data-line-number="2646"></td>
        <td id="LC2646" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2647" class="blob-num js-line-number" data-line-number="2647"></td>
        <td id="LC2647" class="blob-code blob-code-inner js-file-line">                    _promiseRejectEmpty <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2648" class="blob-num js-line-number" data-line-number="2648"></td>
        <td id="LC2648" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2649" class="blob-num js-line-number" data-line-number="2649"></td>
        <td id="LC2649" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2650" class="blob-num js-line-number" data-line-number="2650"></td>
        <td id="LC2650" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2651" class="blob-num js-line-number" data-line-number="2651"></td>
        <td id="LC2651" class="blob-code blob-code-inner js-file-line">        queue<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2652" class="blob-num js-line-number" data-line-number="2652"></td>
        <td id="LC2652" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2653" class="blob-num js-line-number" data-line-number="2653"></td>
        <td id="LC2653" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2654" class="blob-num js-line-number" data-line-number="2654"></td>
        <td id="LC2654" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _queue;</td>
      </tr>
      <tr>
        <td id="L2655" class="blob-num js-line-number" data-line-number="2655"></td>
        <td id="LC2655" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2656" class="blob-num js-line-number" data-line-number="2656"></td>
        <td id="LC2656" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2657" class="blob-num js-line-number" data-line-number="2657"></td>
        <td id="LC2657" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateQueue</span>(value);</td>
      </tr>
      <tr>
        <td id="L2658" class="blob-num js-line-number" data-line-number="2658"></td>
        <td id="LC2658" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2659" class="blob-num js-line-number" data-line-number="2659"></td>
        <td id="LC2659" class="blob-code blob-code-inner js-file-line">                    _queue <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2660" class="blob-num js-line-number" data-line-number="2660"></td>
        <td id="LC2660" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2661" class="blob-num js-line-number" data-line-number="2661"></td>
        <td id="LC2661" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2662" class="blob-num js-line-number" data-line-number="2662"></td>
        <td id="LC2662" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2663" class="blob-num js-line-number" data-line-number="2663"></td>
        <td id="LC2663" class="blob-code blob-code-inner js-file-line">        repeat<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2664" class="blob-num js-line-number" data-line-number="2664"></td>
        <td id="LC2664" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2665" class="blob-num js-line-number" data-line-number="2665"></td>
        <td id="LC2665" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2666" class="blob-num js-line-number" data-line-number="2666"></td>
        <td id="LC2666" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _repeat;</td>
      </tr>
      <tr>
        <td id="L2667" class="blob-num js-line-number" data-line-number="2667"></td>
        <td id="LC2667" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2668" class="blob-num js-line-number" data-line-number="2668"></td>
        <td id="LC2668" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2669" class="blob-num js-line-number" data-line-number="2669"></td>
        <td id="LC2669" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateRepeat</span>(value);</td>
      </tr>
      <tr>
        <td id="L2670" class="blob-num js-line-number" data-line-number="2670"></td>
        <td id="LC2670" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2671" class="blob-num js-line-number" data-line-number="2671"></td>
        <td id="LC2671" class="blob-code blob-code-inner js-file-line">                    _repeat <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2672" class="blob-num js-line-number" data-line-number="2672"></td>
        <td id="LC2672" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2673" class="blob-num js-line-number" data-line-number="2673"></td>
        <td id="LC2673" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2674" class="blob-num js-line-number" data-line-number="2674"></td>
        <td id="LC2674" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2675" class="blob-num js-line-number" data-line-number="2675"></td>
        <td id="LC2675" class="blob-code blob-code-inner js-file-line">        speed<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2676" class="blob-num js-line-number" data-line-number="2676"></td>
        <td id="LC2676" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2677" class="blob-num js-line-number" data-line-number="2677"></td>
        <td id="LC2677" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2678" class="blob-num js-line-number" data-line-number="2678"></td>
        <td id="LC2678" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _speed;</td>
      </tr>
      <tr>
        <td id="L2679" class="blob-num js-line-number" data-line-number="2679"></td>
        <td id="LC2679" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2680" class="blob-num js-line-number" data-line-number="2680"></td>
        <td id="LC2680" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2681" class="blob-num js-line-number" data-line-number="2681"></td>
        <td id="LC2681" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateSpeed</span>(value);</td>
      </tr>
      <tr>
        <td id="L2682" class="blob-num js-line-number" data-line-number="2682"></td>
        <td id="LC2682" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2683" class="blob-num js-line-number" data-line-number="2683"></td>
        <td id="LC2683" class="blob-code blob-code-inner js-file-line">                    _speed <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2684" class="blob-num js-line-number" data-line-number="2684"></td>
        <td id="LC2684" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2685" class="blob-num js-line-number" data-line-number="2685"></td>
        <td id="LC2685" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2686" class="blob-num js-line-number" data-line-number="2686"></td>
        <td id="LC2686" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2687" class="blob-num js-line-number" data-line-number="2687"></td>
        <td id="LC2687" class="blob-code blob-code-inner js-file-line">        sync<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2688" class="blob-num js-line-number" data-line-number="2688"></td>
        <td id="LC2688" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2689" class="blob-num js-line-number" data-line-number="2689"></td>
        <td id="LC2689" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2690" class="blob-num js-line-number" data-line-number="2690"></td>
        <td id="LC2690" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> _sync;</td>
      </tr>
      <tr>
        <td id="L2691" class="blob-num js-line-number" data-line-number="2691"></td>
        <td id="LC2691" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L2692" class="blob-num js-line-number" data-line-number="2692"></td>
        <td id="LC2692" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2693" class="blob-num js-line-number" data-line-number="2693"></td>
        <td id="LC2693" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">validateSync</span>(value);</td>
      </tr>
      <tr>
        <td id="L2694" class="blob-num js-line-number" data-line-number="2694"></td>
        <td id="LC2694" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2695" class="blob-num js-line-number" data-line-number="2695"></td>
        <td id="LC2695" class="blob-code blob-code-inner js-file-line">                    _sync <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2696" class="blob-num js-line-number" data-line-number="2696"></td>
        <td id="LC2696" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2697" class="blob-num js-line-number" data-line-number="2697"></td>
        <td id="LC2697" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2698" class="blob-num js-line-number" data-line-number="2698"></td>
        <td id="LC2698" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2699" class="blob-num js-line-number" data-line-number="2699"></td>
        <td id="LC2699" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2700" class="blob-num js-line-number" data-line-number="2700"></td>
        <td id="LC2700" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L2701" class="blob-num js-line-number" data-line-number="2701"></td>
        <td id="LC2701" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2702" class="blob-num js-line-number" data-line-number="2702"></td>
        <td id="LC2702" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2703" class="blob-num js-line-number" data-line-number="2703"></td>
        <td id="LC2703" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2704" class="blob-num js-line-number" data-line-number="2704"></td>
        <td id="LC2704" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2705" class="blob-num js-line-number" data-line-number="2705"></td>
        <td id="LC2705" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2706" class="blob-num js-line-number" data-line-number="2706"></td>
        <td id="LC2706" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2707" class="blob-num js-line-number" data-line-number="2707"></td>
        <td id="LC2707" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2708" class="blob-num js-line-number" data-line-number="2708"></td>
        <td id="LC2708" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Velocity-wide animation time remapping for testing purposes.</span></td>
      </tr>
      <tr>
        <td id="L2709" class="blob-num js-line-number" data-line-number="2709"></td>
        <td id="LC2709" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2710" class="blob-num js-line-number" data-line-number="2710"></td>
        <td id="LC2710" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2711" class="blob-num js-line-number" data-line-number="2711"></td>
        <td id="LC2711" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2712" class="blob-num js-line-number" data-line-number="2712"></td>
        <td id="LC2712" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2713" class="blob-num js-line-number" data-line-number="2713"></td>
        <td id="LC2713" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2714" class="blob-num js-line-number" data-line-number="2714"></td>
        <td id="LC2714" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * In mock mode, all animations are forced to complete immediately upon the</span></td>
      </tr>
      <tr>
        <td id="L2715" class="blob-num js-line-number" data-line-number="2715"></td>
        <td id="LC2715" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * next rAF tick. If there are further animations queued then they will each</span></td>
      </tr>
      <tr>
        <td id="L2716" class="blob-num js-line-number" data-line-number="2716"></td>
        <td id="LC2716" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * take one single frame in turn. Loops and repeats will be disabled while</span></td>
      </tr>
      <tr>
        <td id="L2717" class="blob-num js-line-number" data-line-number="2717"></td>
        <td id="LC2717" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;code&gt;mock = true&lt;/code&gt;.</span></td>
      </tr>
      <tr>
        <td id="L2718" class="blob-num js-line-number" data-line-number="2718"></td>
        <td id="LC2718" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2719" class="blob-num js-line-number" data-line-number="2719"></td>
        <td id="LC2719" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">mock</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2720" class="blob-num js-line-number" data-line-number="2720"></td>
        <td id="LC2720" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2721" class="blob-num js-line-number" data-line-number="2721"></td>
        <td id="LC2721" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2722" class="blob-num js-line-number" data-line-number="2722"></td>
        <td id="LC2722" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2723" class="blob-num js-line-number" data-line-number="2723"></td>
        <td id="LC2723" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2724" class="blob-num js-line-number" data-line-number="2724"></td>
        <td id="LC2724" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2725" class="blob-num js-line-number" data-line-number="2725"></td>
        <td id="LC2725" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2726" class="blob-num js-line-number" data-line-number="2726"></td>
        <td id="LC2726" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2727" class="blob-num js-line-number" data-line-number="2727"></td>
        <td id="LC2727" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2728" class="blob-num js-line-number" data-line-number="2728"></td>
        <td id="LC2728" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2729" class="blob-num js-line-number" data-line-number="2729"></td>
        <td id="LC2729" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2730" class="blob-num js-line-number" data-line-number="2730"></td>
        <td id="LC2730" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2731" class="blob-num js-line-number" data-line-number="2731"></td>
        <td id="LC2731" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Used to patch any object to allow Velocity chaining. In order to chain an</span></td>
      </tr>
      <tr>
        <td id="L2732" class="blob-num js-line-number" data-line-number="2732"></td>
        <td id="LC2732" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * object must either be treatable as an array - with a &lt;code&gt;.length&lt;/code&gt;</span></td>
      </tr>
      <tr>
        <td id="L2733" class="blob-num js-line-number" data-line-number="2733"></td>
        <td id="LC2733" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * property, and each member a Node, or a Node directly.</span></td>
      </tr>
      <tr>
        <td id="L2734" class="blob-num js-line-number" data-line-number="2734"></td>
        <td id="LC2734" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2735" class="blob-num js-line-number" data-line-number="2735"></td>
        <td id="LC2735" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * By default Velocity will try to patch &lt;code&gt;window&lt;/code&gt;,</span></td>
      </tr>
      <tr>
        <td id="L2736" class="blob-num js-line-number" data-line-number="2736"></td>
        <td id="LC2736" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;code&gt;jQuery&lt;/code&gt;, &lt;code&gt;Zepto&lt;/code&gt;, and several classes that return</span></td>
      </tr>
      <tr>
        <td id="L2737" class="blob-num js-line-number" data-line-number="2737"></td>
        <td id="LC2737" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Nodes or lists of Nodes.</span></td>
      </tr>
      <tr>
        <td id="L2738" class="blob-num js-line-number" data-line-number="2738"></td>
        <td id="LC2738" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2739" class="blob-num js-line-number" data-line-number="2739"></td>
        <td id="LC2739" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@public</span></span></td>
      </tr>
      <tr>
        <td id="L2740" class="blob-num js-line-number" data-line-number="2740"></td>
        <td id="LC2740" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2741" class="blob-num js-line-number" data-line-number="2741"></td>
        <td id="LC2741" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">patch</span>(<span class="pl-smi">proto</span>, <span class="pl-c1">global</span>) {</td>
      </tr>
      <tr>
        <td id="L2742" class="blob-num js-line-number" data-line-number="2742"></td>
        <td id="LC2742" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2743" class="blob-num js-line-number" data-line-number="2743"></td>
        <td id="LC2743" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">defineProperty</span>(proto, (<span class="pl-c1">global</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>v<span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>elocity<span class="pl-pds">&quot;</span></span>, VelocityFn);</td>
      </tr>
      <tr>
        <td id="L2744" class="blob-num js-line-number" data-line-number="2744"></td>
        <td id="LC2744" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L2745" class="blob-num js-line-number" data-line-number="2745"></td>
        <td id="LC2745" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Error when trying to add prototype.<span class="pl-pds">&quot;</span></span>, e);</td>
      </tr>
      <tr>
        <td id="L2746" class="blob-num js-line-number" data-line-number="2746"></td>
        <td id="LC2746" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2747" class="blob-num js-line-number" data-line-number="2747"></td>
        <td id="LC2747" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2748" class="blob-num js-line-number" data-line-number="2748"></td>
        <td id="LC2748" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">patch</span> <span class="pl-k">=</span> patch;</td>
      </tr>
      <tr>
        <td id="L2749" class="blob-num js-line-number" data-line-number="2749"></td>
        <td id="LC2749" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2750" class="blob-num js-line-number" data-line-number="2750"></td>
        <td id="LC2750" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2751" class="blob-num js-line-number" data-line-number="2751"></td>
        <td id="LC2751" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;data.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L2752" class="blob-num js-line-number" data-line-number="2752"></td>
        <td id="LC2752" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2753" class="blob-num js-line-number" data-line-number="2753"></td>
        <td id="LC2753" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2754" class="blob-num js-line-number" data-line-number="2754"></td>
        <td id="LC2754" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2755" class="blob-num js-line-number" data-line-number="2755"></td>
        <td id="LC2755" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2756" class="blob-num js-line-number" data-line-number="2756"></td>
        <td id="LC2756" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2757" class="blob-num js-line-number" data-line-number="2757"></td>
        <td id="LC2757" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * AnimationCall queue</span></td>
      </tr>
      <tr>
        <td id="L2758" class="blob-num js-line-number" data-line-number="2758"></td>
        <td id="LC2758" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2759" class="blob-num js-line-number" data-line-number="2759"></td>
        <td id="LC2759" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2760" class="blob-num js-line-number" data-line-number="2760"></td>
        <td id="LC2760" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2761" class="blob-num js-line-number" data-line-number="2761"></td>
        <td id="LC2761" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2762" class="blob-num js-line-number" data-line-number="2762"></td>
        <td id="LC2762" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2763" class="blob-num js-line-number" data-line-number="2763"></td>
        <td id="LC2763" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Simple queue management. Un-named queue is directly within the element data,</span></td>
      </tr>
      <tr>
        <td id="L2764" class="blob-num js-line-number" data-line-number="2764"></td>
        <td id="LC2764" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * named queue is within an object within it.</span></td>
      </tr>
      <tr>
        <td id="L2765" class="blob-num js-line-number" data-line-number="2765"></td>
        <td id="LC2765" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2766" class="blob-num js-line-number" data-line-number="2766"></td>
        <td id="LC2766" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">animate</span>(<span class="pl-smi">animation</span>) {</td>
      </tr>
      <tr>
        <td id="L2767" class="blob-num js-line-number" data-line-number="2767"></td>
        <td id="LC2767" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> prev <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">last</span>;</td>
      </tr>
      <tr>
        <td id="L2768" class="blob-num js-line-number" data-line-number="2768"></td>
        <td id="LC2768" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">animation</span>.<span class="pl-smi">_prev</span> <span class="pl-k">=</span> prev;</td>
      </tr>
      <tr>
        <td id="L2769" class="blob-num js-line-number" data-line-number="2769"></td>
        <td id="LC2769" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">animation</span>.<span class="pl-smi">_next</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L2770" class="blob-num js-line-number" data-line-number="2770"></td>
        <td id="LC2770" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (prev) {</td>
      </tr>
      <tr>
        <td id="L2771" class="blob-num js-line-number" data-line-number="2771"></td>
        <td id="LC2771" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">prev</span>.<span class="pl-smi">_next</span> <span class="pl-k">=</span> animation;</td>
      </tr>
      <tr>
        <td id="L2772" class="blob-num js-line-number" data-line-number="2772"></td>
        <td id="LC2772" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2773" class="blob-num js-line-number" data-line-number="2773"></td>
        <td id="LC2773" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span> <span class="pl-k">=</span> animation;</td>
      </tr>
      <tr>
        <td id="L2774" class="blob-num js-line-number" data-line-number="2774"></td>
        <td id="LC2774" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2775" class="blob-num js-line-number" data-line-number="2775"></td>
        <td id="LC2775" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">last</span> <span class="pl-k">=</span> animation;</td>
      </tr>
      <tr>
        <td id="L2776" class="blob-num js-line-number" data-line-number="2776"></td>
        <td id="LC2776" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>) {</td>
      </tr>
      <tr>
        <td id="L2777" class="blob-num js-line-number" data-line-number="2777"></td>
        <td id="LC2777" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span> <span class="pl-k">=</span> animation;</td>
      </tr>
      <tr>
        <td id="L2778" class="blob-num js-line-number" data-line-number="2778"></td>
        <td id="LC2778" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2779" class="blob-num js-line-number" data-line-number="2779"></td>
        <td id="LC2779" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> element <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-smi">element</span>, data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element);</td>
      </tr>
      <tr>
        <td id="L2780" class="blob-num js-line-number" data-line-number="2780"></td>
        <td id="LC2780" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">data</span>.<span class="pl-smi">count</span><span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2781" class="blob-num js-line-number" data-line-number="2781"></td>
        <td id="LC2781" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>//////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2782" class="blob-num js-line-number" data-line-number="2782"></td>
        <td id="LC2782" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Feature: Classname //</span></td>
      </tr>
      <tr>
        <td id="L2783" class="blob-num js-line-number" data-line-number="2783"></td>
        <td id="LC2783" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>//////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2784" class="blob-num js-line-number" data-line-number="2784"></td>
        <td id="LC2784" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">addClass</span>(element, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-c1">className</span>);</td>
      </tr>
      <tr>
        <td id="L2785" class="blob-num js-line-number" data-line-number="2785"></td>
        <td id="LC2785" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2786" class="blob-num js-line-number" data-line-number="2786"></td>
        <td id="LC2786" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2787" class="blob-num js-line-number" data-line-number="2787"></td>
        <td id="LC2787" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2788" class="blob-num js-line-number" data-line-number="2788"></td>
        <td id="LC2788" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Add an item to an animation queue.</span></td>
      </tr>
      <tr>
        <td id="L2789" class="blob-num js-line-number" data-line-number="2789"></td>
        <td id="LC2789" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">queue</span>(<span class="pl-smi">element</span>, <span class="pl-smi">animation</span>, <span class="pl-smi">queue</span>) {</td>
      </tr>
      <tr>
        <td id="L2790" class="blob-num js-line-number" data-line-number="2790"></td>
        <td id="LC2790" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element);</td>
      </tr>
      <tr>
        <td id="L2791" class="blob-num js-line-number" data-line-number="2791"></td>
        <td id="LC2791" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (queue <span class="pl-k">!==</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L2792" class="blob-num js-line-number" data-line-number="2792"></td>
        <td id="LC2792" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Store the last animation added so we can use it for the</span></td>
      </tr>
      <tr>
        <td id="L2793" class="blob-num js-line-number" data-line-number="2793"></td>
        <td id="LC2793" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> beginning of the next one.</span></td>
      </tr>
      <tr>
        <td id="L2794" class="blob-num js-line-number" data-line-number="2794"></td>
        <td id="LC2794" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">data</span>.<span class="pl-smi">lastAnimationList</span>[queue] <span class="pl-k">=</span> animation;</td>
      </tr>
      <tr>
        <td id="L2795" class="blob-num js-line-number" data-line-number="2795"></td>
        <td id="LC2795" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2796" class="blob-num js-line-number" data-line-number="2796"></td>
        <td id="LC2796" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (queue <span class="pl-k">===</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L2797" class="blob-num js-line-number" data-line-number="2797"></td>
        <td id="LC2797" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">animate</span>(animation);</td>
      </tr>
      <tr>
        <td id="L2798" class="blob-num js-line-number" data-line-number="2798"></td>
        <td id="LC2798" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2799" class="blob-num js-line-number" data-line-number="2799"></td>
        <td id="LC2799" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isString</span>(queue)) {</td>
      </tr>
      <tr>
        <td id="L2800" class="blob-num js-line-number" data-line-number="2800"></td>
        <td id="LC2800" class="blob-code blob-code-inner js-file-line">                queue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2801" class="blob-num js-line-number" data-line-number="2801"></td>
        <td id="LC2801" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2802" class="blob-num js-line-number" data-line-number="2802"></td>
        <td id="LC2802" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> last <span class="pl-k">=</span> <span class="pl-smi">data</span>.<span class="pl-smi">queueList</span>[queue];</td>
      </tr>
      <tr>
        <td id="L2803" class="blob-num js-line-number" data-line-number="2803"></td>
        <td id="LC2803" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>last) {</td>
      </tr>
      <tr>
        <td id="L2804" class="blob-num js-line-number" data-line-number="2804"></td>
        <td id="LC2804" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (last <span class="pl-k">===</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L2805" class="blob-num js-line-number" data-line-number="2805"></td>
        <td id="LC2805" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">data</span>.<span class="pl-smi">queueList</span>[queue] <span class="pl-k">=</span> animation;</td>
      </tr>
      <tr>
        <td id="L2806" class="blob-num js-line-number" data-line-number="2806"></td>
        <td id="LC2806" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2807" class="blob-num js-line-number" data-line-number="2807"></td>
        <td id="LC2807" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">data</span>.<span class="pl-smi">queueList</span>[queue] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2808" class="blob-num js-line-number" data-line-number="2808"></td>
        <td id="LC2808" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">animate</span>(animation);</td>
      </tr>
      <tr>
        <td id="L2809" class="blob-num js-line-number" data-line-number="2809"></td>
        <td id="LC2809" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2810" class="blob-num js-line-number" data-line-number="2810"></td>
        <td id="LC2810" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2811" class="blob-num js-line-number" data-line-number="2811"></td>
        <td id="LC2811" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">while</span> (<span class="pl-smi">last</span>.<span class="pl-smi">_next</span>) {</td>
      </tr>
      <tr>
        <td id="L2812" class="blob-num js-line-number" data-line-number="2812"></td>
        <td id="LC2812" class="blob-code blob-code-inner js-file-line">                    last <span class="pl-k">=</span> <span class="pl-smi">last</span>.<span class="pl-smi">_next</span>;</td>
      </tr>
      <tr>
        <td id="L2813" class="blob-num js-line-number" data-line-number="2813"></td>
        <td id="LC2813" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2814" class="blob-num js-line-number" data-line-number="2814"></td>
        <td id="LC2814" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">last</span>.<span class="pl-smi">_next</span> <span class="pl-k">=</span> animation;</td>
      </tr>
      <tr>
        <td id="L2815" class="blob-num js-line-number" data-line-number="2815"></td>
        <td id="LC2815" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">animation</span>.<span class="pl-smi">_prev</span> <span class="pl-k">=</span> last;</td>
      </tr>
      <tr>
        <td id="L2816" class="blob-num js-line-number" data-line-number="2816"></td>
        <td id="LC2816" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2817" class="blob-num js-line-number" data-line-number="2817"></td>
        <td id="LC2817" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2818" class="blob-num js-line-number" data-line-number="2818"></td>
        <td id="LC2818" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2819" class="blob-num js-line-number" data-line-number="2819"></td>
        <td id="LC2819" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">queue</span> <span class="pl-k">=</span> queue;</td>
      </tr>
      <tr>
        <td id="L2820" class="blob-num js-line-number" data-line-number="2820"></td>
        <td id="LC2820" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2821" class="blob-num js-line-number" data-line-number="2821"></td>
        <td id="LC2821" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Start the next animation on this element&#39;s queue (named or default).</span></td>
      </tr>
      <tr>
        <td id="L2822" class="blob-num js-line-number" data-line-number="2822"></td>
        <td id="LC2822" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L2823" class="blob-num js-line-number" data-line-number="2823"></td>
        <td id="LC2823" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> the next animation that is starting.</span></td>
      </tr>
      <tr>
        <td id="L2824" class="blob-num js-line-number" data-line-number="2824"></td>
        <td id="LC2824" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">dequeue</span>(<span class="pl-smi">element</span>, <span class="pl-smi">queue</span>, <span class="pl-smi">skip</span>) {</td>
      </tr>
      <tr>
        <td id="L2825" class="blob-num js-line-number" data-line-number="2825"></td>
        <td id="LC2825" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (queue <span class="pl-k">!==</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L2826" class="blob-num js-line-number" data-line-number="2826"></td>
        <td id="LC2826" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isString</span>(queue)) {</td>
      </tr>
      <tr>
        <td id="L2827" class="blob-num js-line-number" data-line-number="2827"></td>
        <td id="LC2827" class="blob-code blob-code-inner js-file-line">                queue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2828" class="blob-num js-line-number" data-line-number="2828"></td>
        <td id="LC2828" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2829" class="blob-num js-line-number" data-line-number="2829"></td>
        <td id="LC2829" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element), animation <span class="pl-k">=</span> <span class="pl-smi">data</span>.<span class="pl-smi">queueList</span>[queue];</td>
      </tr>
      <tr>
        <td id="L2830" class="blob-num js-line-number" data-line-number="2830"></td>
        <td id="LC2830" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (animation) {</td>
      </tr>
      <tr>
        <td id="L2831" class="blob-num js-line-number" data-line-number="2831"></td>
        <td id="LC2831" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">data</span>.<span class="pl-smi">queueList</span>[queue] <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-smi">_next</span> <span class="pl-k">||</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2832" class="blob-num js-line-number" data-line-number="2832"></td>
        <td id="LC2832" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>skip) {</td>
      </tr>
      <tr>
        <td id="L2833" class="blob-num js-line-number" data-line-number="2833"></td>
        <td id="LC2833" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">animate</span>(animation);</td>
      </tr>
      <tr>
        <td id="L2834" class="blob-num js-line-number" data-line-number="2834"></td>
        <td id="LC2834" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2835" class="blob-num js-line-number" data-line-number="2835"></td>
        <td id="LC2835" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (animation <span class="pl-k">===</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L2836" class="blob-num js-line-number" data-line-number="2836"></td>
        <td id="LC2836" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">delete</span> <span class="pl-smi">data</span>.<span class="pl-smi">queueList</span>[queue];</td>
      </tr>
      <tr>
        <td id="L2837" class="blob-num js-line-number" data-line-number="2837"></td>
        <td id="LC2837" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2838" class="blob-num js-line-number" data-line-number="2838"></td>
        <td id="LC2838" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> animation;</td>
      </tr>
      <tr>
        <td id="L2839" class="blob-num js-line-number" data-line-number="2839"></td>
        <td id="LC2839" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2840" class="blob-num js-line-number" data-line-number="2840"></td>
        <td id="LC2840" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2841" class="blob-num js-line-number" data-line-number="2841"></td>
        <td id="LC2841" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">dequeue</span> <span class="pl-k">=</span> dequeue;</td>
      </tr>
      <tr>
        <td id="L2842" class="blob-num js-line-number" data-line-number="2842"></td>
        <td id="LC2842" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L2843" class="blob-num js-line-number" data-line-number="2843"></td>
        <td id="LC2843" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Remove an animation from the active animation list. If it has a queue set</span></td>
      </tr>
      <tr>
        <td id="L2844" class="blob-num js-line-number" data-line-number="2844"></td>
        <td id="LC2844" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * then remember it as the last animation for that queue, and free the one</span></td>
      </tr>
      <tr>
        <td id="L2845" class="blob-num js-line-number" data-line-number="2845"></td>
        <td id="LC2845" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * that was previously there. If the animation list is completely empty then</span></td>
      </tr>
      <tr>
        <td id="L2846" class="blob-num js-line-number" data-line-number="2846"></td>
        <td id="LC2846" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * mark us as finished.</span></td>
      </tr>
      <tr>
        <td id="L2847" class="blob-num js-line-number" data-line-number="2847"></td>
        <td id="LC2847" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">freeAnimationCall</span>(<span class="pl-smi">animation</span>) {</td>
      </tr>
      <tr>
        <td id="L2848" class="blob-num js-line-number" data-line-number="2848"></td>
        <td id="LC2848" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> next <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-smi">_next</span>, prev <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-smi">_prev</span>, queue <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-smi">queue</span> <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">animation</span>.<span class="pl-c1">options</span>.<span class="pl-smi">queue</span> <span class="pl-k">:</span> <span class="pl-smi">animation</span>.<span class="pl-smi">queue</span>;</td>
      </tr>
      <tr>
        <td id="L2849" class="blob-num js-line-number" data-line-number="2849"></td>
        <td id="LC2849" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span> <span class="pl-k">===</span> animation) {</td>
      </tr>
      <tr>
        <td id="L2850" class="blob-num js-line-number" data-line-number="2850"></td>
        <td id="LC2850" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span> <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L2851" class="blob-num js-line-number" data-line-number="2851"></td>
        <td id="LC2851" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2852" class="blob-num js-line-number" data-line-number="2852"></td>
        <td id="LC2852" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span> <span class="pl-k">===</span> animation) {</td>
      </tr>
      <tr>
        <td id="L2853" class="blob-num js-line-number" data-line-number="2853"></td>
        <td id="LC2853" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span> <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L2854" class="blob-num js-line-number" data-line-number="2854"></td>
        <td id="LC2854" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (prev) {</td>
      </tr>
      <tr>
        <td id="L2855" class="blob-num js-line-number" data-line-number="2855"></td>
        <td id="LC2855" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">prev</span>.<span class="pl-smi">_next</span> <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L2856" class="blob-num js-line-number" data-line-number="2856"></td>
        <td id="LC2856" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2857" class="blob-num js-line-number" data-line-number="2857"></td>
        <td id="LC2857" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">last</span> <span class="pl-k">===</span> animation) {</td>
      </tr>
      <tr>
        <td id="L2858" class="blob-num js-line-number" data-line-number="2858"></td>
        <td id="LC2858" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">last</span> <span class="pl-k">=</span> prev;</td>
      </tr>
      <tr>
        <td id="L2859" class="blob-num js-line-number" data-line-number="2859"></td>
        <td id="LC2859" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (next) {</td>
      </tr>
      <tr>
        <td id="L2860" class="blob-num js-line-number" data-line-number="2860"></td>
        <td id="LC2860" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">next</span>.<span class="pl-smi">_prev</span> <span class="pl-k">=</span> prev;</td>
      </tr>
      <tr>
        <td id="L2861" class="blob-num js-line-number" data-line-number="2861"></td>
        <td id="LC2861" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2862" class="blob-num js-line-number" data-line-number="2862"></td>
        <td id="LC2862" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (queue) {</td>
      </tr>
      <tr>
        <td id="L2863" class="blob-num js-line-number" data-line-number="2863"></td>
        <td id="LC2863" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> data <span class="pl-k">=</span> <span class="pl-en">Data</span>(<span class="pl-smi">animation</span>.<span class="pl-smi">element</span>);</td>
      </tr>
      <tr>
        <td id="L2864" class="blob-num js-line-number" data-line-number="2864"></td>
        <td id="LC2864" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (data) {</td>
      </tr>
      <tr>
        <td id="L2865" class="blob-num js-line-number" data-line-number="2865"></td>
        <td id="LC2865" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">animation</span>.<span class="pl-smi">_next</span> <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-smi">_prev</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L2866" class="blob-num js-line-number" data-line-number="2866"></td>
        <td id="LC2866" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2867" class="blob-num js-line-number" data-line-number="2867"></td>
        <td id="LC2867" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2868" class="blob-num js-line-number" data-line-number="2868"></td>
        <td id="LC2868" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2869" class="blob-num js-line-number" data-line-number="2869"></td>
        <td id="LC2869" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">freeAnimationCall</span> <span class="pl-k">=</span> freeAnimationCall;</td>
      </tr>
      <tr>
        <td id="L2870" class="blob-num js-line-number" data-line-number="2870"></td>
        <td id="LC2870" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2871" class="blob-num js-line-number" data-line-number="2871"></td>
        <td id="LC2871" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2872" class="blob-num js-line-number" data-line-number="2872"></td>
        <td id="LC2872" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2873" class="blob-num js-line-number" data-line-number="2873"></td>
        <td id="LC2873" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2874" class="blob-num js-line-number" data-line-number="2874"></td>
        <td id="LC2874" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2875" class="blob-num js-line-number" data-line-number="2875"></td>
        <td id="LC2875" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2876" class="blob-num js-line-number" data-line-number="2876"></td>
        <td id="LC2876" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2877" class="blob-num js-line-number" data-line-number="2877"></td>
        <td id="LC2877" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2878" class="blob-num js-line-number" data-line-number="2878"></td>
        <td id="LC2878" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2879" class="blob-num js-line-number" data-line-number="2879"></td>
        <td id="LC2879" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> Container for the user&#39;s custom animation redirects that are referenced by name in place of the properties map argument. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2880" class="blob-num js-line-number" data-line-number="2880"></td>
        <td id="LC2880" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Redirects</span> <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2881" class="blob-num js-line-number" data-line-number="2881"></td>
        <td id="LC2881" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span>*********************</span></td>
      </tr>
      <tr>
        <td id="L2882" class="blob-num js-line-number" data-line-number="2882"></td>
        <td id="LC2882" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     Packaged Redirects</span></td>
      </tr>
      <tr>
        <td id="L2883" class="blob-num js-line-number" data-line-number="2883"></td>
        <td id="LC2883" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     **********************<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2884" class="blob-num js-line-number" data-line-number="2884"></td>
        <td id="LC2884" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> slideUp, slideDown <span class="pl-c">*/</span></span>    [ <span class="pl-s"><span class="pl-pds">&quot;</span>Down<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Up<span class="pl-pds">&quot;</span></span> ].<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">direction</span>) {</td>
      </tr>
      <tr>
        <td id="L2885" class="blob-num js-line-number" data-line-number="2885"></td>
        <td id="LC2885" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Redirects</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>slide<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> direction] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">options</span>, <span class="pl-smi">elementsIndex</span>, <span class="pl-smi">elementsSize</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">resolver</span>) {</td>
      </tr>
      <tr>
        <td id="L2886" class="blob-num js-line-number" data-line-number="2886"></td>
        <td id="LC2886" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> opts <span class="pl-k">=</span> <span class="pl-en">__assign</span>({}, options), begin <span class="pl-k">=</span> <span class="pl-smi">opts</span>.<span class="pl-smi">begin</span>, complete <span class="pl-k">=</span> <span class="pl-smi">opts</span>.<span class="pl-c1">complete</span>, inlineValues <span class="pl-k">=</span> {}, computedValues <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2887" class="blob-num js-line-number" data-line-number="2887"></td>
        <td id="LC2887" class="blob-code blob-code-inner js-file-line">                height<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2888" class="blob-num js-line-number" data-line-number="2888"></td>
        <td id="LC2888" class="blob-code blob-code-inner js-file-line">                marginTop<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2889" class="blob-num js-line-number" data-line-number="2889"></td>
        <td id="LC2889" class="blob-code blob-code-inner js-file-line">                marginBottom<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2890" class="blob-num js-line-number" data-line-number="2890"></td>
        <td id="LC2890" class="blob-code blob-code-inner js-file-line">                paddingTop<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2891" class="blob-num js-line-number" data-line-number="2891"></td>
        <td id="LC2891" class="blob-code blob-code-inner js-file-line">                paddingBottom<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2892" class="blob-num js-line-number" data-line-number="2892"></td>
        <td id="LC2892" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L2893" class="blob-num js-line-number" data-line-number="2893"></td>
        <td id="LC2893" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">opts</span>.<span class="pl-c1">display</span> <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2894" class="blob-num js-line-number" data-line-number="2894"></td>
        <td id="LC2894" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> isInline <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">inlineRx</span>.<span class="pl-c1">test</span>(<span class="pl-smi">element</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>());</td>
      </tr>
      <tr>
        <td id="L2895" class="blob-num js-line-number" data-line-number="2895"></td>
        <td id="LC2895" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Show the element before slideDown begins and hide the element after slideUp completes. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2896" class="blob-num js-line-number" data-line-number="2896"></td>
        <td id="LC2896" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Note: Inline elements cannot have dimensions animated, so they&#39;re reverted to inline-block. <span class="pl-c">*/</span></span>                <span class="pl-smi">opts</span>.<span class="pl-c1">display</span> <span class="pl-k">=</span> direction <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Down<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> isInline <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>inline-block<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2897" class="blob-num js-line-number" data-line-number="2897"></td>
        <td id="LC2897" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2898" class="blob-num js-line-number" data-line-number="2898"></td>
        <td id="LC2898" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">opts</span>.<span class="pl-en">begin</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2899" class="blob-num js-line-number" data-line-number="2899"></td>
        <td id="LC2899" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> If the user passed in a begin callback, fire it now. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2900" class="blob-num js-line-number" data-line-number="2900"></td>
        <td id="LC2900" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (elementsIndex <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> begin) {</td>
      </tr>
      <tr>
        <td id="L2901" class="blob-num js-line-number" data-line-number="2901"></td>
        <td id="LC2901" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">begin</span>.<span class="pl-c1">call</span>(elements, elements);</td>
      </tr>
      <tr>
        <td id="L2902" class="blob-num js-line-number" data-line-number="2902"></td>
        <td id="LC2902" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2903" class="blob-num js-line-number" data-line-number="2903"></td>
        <td id="LC2903" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Cache the elements&#39; original vertical dimensional property values so that we can animate back to them. <span class="pl-c">*/</span></span>                <span class="pl-k">for</span> (<span class="pl-k">var</span> property <span class="pl-k">in</span> computedValues) {</td>
      </tr>
      <tr>
        <td id="L2904" class="blob-num js-line-number" data-line-number="2904"></td>
        <td id="LC2904" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">computedValues</span>.<span class="pl-en">hasOwnProperty</span>(property)) {</td>
      </tr>
      <tr>
        <td id="L2905" class="blob-num js-line-number" data-line-number="2905"></td>
        <td id="LC2905" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L2906" class="blob-num js-line-number" data-line-number="2906"></td>
        <td id="LC2906" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2907" class="blob-num js-line-number" data-line-number="2907"></td>
        <td id="LC2907" class="blob-code blob-code-inner js-file-line">                    inlineValues[property] <span class="pl-k">=</span> <span class="pl-smi">element</span>.<span class="pl-c1">style</span>[property];</td>
      </tr>
      <tr>
        <td id="L2908" class="blob-num js-line-number" data-line-number="2908"></td>
        <td id="LC2908" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">/*</span> For slideDown, use forcefeeding to animate all vertical properties from 0. For slideUp,</span></td>
      </tr>
      <tr>
        <td id="L2909" class="blob-num js-line-number" data-line-number="2909"></td>
        <td id="LC2909" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                     use forcefeeding to start from computed values and animate down to 0. <span class="pl-c">*/</span></span>                    <span class="pl-k">var</span> propertyValue <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, property);</td>
      </tr>
      <tr>
        <td id="L2910" class="blob-num js-line-number" data-line-number="2910"></td>
        <td id="LC2910" class="blob-code blob-code-inner js-file-line">                    computedValues[property] <span class="pl-k">=</span> direction <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Down<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> [ propertyValue, <span class="pl-c1">0</span> ] <span class="pl-k">:</span> [ <span class="pl-c1">0</span>, propertyValue ];</td>
      </tr>
      <tr>
        <td id="L2911" class="blob-num js-line-number" data-line-number="2911"></td>
        <td id="LC2911" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2912" class="blob-num js-line-number" data-line-number="2912"></td>
        <td id="LC2912" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Force vertical overflow content to clip so that sliding works as expected. <span class="pl-c">*/</span></span>                <span class="pl-smi">inlineValues</span>.<span class="pl-smi">overflow</span> <span class="pl-k">=</span> <span class="pl-smi">element</span>.<span class="pl-c1">style</span>.<span class="pl-smi">overflow</span>;</td>
      </tr>
      <tr>
        <td id="L2913" class="blob-num js-line-number" data-line-number="2913"></td>
        <td id="LC2913" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">element</span>.<span class="pl-c1">style</span>.<span class="pl-smi">overflow</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2914" class="blob-num js-line-number" data-line-number="2914"></td>
        <td id="LC2914" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L2915" class="blob-num js-line-number" data-line-number="2915"></td>
        <td id="LC2915" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">opts</span>.<span class="pl-en">complete</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2916" class="blob-num js-line-number" data-line-number="2916"></td>
        <td id="LC2916" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Reset element to its pre-slide inline values once its slide animation is complete. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2917" class="blob-num js-line-number" data-line-number="2917"></td>
        <td id="LC2917" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> property <span class="pl-k">in</span> inlineValues) {</td>
      </tr>
      <tr>
        <td id="L2918" class="blob-num js-line-number" data-line-number="2918"></td>
        <td id="LC2918" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-smi">inlineValues</span>.<span class="pl-en">hasOwnProperty</span>(property)) {</td>
      </tr>
      <tr>
        <td id="L2919" class="blob-num js-line-number" data-line-number="2919"></td>
        <td id="LC2919" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">element</span>.<span class="pl-c1">style</span>[property] <span class="pl-k">=</span> inlineValues[property];</td>
      </tr>
      <tr>
        <td id="L2920" class="blob-num js-line-number" data-line-number="2920"></td>
        <td id="LC2920" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2921" class="blob-num js-line-number" data-line-number="2921"></td>
        <td id="LC2921" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2922" class="blob-num js-line-number" data-line-number="2922"></td>
        <td id="LC2922" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> If the user passed in a complete callback, fire it now. <span class="pl-c">*/</span></span>                <span class="pl-k">if</span> (elementsIndex <span class="pl-k">===</span> elementsSize <span class="pl-k">-</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2923" class="blob-num js-line-number" data-line-number="2923"></td>
        <td id="LC2923" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (complete) {</td>
      </tr>
      <tr>
        <td id="L2924" class="blob-num js-line-number" data-line-number="2924"></td>
        <td id="LC2924" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">complete</span>.<span class="pl-c1">call</span>(elements, elements);</td>
      </tr>
      <tr>
        <td id="L2925" class="blob-num js-line-number" data-line-number="2925"></td>
        <td id="LC2925" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2926" class="blob-num js-line-number" data-line-number="2926"></td>
        <td id="LC2926" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (resolver) {</td>
      </tr>
      <tr>
        <td id="L2927" class="blob-num js-line-number" data-line-number="2927"></td>
        <td id="LC2927" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">resolver</span>(elements);</td>
      </tr>
      <tr>
        <td id="L2928" class="blob-num js-line-number" data-line-number="2928"></td>
        <td id="LC2928" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2929" class="blob-num js-line-number" data-line-number="2929"></td>
        <td id="LC2929" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2930" class="blob-num js-line-number" data-line-number="2930"></td>
        <td id="LC2930" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L2931" class="blob-num js-line-number" data-line-number="2931"></td>
        <td id="LC2931" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">VelocityFn</span>(element, computedValues, opts);</td>
      </tr>
      <tr>
        <td id="L2932" class="blob-num js-line-number" data-line-number="2932"></td>
        <td id="LC2932" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2933" class="blob-num js-line-number" data-line-number="2933"></td>
        <td id="LC2933" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2934" class="blob-num js-line-number" data-line-number="2934"></td>
        <td id="LC2934" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> fadeIn, fadeOut <span class="pl-c">*/</span></span>    [ <span class="pl-s"><span class="pl-pds">&quot;</span>In<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out<span class="pl-pds">&quot;</span></span> ].<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">direction</span>) {</td>
      </tr>
      <tr>
        <td id="L2935" class="blob-num js-line-number" data-line-number="2935"></td>
        <td id="LC2935" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Redirects</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>fade<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> direction] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">options</span>, <span class="pl-smi">elementsIndex</span>, <span class="pl-smi">elementsSize</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">promiseData</span>) {</td>
      </tr>
      <tr>
        <td id="L2936" class="blob-num js-line-number" data-line-number="2936"></td>
        <td id="LC2936" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> opts <span class="pl-k">=</span> <span class="pl-en">__assign</span>({}, options), complete <span class="pl-k">=</span> <span class="pl-smi">opts</span>.<span class="pl-c1">complete</span>, propertiesMap <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2937" class="blob-num js-line-number" data-line-number="2937"></td>
        <td id="LC2937" class="blob-code blob-code-inner js-file-line">                opacity<span class="pl-k">:</span> direction <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>In<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L2938" class="blob-num js-line-number" data-line-number="2938"></td>
        <td id="LC2938" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L2939" class="blob-num js-line-number" data-line-number="2939"></td>
        <td id="LC2939" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Since redirects are triggered individually for each element in the animated set, avoid repeatedly triggering</span></td>
      </tr>
      <tr>
        <td id="L2940" class="blob-num js-line-number" data-line-number="2940"></td>
        <td id="LC2940" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             callbacks by firing them only when the final element has been reached. <span class="pl-c">*/</span></span>            <span class="pl-k">if</span> (elementsIndex <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2941" class="blob-num js-line-number" data-line-number="2941"></td>
        <td id="LC2941" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">opts</span>.<span class="pl-smi">begin</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2942" class="blob-num js-line-number" data-line-number="2942"></td>
        <td id="LC2942" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2943" class="blob-num js-line-number" data-line-number="2943"></td>
        <td id="LC2943" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (elementsIndex <span class="pl-k">!==</span> elementsSize <span class="pl-k">-</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2944" class="blob-num js-line-number" data-line-number="2944"></td>
        <td id="LC2944" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">opts</span>.<span class="pl-c1">complete</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2945" class="blob-num js-line-number" data-line-number="2945"></td>
        <td id="LC2945" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2946" class="blob-num js-line-number" data-line-number="2946"></td>
        <td id="LC2946" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">opts</span>.<span class="pl-en">complete</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2947" class="blob-num js-line-number" data-line-number="2947"></td>
        <td id="LC2947" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (complete) {</td>
      </tr>
      <tr>
        <td id="L2948" class="blob-num js-line-number" data-line-number="2948"></td>
        <td id="LC2948" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">complete</span>.<span class="pl-c1">call</span>(elements, elements);</td>
      </tr>
      <tr>
        <td id="L2949" class="blob-num js-line-number" data-line-number="2949"></td>
        <td id="LC2949" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2950" class="blob-num js-line-number" data-line-number="2950"></td>
        <td id="LC2950" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (promiseData) {</td>
      </tr>
      <tr>
        <td id="L2951" class="blob-num js-line-number" data-line-number="2951"></td>
        <td id="LC2951" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">promiseData</span>.<span class="pl-en">resolver</span>(elements);</td>
      </tr>
      <tr>
        <td id="L2952" class="blob-num js-line-number" data-line-number="2952"></td>
        <td id="LC2952" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2953" class="blob-num js-line-number" data-line-number="2953"></td>
        <td id="LC2953" class="blob-code blob-code-inner js-file-line">                };</td>
      </tr>
      <tr>
        <td id="L2954" class="blob-num js-line-number" data-line-number="2954"></td>
        <td id="LC2954" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2955" class="blob-num js-line-number" data-line-number="2955"></td>
        <td id="LC2955" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> If a display was passed in, use it. Otherwise, default to &quot;none&quot; for fadeOut or the element-specific default for fadeIn. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2956" class="blob-num js-line-number" data-line-number="2956"></td>
        <td id="LC2956" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Note: We allow users to pass in &quot;null&quot; to skip display setting altogether. <span class="pl-c">*/</span></span>            <span class="pl-k">if</span> (<span class="pl-smi">opts</span>.<span class="pl-c1">display</span> <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2957" class="blob-num js-line-number" data-line-number="2957"></td>
        <td id="LC2957" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">opts</span>.<span class="pl-c1">display</span> <span class="pl-k">=</span> direction <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>In<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2958" class="blob-num js-line-number" data-line-number="2958"></td>
        <td id="LC2958" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2959" class="blob-num js-line-number" data-line-number="2959"></td>
        <td id="LC2959" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">VelocityFn</span>(<span class="pl-c1">this</span>, propertiesMap, opts);</td>
      </tr>
      <tr>
        <td id="L2960" class="blob-num js-line-number" data-line-number="2960"></td>
        <td id="LC2960" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2961" class="blob-num js-line-number" data-line-number="2961"></td>
        <td id="LC2961" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2962" class="blob-num js-line-number" data-line-number="2962"></td>
        <td id="LC2962" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L2963" class="blob-num js-line-number" data-line-number="2963"></td>
        <td id="LC2963" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2964" class="blob-num js-line-number" data-line-number="2964"></td>
        <td id="LC2964" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2965" class="blob-num js-line-number" data-line-number="2965"></td>
        <td id="LC2965" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L2966" class="blob-num js-line-number" data-line-number="2966"></td>
        <td id="LC2966" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2967" class="blob-num js-line-number" data-line-number="2967"></td>
        <td id="LC2967" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L2968" class="blob-num js-line-number" data-line-number="2968"></td>
        <td id="LC2968" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2969" class="blob-num js-line-number" data-line-number="2969"></td>
        <td id="LC2969" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Effect Registration</span></td>
      </tr>
      <tr>
        <td id="L2970" class="blob-num js-line-number" data-line-number="2970"></td>
        <td id="LC2970" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2971" class="blob-num js-line-number" data-line-number="2971"></td>
        <td id="LC2971" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L2972" class="blob-num js-line-number" data-line-number="2972"></td>
        <td id="LC2972" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2973" class="blob-num js-line-number" data-line-number="2973"></td>
        <td id="LC2973" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L2974" class="blob-num js-line-number" data-line-number="2974"></td>
        <td id="LC2974" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> Animate the expansion/contraction of the elements&#39; parent&#39;s height for In/Out effects. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2975" class="blob-num js-line-number" data-line-number="2975"></td>
        <td id="LC2975" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">animateParentHeight</span>(<span class="pl-smi">elements</span>, <span class="pl-smi">direction</span>, <span class="pl-smi">totalDuration</span>, <span class="pl-smi">stagger</span>) {</td>
      </tr>
      <tr>
        <td id="L2976" class="blob-num js-line-number" data-line-number="2976"></td>
        <td id="LC2976" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> totalHeightDelta <span class="pl-k">=</span> <span class="pl-c1">0</span>, parentNode;</td>
      </tr>
      <tr>
        <td id="L2977" class="blob-num js-line-number" data-line-number="2977"></td>
        <td id="LC2977" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Sum the total height (including padding and margin) of all targeted elements. <span class="pl-c">*/</span></span>        </td>
      </tr>
      <tr>
        <td id="L2978" class="blob-num js-line-number" data-line-number="2978"></td>
        <td id="LC2978" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Sum the total height (including padding and margin) of all targeted elements. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2979" class="blob-num js-line-number" data-line-number="2979"></td>
        <td id="LC2979" class="blob-code blob-code-inner js-file-line">        (<span class="pl-smi">elements</span>.<span class="pl-c1">nodeType</span> <span class="pl-k">?</span> [ elements ] <span class="pl-k">:</span> elements).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2980" class="blob-num js-line-number" data-line-number="2980"></td>
        <td id="LC2980" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (stagger) {</td>
      </tr>
      <tr>
        <td id="L2981" class="blob-num js-line-number" data-line-number="2981"></td>
        <td id="LC2981" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Increase the totalDuration by the successive delay amounts produced by the stagger option. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2982" class="blob-num js-line-number" data-line-number="2982"></td>
        <td id="LC2982" class="blob-code blob-code-inner js-file-line">                totalDuration <span class="pl-k">+=</span> i <span class="pl-k">*</span> stagger;</td>
      </tr>
      <tr>
        <td id="L2983" class="blob-num js-line-number" data-line-number="2983"></td>
        <td id="LC2983" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2984" class="blob-num js-line-number" data-line-number="2984"></td>
        <td id="LC2984" class="blob-code blob-code-inner js-file-line">            parentNode <span class="pl-k">=</span> <span class="pl-smi">element</span>.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L2985" class="blob-num js-line-number" data-line-number="2985"></td>
        <td id="LC2985" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> propertiesToSum <span class="pl-k">=</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>paddingTop<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>paddingBottom<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>marginTop<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>marginBottom<span class="pl-pds">&quot;</span></span> ];</td>
      </tr>
      <tr>
        <td id="L2986" class="blob-num js-line-number" data-line-number="2986"></td>
        <td id="LC2986" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> If box-sizing is border-box, the height already includes padding and margin <span class="pl-c">*/</span></span>            <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>boxSizing<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toString</span>().<span class="pl-c1">toLowerCase</span>() <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>border-box<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2987" class="blob-num js-line-number" data-line-number="2987"></td>
        <td id="LC2987" class="blob-code blob-code-inner js-file-line">                propertiesToSum <span class="pl-k">=</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span> ];</td>
      </tr>
      <tr>
        <td id="L2988" class="blob-num js-line-number" data-line-number="2988"></td>
        <td id="LC2988" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2989" class="blob-num js-line-number" data-line-number="2989"></td>
        <td id="LC2989" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">propertiesToSum</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">property</span>) {</td>
      </tr>
      <tr>
        <td id="L2990" class="blob-num js-line-number" data-line-number="2990"></td>
        <td id="LC2990" class="blob-code blob-code-inner js-file-line">                totalHeightDelta <span class="pl-k">+=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, property));</td>
      </tr>
      <tr>
        <td id="L2991" class="blob-num js-line-number" data-line-number="2991"></td>
        <td id="LC2991" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2992" class="blob-num js-line-number" data-line-number="2992"></td>
        <td id="LC2992" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2993" class="blob-num js-line-number" data-line-number="2993"></td>
        <td id="LC2993" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Animate the parent element&#39;s height adjustment (with a varying duration multiplier for aesthetic benefits). <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L2994" class="blob-num js-line-number" data-line-number="2994"></td>
        <td id="LC2994" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: Get this typesafe again</span></td>
      </tr>
      <tr>
        <td id="L2995" class="blob-num js-line-number" data-line-number="2995"></td>
        <td id="LC2995" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">VelocityFn</span>(parentNode, {</td>
      </tr>
      <tr>
        <td id="L2996" class="blob-num js-line-number" data-line-number="2996"></td>
        <td id="LC2996" class="blob-code blob-code-inner js-file-line">            height<span class="pl-k">:</span> (direction <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>In<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> totalHeightDelta</td>
      </tr>
      <tr>
        <td id="L2997" class="blob-num js-line-number" data-line-number="2997"></td>
        <td id="LC2997" class="blob-code blob-code-inner js-file-line">        }, {</td>
      </tr>
      <tr>
        <td id="L2998" class="blob-num js-line-number" data-line-number="2998"></td>
        <td id="LC2998" class="blob-code blob-code-inner js-file-line">            queue<span class="pl-k">:</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L2999" class="blob-num js-line-number" data-line-number="2999"></td>
        <td id="LC2999" class="blob-code blob-code-inner js-file-line">            easing<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ease-in-out<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3000" class="blob-num js-line-number" data-line-number="3000"></td>
        <td id="LC3000" class="blob-code blob-code-inner js-file-line">            duration<span class="pl-k">:</span> totalDuration <span class="pl-k">*</span> (direction <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>In<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-c1">.6</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L3001" class="blob-num js-line-number" data-line-number="3001"></td>
        <td id="LC3001" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3002" class="blob-num js-line-number" data-line-number="3002"></td>
        <td id="LC3002" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3003" class="blob-num js-line-number" data-line-number="3003"></td>
        <td id="LC3003" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> Note: RegisterUI is a legacy name. <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">RegisterEffect</span>(<span class="pl-smi">effectName</span>, <span class="pl-smi">properties</span>) {</td>
      </tr>
      <tr>
        <td id="L3004" class="blob-num js-line-number" data-line-number="3004"></td>
        <td id="LC3004" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Register a custom redirect for each effect. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3005" class="blob-num js-line-number" data-line-number="3005"></td>
        <td id="LC3005" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Redirects</span>[effectName] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">redirectOptions</span>, <span class="pl-smi">elementsIndex</span>, <span class="pl-smi">elementsSize</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">resolver</span>, <span class="pl-smi">loop</span>) {</td>
      </tr>
      <tr>
        <td id="L3006" class="blob-num js-line-number" data-line-number="3006"></td>
        <td id="LC3006" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> finalElement <span class="pl-k">=</span> elementsIndex <span class="pl-k">===</span> elementsSize <span class="pl-k">-</span> <span class="pl-c1">1</span>, totalDuration <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3007" class="blob-num js-line-number" data-line-number="3007"></td>
        <td id="LC3007" class="blob-code blob-code-inner js-file-line">            loop <span class="pl-k">=</span> loop <span class="pl-k">||</span> <span class="pl-smi">properties</span>.<span class="pl-smi">loop</span>;</td>
      </tr>
      <tr>
        <td id="L3008" class="blob-num js-line-number" data-line-number="3008"></td>
        <td id="LC3008" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-smi">properties</span>.<span class="pl-smi">defaultDuration</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3009" class="blob-num js-line-number" data-line-number="3009"></td>
        <td id="LC3009" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">properties</span>.<span class="pl-smi">defaultDuration</span> <span class="pl-k">=</span> <span class="pl-smi">properties</span>.<span class="pl-smi">defaultDuration</span>.<span class="pl-c1">call</span>(elements, elements);</td>
      </tr>
      <tr>
        <td id="L3010" class="blob-num js-line-number" data-line-number="3010"></td>
        <td id="LC3010" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3011" class="blob-num js-line-number" data-line-number="3011"></td>
        <td id="LC3011" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">properties</span>.<span class="pl-smi">defaultDuration</span> <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">properties</span>.<span class="pl-smi">defaultDuration</span>);</td>
      </tr>
      <tr>
        <td id="L3012" class="blob-num js-line-number" data-line-number="3012"></td>
        <td id="LC3012" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3013" class="blob-num js-line-number" data-line-number="3013"></td>
        <td id="LC3013" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Get the total duration used, so we can share it out with everything that doesn&#39;t have a duration <span class="pl-c">*/</span></span>            <span class="pl-k">for</span> (<span class="pl-k">var</span> callIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>; callIndex <span class="pl-k">&lt;</span> <span class="pl-smi">properties</span>.<span class="pl-smi">calls</span>.<span class="pl-c1">length</span>; callIndex<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3014" class="blob-num js-line-number" data-line-number="3014"></td>
        <td id="LC3014" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> durationPercentage <span class="pl-k">=</span> <span class="pl-smi">properties</span>.<span class="pl-smi">calls</span>[callIndex][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3015" class="blob-num js-line-number" data-line-number="3015"></td>
        <td id="LC3015" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">typeof</span> durationPercentage <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3016" class="blob-num js-line-number" data-line-number="3016"></td>
        <td id="LC3016" class="blob-code blob-code-inner js-file-line">                    totalDuration <span class="pl-k">+=</span> durationPercentage;</td>
      </tr>
      <tr>
        <td id="L3017" class="blob-num js-line-number" data-line-number="3017"></td>
        <td id="LC3017" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3018" class="blob-num js-line-number" data-line-number="3018"></td>
        <td id="LC3018" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3019" class="blob-num js-line-number" data-line-number="3019"></td>
        <td id="LC3019" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> shareDuration <span class="pl-k">=</span> totalDuration <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-smi">properties</span>.<span class="pl-smi">calls</span>.<span class="pl-c1">length</span> <span class="pl-k">?</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> totalDuration) <span class="pl-k">/</span> <span class="pl-smi">properties</span>.<span class="pl-smi">calls</span>.<span class="pl-c1">length</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3020" class="blob-num js-line-number" data-line-number="3020"></td>
        <td id="LC3020" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> <span class="pl-en">_loop_1</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">callIndex</span>) {</td>
      </tr>
      <tr>
        <td id="L3021" class="blob-num js-line-number" data-line-number="3021"></td>
        <td id="LC3021" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> call <span class="pl-k">=</span> <span class="pl-smi">properties</span>.<span class="pl-smi">calls</span>[callIndex], propertyMap <span class="pl-k">=</span> call[<span class="pl-c1">0</span>], redirectDuration <span class="pl-k">=</span> <span class="pl-c1">1e3</span>, durationPercentage <span class="pl-k">=</span> call[<span class="pl-c1">1</span>], callOptions <span class="pl-k">=</span> call[<span class="pl-c1">2</span>] <span class="pl-k">||</span> {}, opts <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3022" class="blob-num js-line-number" data-line-number="3022"></td>
        <td id="LC3022" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">redirectOptions</span>.<span class="pl-smi">duration</span> <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L3023" class="blob-num js-line-number" data-line-number="3023"></td>
        <td id="LC3023" class="blob-code blob-code-inner js-file-line">                    redirectDuration <span class="pl-k">=</span> <span class="pl-smi">redirectOptions</span>.<span class="pl-smi">duration</span>;</td>
      </tr>
      <tr>
        <td id="L3024" class="blob-num js-line-number" data-line-number="3024"></td>
        <td id="LC3024" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">properties</span>.<span class="pl-smi">defaultDuration</span> <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L3025" class="blob-num js-line-number" data-line-number="3025"></td>
        <td id="LC3025" class="blob-code blob-code-inner js-file-line">                    redirectDuration <span class="pl-k">=</span> <span class="pl-smi">properties</span>.<span class="pl-smi">defaultDuration</span>;</td>
      </tr>
      <tr>
        <td id="L3026" class="blob-num js-line-number" data-line-number="3026"></td>
        <td id="LC3026" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3027" class="blob-num js-line-number" data-line-number="3027"></td>
        <td id="LC3027" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Assign the whitelisted per-call options. <span class="pl-c">*/</span></span>                <span class="pl-smi">opts</span>.<span class="pl-smi">duration</span> <span class="pl-k">=</span> redirectDuration <span class="pl-k">*</span> (<span class="pl-k">typeof</span> durationPercentage <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> durationPercentage <span class="pl-k">:</span> shareDuration);</td>
      </tr>
      <tr>
        <td id="L3028" class="blob-num js-line-number" data-line-number="3028"></td>
        <td id="LC3028" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">opts</span>.<span class="pl-smi">queue</span> <span class="pl-k">=</span> <span class="pl-smi">redirectOptions</span>.<span class="pl-smi">queue</span> <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3029" class="blob-num js-line-number" data-line-number="3029"></td>
        <td id="LC3029" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">opts</span>.<span class="pl-smi">easing</span> <span class="pl-k">=</span> <span class="pl-smi">callOptions</span>.<span class="pl-smi">easing</span> <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ease<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3030" class="blob-num js-line-number" data-line-number="3030"></td>
        <td id="LC3030" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">opts</span>.<span class="pl-smi">delay</span> <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">callOptions</span>.<span class="pl-smi">delay</span>) <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3031" class="blob-num js-line-number" data-line-number="3031"></td>
        <td id="LC3031" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">opts</span>.<span class="pl-smi">loop</span> <span class="pl-k">=</span> <span class="pl-k">!</span><span class="pl-smi">properties</span>.<span class="pl-smi">loop</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">callOptions</span>.<span class="pl-smi">loop</span>;</td>
      </tr>
      <tr>
        <td id="L3032" class="blob-num js-line-number" data-line-number="3032"></td>
        <td id="LC3032" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">opts</span>.<span class="pl-smi">cache</span> <span class="pl-k">=</span> <span class="pl-smi">callOptions</span>.<span class="pl-smi">cache</span> <span class="pl-k">||</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3033" class="blob-num js-line-number" data-line-number="3033"></td>
        <td id="LC3033" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Special processing for the first effect call. <span class="pl-c">*/</span></span>                <span class="pl-k">if</span> (callIndex <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3034" class="blob-num js-line-number" data-line-number="3034"></td>
        <td id="LC3034" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">/*</span> If a delay was passed into the redirect, combine it with the first call&#39;s delay. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3035" class="blob-num js-line-number" data-line-number="3035"></td>
        <td id="LC3035" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">opts</span>.<span class="pl-smi">delay</span> <span class="pl-k">+=</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">redirectOptions</span>.<span class="pl-smi">delay</span>) <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3036" class="blob-num js-line-number" data-line-number="3036"></td>
        <td id="LC3036" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (elementsIndex <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3037" class="blob-num js-line-number" data-line-number="3037"></td>
        <td id="LC3037" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">opts</span>.<span class="pl-en">begin</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3038" class="blob-num js-line-number" data-line-number="3038"></td>
        <td id="LC3038" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">/*</span> Only trigger a begin callback on the first effect call with the first element in the set. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3039" class="blob-num js-line-number" data-line-number="3039"></td>
        <td id="LC3039" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-smi">redirectOptions</span>.<span class="pl-smi">begin</span>) {</td>
      </tr>
      <tr>
        <td id="L3040" class="blob-num js-line-number" data-line-number="3040"></td>
        <td id="LC3040" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">redirectOptions</span>.<span class="pl-smi">begin</span>.<span class="pl-c1">call</span>(elements, elements);</td>
      </tr>
      <tr>
        <td id="L3041" class="blob-num js-line-number" data-line-number="3041"></td>
        <td id="LC3041" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L3042" class="blob-num js-line-number" data-line-number="3042"></td>
        <td id="LC3042" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> direction <span class="pl-k">=</span> <span class="pl-smi">effectName</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>(In<span class="pl-k">|</span>Out)<span class="pl-k">$</span><span class="pl-pds">/</span></span>);</td>
      </tr>
      <tr>
        <td id="L3043" class="blob-num js-line-number" data-line-number="3043"></td>
        <td id="LC3043" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">/*</span> Make &quot;in&quot; transitioning elements invisible immediately so that there&#39;s no FOUC between now</span></td>
      </tr>
      <tr>
        <td id="L3044" class="blob-num js-line-number" data-line-number="3044"></td>
        <td id="LC3044" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                             and the first RAF tick. <span class="pl-c">*/</span></span>                            <span class="pl-k">if</span> (direction <span class="pl-k">&amp;&amp;</span> direction[<span class="pl-c1">0</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>In<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">propertyMap</span>.<span class="pl-smi">opacity</span> <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L3045" class="blob-num js-line-number" data-line-number="3045"></td>
        <td id="LC3045" class="blob-code blob-code-inner js-file-line">                                (<span class="pl-smi">elements</span>.<span class="pl-c1">nodeType</span> <span class="pl-k">?</span> [ elements ] <span class="pl-k">:</span> elements).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L3046" class="blob-num js-line-number" data-line-number="3046"></td>
        <td id="LC3046" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">setPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3047" class="blob-num js-line-number" data-line-number="3047"></td>
        <td id="LC3047" class="blob-code blob-code-inner js-file-line">                                });</td>
      </tr>
      <tr>
        <td id="L3048" class="blob-num js-line-number" data-line-number="3048"></td>
        <td id="LC3048" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L3049" class="blob-num js-line-number" data-line-number="3049"></td>
        <td id="LC3049" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">/*</span> Only trigger animateParentHeight() if we&#39;re using an In/Out transition. <span class="pl-c">*/</span></span>                            <span class="pl-k">if</span> (<span class="pl-smi">redirectOptions</span>.<span class="pl-smi">animateParentHeight</span> <span class="pl-k">&amp;&amp;</span> direction) {</td>
      </tr>
      <tr>
        <td id="L3050" class="blob-num js-line-number" data-line-number="3050"></td>
        <td id="LC3050" class="blob-code blob-code-inner js-file-line">                                <span class="pl-en">animateParentHeight</span>(elements, direction[<span class="pl-c1">0</span>], redirectDuration <span class="pl-k">+</span> <span class="pl-smi">opts</span>.<span class="pl-smi">delay</span>, <span class="pl-smi">redirectOptions</span>.<span class="pl-smi">stagger</span>);</td>
      </tr>
      <tr>
        <td id="L3051" class="blob-num js-line-number" data-line-number="3051"></td>
        <td id="LC3051" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L3052" class="blob-num js-line-number" data-line-number="3052"></td>
        <td id="LC3052" class="blob-code blob-code-inner js-file-line">                        };</td>
      </tr>
      <tr>
        <td id="L3053" class="blob-num js-line-number" data-line-number="3053"></td>
        <td id="LC3053" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3054" class="blob-num js-line-number" data-line-number="3054"></td>
        <td id="LC3054" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">/*</span> If the user isn&#39;t overriding the display option, default to &quot;auto&quot; for &quot;In&quot;-suffixed transitions. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3055" class="blob-num js-line-number" data-line-number="3055"></td>
        <td id="LC3055" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>					if (redirectOptions.display !== null) {</span></td>
      </tr>
      <tr>
        <td id="L3056" class="blob-num js-line-number" data-line-number="3056"></td>
        <td id="LC3056" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>						if (redirectOptions.display !== undefined &amp;&amp; redirectOptions.display !== &quot;none&quot;) {</span></td>
      </tr>
      <tr>
        <td id="L3057" class="blob-num js-line-number" data-line-number="3057"></td>
        <td id="LC3057" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>							opts.display = redirectOptions.display;</span></td>
      </tr>
      <tr>
        <td id="L3058" class="blob-num js-line-number" data-line-number="3058"></td>
        <td id="LC3058" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>						} else if (/In$/.test(effectName)) {</span></td>
      </tr>
      <tr>
        <td id="L3059" class="blob-num js-line-number" data-line-number="3059"></td>
        <td id="LC3059" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>							/* Inline elements cannot be subjected to transforms, so we switch them to inline-block. */</span></td>
      </tr>
      <tr>
        <td id="L3060" class="blob-num js-line-number" data-line-number="3060"></td>
        <td id="LC3060" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>							let defaultDisplay = CSS.Values.getDisplayType(element);</span></td>
      </tr>
      <tr>
        <td id="L3061" class="blob-num js-line-number" data-line-number="3061"></td>
        <td id="LC3061" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>							opts.display = (defaultDisplay === &quot;inline&quot;) ? &quot;inline-block&quot; : defaultDisplay;</span></td>
      </tr>
      <tr>
        <td id="L3062" class="blob-num js-line-number" data-line-number="3062"></td>
        <td id="LC3062" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>						}</span></td>
      </tr>
      <tr>
        <td id="L3063" class="blob-num js-line-number" data-line-number="3063"></td>
        <td id="LC3063" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>					}</span></td>
      </tr>
      <tr>
        <td id="L3064" class="blob-num js-line-number" data-line-number="3064"></td>
        <td id="LC3064" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">if</span> (<span class="pl-smi">redirectOptions</span>.<span class="pl-c1">visibility</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">redirectOptions</span>.<span class="pl-c1">visibility</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3065" class="blob-num js-line-number" data-line-number="3065"></td>
        <td id="LC3065" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">opts</span>.<span class="pl-c1">visibility</span> <span class="pl-k">=</span> <span class="pl-smi">redirectOptions</span>.<span class="pl-c1">visibility</span>;</td>
      </tr>
      <tr>
        <td id="L3066" class="blob-num js-line-number" data-line-number="3066"></td>
        <td id="LC3066" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3067" class="blob-num js-line-number" data-line-number="3067"></td>
        <td id="LC3067" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3068" class="blob-num js-line-number" data-line-number="3068"></td>
        <td id="LC3068" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Special processing for the last effect call. <span class="pl-c">*/</span></span>                <span class="pl-k">if</span> (callIndex <span class="pl-k">===</span> <span class="pl-smi">properties</span>.<span class="pl-smi">calls</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3069" class="blob-num js-line-number" data-line-number="3069"></td>
        <td id="LC3069" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">/*</span> Append promise resolving onto the user&#39;s redirect callback. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3070" class="blob-num js-line-number" data-line-number="3070"></td>
        <td id="LC3070" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> <span class="pl-en">injectFinalCallbacks_1</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3071" class="blob-num js-line-number" data-line-number="3071"></td>
        <td id="LC3071" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> ((<span class="pl-smi">redirectOptions</span>.<span class="pl-c1">display</span> <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">||</span> <span class="pl-smi">redirectOptions</span>.<span class="pl-c1">display</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>) <span class="pl-k">&amp;&amp;</span><span class="pl-sr"> <span class="pl-pds">/</span>Out<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(effectName)) {</td>
      </tr>
      <tr>
        <td id="L3072" class="blob-num js-line-number" data-line-number="3072"></td>
        <td id="LC3072" class="blob-code blob-code-inner js-file-line">                            (<span class="pl-smi">elements</span>.<span class="pl-c1">nodeType</span> <span class="pl-k">?</span> [ elements ] <span class="pl-k">:</span> elements).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L3073" class="blob-num js-line-number" data-line-number="3073"></td>
        <td id="LC3073" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">setPropertyValue</span>(element, <span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3074" class="blob-num js-line-number" data-line-number="3074"></td>
        <td id="LC3074" class="blob-code blob-code-inner js-file-line">                            });</td>
      </tr>
      <tr>
        <td id="L3075" class="blob-num js-line-number" data-line-number="3075"></td>
        <td id="LC3075" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3076" class="blob-num js-line-number" data-line-number="3076"></td>
        <td id="LC3076" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-smi">redirectOptions</span>.<span class="pl-c1">complete</span>) {</td>
      </tr>
      <tr>
        <td id="L3077" class="blob-num js-line-number" data-line-number="3077"></td>
        <td id="LC3077" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">redirectOptions</span>.<span class="pl-c1">complete</span>.<span class="pl-c1">call</span>(elements, elements);</td>
      </tr>
      <tr>
        <td id="L3078" class="blob-num js-line-number" data-line-number="3078"></td>
        <td id="LC3078" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3079" class="blob-num js-line-number" data-line-number="3079"></td>
        <td id="LC3079" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (resolver) {</td>
      </tr>
      <tr>
        <td id="L3080" class="blob-num js-line-number" data-line-number="3080"></td>
        <td id="LC3080" class="blob-code blob-code-inner js-file-line">                            <span class="pl-en">resolver</span>(elements <span class="pl-k">||</span> element);</td>
      </tr>
      <tr>
        <td id="L3081" class="blob-num js-line-number" data-line-number="3081"></td>
        <td id="LC3081" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3082" class="blob-num js-line-number" data-line-number="3082"></td>
        <td id="LC3082" class="blob-code blob-code-inner js-file-line">                    };</td>
      </tr>
      <tr>
        <td id="L3083" class="blob-num js-line-number" data-line-number="3083"></td>
        <td id="LC3083" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">opts</span>.<span class="pl-en">complete</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3084" class="blob-num js-line-number" data-line-number="3084"></td>
        <td id="LC3084" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (loop) {</td>
      </tr>
      <tr>
        <td id="L3085" class="blob-num js-line-number" data-line-number="3085"></td>
        <td id="LC3085" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Redirects</span>[effectName](element, redirectOptions, elementsIndex, elementsSize, elements, resolver, loop <span class="pl-k">===</span> <span class="pl-c1">true</span> <span class="pl-k">?</span> <span class="pl-c1">true</span> <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, loop <span class="pl-k">-</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L3086" class="blob-num js-line-number" data-line-number="3086"></td>
        <td id="LC3086" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3087" class="blob-num js-line-number" data-line-number="3087"></td>
        <td id="LC3087" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-smi">properties</span>.<span class="pl-smi">reset</span>) {</td>
      </tr>
      <tr>
        <td id="L3088" class="blob-num js-line-number" data-line-number="3088"></td>
        <td id="LC3088" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">for</span> (<span class="pl-k">var</span> resetProperty <span class="pl-k">in</span> <span class="pl-smi">properties</span>.<span class="pl-smi">reset</span>) {</td>
      </tr>
      <tr>
        <td id="L3089" class="blob-num js-line-number" data-line-number="3089"></td>
        <td id="LC3089" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">properties</span>.<span class="pl-smi">reset</span>.<span class="pl-en">hasOwnProperty</span>(resetProperty)) {</td>
      </tr>
      <tr>
        <td id="L3090" class="blob-num js-line-number" data-line-number="3090"></td>
        <td id="LC3090" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3091" class="blob-num js-line-number" data-line-number="3091"></td>
        <td id="LC3091" class="blob-code blob-code-inner js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L3092" class="blob-num js-line-number" data-line-number="3092"></td>
        <td id="LC3092" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> resetValue <span class="pl-k">=</span> <span class="pl-smi">properties</span>.<span class="pl-smi">reset</span>[resetProperty];</td>
      </tr>
      <tr>
        <td id="L3093" class="blob-num js-line-number" data-line-number="3093"></td>
        <td id="LC3093" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">/*</span> Format each non-array value in the reset property map to [ value, value ] so that changes apply</span></td>
      </tr>
      <tr>
        <td id="L3094" class="blob-num js-line-number" data-line-number="3094"></td>
        <td id="LC3094" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                 immediately and DOM querying is avoided (via forcefeeding). <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3095" class="blob-num js-line-number" data-line-number="3095"></td>
        <td id="LC3095" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">/*</span> Note: Don&#39;t forcefeed hooks, otherwise their hook roots will be defaulted to their null values. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3096" class="blob-num js-line-number" data-line-number="3096"></td>
        <td id="LC3096" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> TODO: Fix this</span></td>
      </tr>
      <tr>
        <td id="L3097" class="blob-num js-line-number" data-line-number="3097"></td>
        <td id="LC3097" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span>								if (CSS.Hooks.registered[resetProperty] === undefined &amp;&amp; (typeof resetValue === &quot;string&quot; || typeof resetValue === &quot;number&quot;)) {</span></td>
      </tr>
      <tr>
        <td id="L3098" class="blob-num js-line-number" data-line-number="3098"></td>
        <td id="LC3098" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span>									properties.reset[resetProperty] = [properties.reset[resetProperty], properties.reset[resetProperty]];</span></td>
      </tr>
      <tr>
        <td id="L3099" class="blob-num js-line-number" data-line-number="3099"></td>
        <td id="LC3099" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span>								}</span></td>
      </tr>
      <tr>
        <td id="L3100" class="blob-num js-line-number" data-line-number="3100"></td>
        <td id="LC3100" class="blob-code blob-code-inner js-file-line">                                                        }</td>
      </tr>
      <tr>
        <td id="L3101" class="blob-num js-line-number" data-line-number="3101"></td>
        <td id="LC3101" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">/*</span> So that the reset values are applied instantly upon the next rAF tick, use a zero duration and parallel queueing. <span class="pl-c">*/</span></span>                            <span class="pl-k">var</span> resetOptions <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3102" class="blob-num js-line-number" data-line-number="3102"></td>
        <td id="LC3102" class="blob-code blob-code-inner js-file-line">                                duration<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3103" class="blob-num js-line-number" data-line-number="3103"></td>
        <td id="LC3103" class="blob-code blob-code-inner js-file-line">                                queue<span class="pl-k">:</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L3104" class="blob-num js-line-number" data-line-number="3104"></td>
        <td id="LC3104" class="blob-code blob-code-inner js-file-line">                            };</td>
      </tr>
      <tr>
        <td id="L3105" class="blob-num js-line-number" data-line-number="3105"></td>
        <td id="LC3105" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">/*</span> Since the reset option uses up the complete callback, we trigger the user&#39;s complete callback at the end of ours. <span class="pl-c">*/</span></span>                            <span class="pl-k">if</span> (finalElement) {</td>
      </tr>
      <tr>
        <td id="L3106" class="blob-num js-line-number" data-line-number="3106"></td>
        <td id="LC3106" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">resetOptions</span>.<span class="pl-c1">complete</span> <span class="pl-k">=</span> injectFinalCallbacks_1;</td>
      </tr>
      <tr>
        <td id="L3107" class="blob-num js-line-number" data-line-number="3107"></td>
        <td id="LC3107" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L3108" class="blob-num js-line-number" data-line-number="3108"></td>
        <td id="LC3108" class="blob-code blob-code-inner js-file-line">                            <span class="pl-en">VelocityFn</span>(element, <span class="pl-smi">properties</span>.<span class="pl-smi">reset</span>, resetOptions);</td>
      </tr>
      <tr>
        <td id="L3109" class="blob-num js-line-number" data-line-number="3109"></td>
        <td id="LC3109" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">/*</span> Only trigger the user&#39;s complete callback on the last effect call with the last element in the set. <span class="pl-c">*/</span></span>                        } <span class="pl-k">else</span> <span class="pl-k">if</span> (finalElement) {</td>
      </tr>
      <tr>
        <td id="L3110" class="blob-num js-line-number" data-line-number="3110"></td>
        <td id="LC3110" class="blob-code blob-code-inner js-file-line">                            <span class="pl-en">injectFinalCallbacks_1</span>();</td>
      </tr>
      <tr>
        <td id="L3111" class="blob-num js-line-number" data-line-number="3111"></td>
        <td id="LC3111" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3112" class="blob-num js-line-number" data-line-number="3112"></td>
        <td id="LC3112" class="blob-code blob-code-inner js-file-line">                    };</td>
      </tr>
      <tr>
        <td id="L3113" class="blob-num js-line-number" data-line-number="3113"></td>
        <td id="LC3113" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-smi">redirectOptions</span>.<span class="pl-c1">visibility</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3114" class="blob-num js-line-number" data-line-number="3114"></td>
        <td id="LC3114" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">opts</span>.<span class="pl-c1">visibility</span> <span class="pl-k">=</span> <span class="pl-smi">redirectOptions</span>.<span class="pl-c1">visibility</span>;</td>
      </tr>
      <tr>
        <td id="L3115" class="blob-num js-line-number" data-line-number="3115"></td>
        <td id="LC3115" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3116" class="blob-num js-line-number" data-line-number="3116"></td>
        <td id="LC3116" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3117" class="blob-num js-line-number" data-line-number="3117"></td>
        <td id="LC3117" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">VelocityFn</span>(element, propertyMap, opts);</td>
      </tr>
      <tr>
        <td id="L3118" class="blob-num js-line-number" data-line-number="3118"></td>
        <td id="LC3118" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L3119" class="blob-num js-line-number" data-line-number="3119"></td>
        <td id="LC3119" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Iterate through each effect&#39;s call array. <span class="pl-c">*/</span></span>            <span class="pl-k">for</span> (<span class="pl-k">var</span> callIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>; callIndex <span class="pl-k">&lt;</span> <span class="pl-smi">properties</span>.<span class="pl-smi">calls</span>.<span class="pl-c1">length</span>; callIndex<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3120" class="blob-num js-line-number" data-line-number="3120"></td>
        <td id="LC3120" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">_loop_1</span>(callIndex);</td>
      </tr>
      <tr>
        <td id="L3121" class="blob-num js-line-number" data-line-number="3121"></td>
        <td id="LC3121" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3122" class="blob-num js-line-number" data-line-number="3122"></td>
        <td id="LC3122" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3123" class="blob-num js-line-number" data-line-number="3123"></td>
        <td id="LC3123" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> Return the Velocity object so that RegisterUI calls can be chained. <span class="pl-c">*/</span></span>        <span class="pl-k">return</span> VelocityFn;</td>
      </tr>
      <tr>
        <td id="L3124" class="blob-num js-line-number" data-line-number="3124"></td>
        <td id="LC3124" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3125" class="blob-num js-line-number" data-line-number="3125"></td>
        <td id="LC3125" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">RegisterEffect</span> <span class="pl-k">=</span> RegisterEffect;</td>
      </tr>
      <tr>
        <td id="L3126" class="blob-num js-line-number" data-line-number="3126"></td>
        <td id="LC3126" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L3127" class="blob-num js-line-number" data-line-number="3127"></td>
        <td id="LC3127" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3128" class="blob-num js-line-number" data-line-number="3128"></td>
        <td id="LC3128" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L3129" class="blob-num js-line-number" data-line-number="3129"></td>
        <td id="LC3129" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L3130" class="blob-num js-line-number" data-line-number="3130"></td>
        <td id="LC3130" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3131" class="blob-num js-line-number" data-line-number="3131"></td>
        <td id="LC3131" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L3132" class="blob-num js-line-number" data-line-number="3132"></td>
        <td id="LC3132" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3133" class="blob-num js-line-number" data-line-number="3133"></td>
        <td id="LC3133" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Sequence Running</span></td>
      </tr>
      <tr>
        <td id="L3134" class="blob-num js-line-number" data-line-number="3134"></td>
        <td id="LC3134" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3135" class="blob-num js-line-number" data-line-number="3135"></td>
        <td id="LC3135" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L3136" class="blob-num js-line-number" data-line-number="3136"></td>
        <td id="LC3136" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3137" class="blob-num js-line-number" data-line-number="3137"></td>
        <td id="LC3137" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L3138" class="blob-num js-line-number" data-line-number="3138"></td>
        <td id="LC3138" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> Note: Sequence calls must use Velocity&#39;s single-object arguments syntax. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3139" class="blob-num js-line-number" data-line-number="3139"></td>
        <td id="LC3139" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">RunSequence</span>(<span class="pl-smi">originalSequence</span>) {</td>
      </tr>
      <tr>
        <td id="L3140" class="blob-num js-line-number" data-line-number="3140"></td>
        <td id="LC3140" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> sequence <span class="pl-k">=</span> <span class="pl-en">_deepCopyObject</span>([], originalSequence);</td>
      </tr>
      <tr>
        <td id="L3141" class="blob-num js-line-number" data-line-number="3141"></td>
        <td id="LC3141" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">sequence</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3142" class="blob-num js-line-number" data-line-number="3142"></td>
        <td id="LC3142" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">sequence</span>.<span class="pl-c1">reverse</span>().<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">currentCall</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L3143" class="blob-num js-line-number" data-line-number="3143"></td>
        <td id="LC3143" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> nextCall <span class="pl-k">=</span> sequence[i <span class="pl-k">+</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3144" class="blob-num js-line-number" data-line-number="3144"></td>
        <td id="LC3144" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (nextCall) {</td>
      </tr>
      <tr>
        <td id="L3145" class="blob-num js-line-number" data-line-number="3145"></td>
        <td id="LC3145" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">/*</span> Parallel sequence calls (indicated via sequenceQueue:false) are triggered</span></td>
      </tr>
      <tr>
        <td id="L3146" class="blob-num js-line-number" data-line-number="3146"></td>
        <td id="LC3146" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                     in the previous call&#39;s begin callback. Otherwise, chained calls are normally triggered</span></td>
      </tr>
      <tr>
        <td id="L3147" class="blob-num js-line-number" data-line-number="3147"></td>
        <td id="LC3147" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                     in the previous call&#39;s complete callback. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3148" class="blob-num js-line-number" data-line-number="3148"></td>
        <td id="LC3148" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> currentCallOptions <span class="pl-k">=</span> <span class="pl-smi">currentCall</span>.<span class="pl-smi">o</span> <span class="pl-k">||</span> <span class="pl-smi">currentCall</span>.<span class="pl-c1">options</span>, nextCallOptions <span class="pl-k">=</span> <span class="pl-smi">nextCall</span>.<span class="pl-smi">o</span> <span class="pl-k">||</span> <span class="pl-smi">nextCall</span>.<span class="pl-c1">options</span>;</td>
      </tr>
      <tr>
        <td id="L3149" class="blob-num js-line-number" data-line-number="3149"></td>
        <td id="LC3149" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> timing <span class="pl-k">=</span> currentCallOptions <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">currentCallOptions</span>.<span class="pl-smi">sequenceQueue</span> <span class="pl-k">===</span> <span class="pl-c1">false</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>begin<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>complete<span class="pl-pds">&quot;</span></span>, callbackOriginal_1 <span class="pl-k">=</span> nextCallOptions <span class="pl-k">&amp;&amp;</span> nextCallOptions[timing], options <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3150" class="blob-num js-line-number" data-line-number="3150"></td>
        <td id="LC3150" class="blob-code blob-code-inner js-file-line">                    options[timing] <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3151" class="blob-num js-line-number" data-line-number="3151"></td>
        <td id="LC3151" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> nextCallElements <span class="pl-k">=</span> <span class="pl-smi">nextCall</span>.<span class="pl-smi">e</span> <span class="pl-k">||</span> <span class="pl-smi">nextCall</span>.<span class="pl-c1">elements</span>;</td>
      </tr>
      <tr>
        <td id="L3152" class="blob-num js-line-number" data-line-number="3152"></td>
        <td id="LC3152" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> elements <span class="pl-k">=</span> <span class="pl-smi">nextCallElements</span>.<span class="pl-c1">nodeType</span> <span class="pl-k">?</span> [ nextCallElements ] <span class="pl-k">:</span> nextCallElements;</td>
      </tr>
      <tr>
        <td id="L3153" class="blob-num js-line-number" data-line-number="3153"></td>
        <td id="LC3153" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (callbackOriginal_1) {</td>
      </tr>
      <tr>
        <td id="L3154" class="blob-num js-line-number" data-line-number="3154"></td>
        <td id="LC3154" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">callbackOriginal_1</span>.<span class="pl-c1">call</span>(elements, elements);</td>
      </tr>
      <tr>
        <td id="L3155" class="blob-num js-line-number" data-line-number="3155"></td>
        <td id="LC3155" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3156" class="blob-num js-line-number" data-line-number="3156"></td>
        <td id="LC3156" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">VelocityFn</span>(currentCall);</td>
      </tr>
      <tr>
        <td id="L3157" class="blob-num js-line-number" data-line-number="3157"></td>
        <td id="LC3157" class="blob-code blob-code-inner js-file-line">                    };</td>
      </tr>
      <tr>
        <td id="L3158" class="blob-num js-line-number" data-line-number="3158"></td>
        <td id="LC3158" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-smi">nextCall</span>.<span class="pl-smi">o</span>) {</td>
      </tr>
      <tr>
        <td id="L3159" class="blob-num js-line-number" data-line-number="3159"></td>
        <td id="LC3159" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">nextCall</span>.<span class="pl-smi">o</span> <span class="pl-k">=</span> <span class="pl-en">__assign</span>({}, nextCallOptions, options);</td>
      </tr>
      <tr>
        <td id="L3160" class="blob-num js-line-number" data-line-number="3160"></td>
        <td id="LC3160" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3161" class="blob-num js-line-number" data-line-number="3161"></td>
        <td id="LC3161" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">nextCall</span>.<span class="pl-c1">options</span> <span class="pl-k">=</span> <span class="pl-en">__assign</span>({}, nextCallOptions, options);</td>
      </tr>
      <tr>
        <td id="L3162" class="blob-num js-line-number" data-line-number="3162"></td>
        <td id="LC3162" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3163" class="blob-num js-line-number" data-line-number="3163"></td>
        <td id="LC3163" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3164" class="blob-num js-line-number" data-line-number="3164"></td>
        <td id="LC3164" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3165" class="blob-num js-line-number" data-line-number="3165"></td>
        <td id="LC3165" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">sequence</span>.<span class="pl-c1">reverse</span>();</td>
      </tr>
      <tr>
        <td id="L3166" class="blob-num js-line-number" data-line-number="3166"></td>
        <td id="LC3166" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3167" class="blob-num js-line-number" data-line-number="3167"></td>
        <td id="LC3167" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">VelocityFn</span>(sequence[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3168" class="blob-num js-line-number" data-line-number="3168"></td>
        <td id="LC3168" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3169" class="blob-num js-line-number" data-line-number="3169"></td>
        <td id="LC3169" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">RunSequence</span> <span class="pl-k">=</span> RunSequence;</td>
      </tr>
      <tr>
        <td id="L3170" class="blob-num js-line-number" data-line-number="3170"></td>
        <td id="LC3170" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L3171" class="blob-num js-line-number" data-line-number="3171"></td>
        <td id="LC3171" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3172" class="blob-num js-line-number" data-line-number="3172"></td>
        <td id="LC3172" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;state.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L3173" class="blob-num js-line-number" data-line-number="3173"></td>
        <td id="LC3173" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L3174" class="blob-num js-line-number" data-line-number="3174"></td>
        <td id="LC3174" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L3175" class="blob-num js-line-number" data-line-number="3175"></td>
        <td id="LC3175" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3176" class="blob-num js-line-number" data-line-number="3176"></td>
        <td id="LC3176" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L3177" class="blob-num js-line-number" data-line-number="3177"></td>
        <td id="LC3177" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3178" class="blob-num js-line-number" data-line-number="3178"></td>
        <td id="LC3178" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Tick</span></td>
      </tr>
      <tr>
        <td id="L3179" class="blob-num js-line-number" data-line-number="3179"></td>
        <td id="LC3179" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3180" class="blob-num js-line-number" data-line-number="3180"></td>
        <td id="LC3180" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L3181" class="blob-num js-line-number" data-line-number="3181"></td>
        <td id="LC3181" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3182" class="blob-num js-line-number" data-line-number="3182"></td>
        <td id="LC3182" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L3183" class="blob-num js-line-number" data-line-number="3183"></td>
        <td id="LC3183" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3184" class="blob-num js-line-number" data-line-number="3184"></td>
        <td id="LC3184" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Call the begin method of an animation in a separate function so it can</span></td>
      </tr>
      <tr>
        <td id="L3185" class="blob-num js-line-number" data-line-number="3185"></td>
        <td id="LC3185" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * benefit from JIT compiling while still having a try/catch block.</span></td>
      </tr>
      <tr>
        <td id="L3186" class="blob-num js-line-number" data-line-number="3186"></td>
        <td id="LC3186" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3187" class="blob-num js-line-number" data-line-number="3187"></td>
        <td id="LC3187" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">callBegin</span>(<span class="pl-smi">activeCall</span>) {</td>
      </tr>
      <tr>
        <td id="L3188" class="blob-num js-line-number" data-line-number="3188"></td>
        <td id="LC3188" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L3189" class="blob-num js-line-number" data-line-number="3189"></td>
        <td id="LC3189" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> elements <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-c1">elements</span>;</td>
      </tr>
      <tr>
        <td id="L3190" class="blob-num js-line-number" data-line-number="3190"></td>
        <td id="LC3190" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">activeCall</span>.<span class="pl-c1">options</span>.<span class="pl-smi">begin</span>.<span class="pl-c1">call</span>(elements, elements, activeCall);</td>
      </tr>
      <tr>
        <td id="L3191" class="blob-num js-line-number" data-line-number="3191"></td>
        <td id="LC3191" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span> (error) {</td>
      </tr>
      <tr>
        <td id="L3192" class="blob-num js-line-number" data-line-number="3192"></td>
        <td id="LC3192" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3193" class="blob-num js-line-number" data-line-number="3193"></td>
        <td id="LC3193" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> error;</td>
      </tr>
      <tr>
        <td id="L3194" class="blob-num js-line-number" data-line-number="3194"></td>
        <td id="LC3194" class="blob-code blob-code-inner js-file-line">            }, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3195" class="blob-num js-line-number" data-line-number="3195"></td>
        <td id="LC3195" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3196" class="blob-num js-line-number" data-line-number="3196"></td>
        <td id="LC3196" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3197" class="blob-num js-line-number" data-line-number="3197"></td>
        <td id="LC3197" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">callBegin</span> <span class="pl-k">=</span> callBegin;</td>
      </tr>
      <tr>
        <td id="L3198" class="blob-num js-line-number" data-line-number="3198"></td>
        <td id="LC3198" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3199" class="blob-num js-line-number" data-line-number="3199"></td>
        <td id="LC3199" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Call the progress method of an animation in a separate function so it can</span></td>
      </tr>
      <tr>
        <td id="L3200" class="blob-num js-line-number" data-line-number="3200"></td>
        <td id="LC3200" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * benefit from JIT compiling while still having a try/catch block.</span></td>
      </tr>
      <tr>
        <td id="L3201" class="blob-num js-line-number" data-line-number="3201"></td>
        <td id="LC3201" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">callProgress</span>(<span class="pl-smi">activeCall</span>, <span class="pl-smi">timeCurrent</span>) {</td>
      </tr>
      <tr>
        <td id="L3202" class="blob-num js-line-number" data-line-number="3202"></td>
        <td id="LC3202" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L3203" class="blob-num js-line-number" data-line-number="3203"></td>
        <td id="LC3203" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> elements <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-c1">elements</span>, percentComplete <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">percentComplete</span>, options <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-c1">options</span>, tweenValue <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">tween</span>;</td>
      </tr>
      <tr>
        <td id="L3204" class="blob-num js-line-number" data-line-number="3204"></td>
        <td id="LC3204" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">activeCall</span>.<span class="pl-c1">options</span>.<span class="pl-smi">progress</span>.<span class="pl-c1">call</span>(elements, elements, percentComplete, <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">+</span> (<span class="pl-smi">activeCall</span>.<span class="pl-smi">duration</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">duration</span> <span class="pl-k">:</span> <span class="pl-smi">options</span>.<span class="pl-smi">duration</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">options</span>.<span class="pl-smi">duration</span> <span class="pl-k">:</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">duration</span>) <span class="pl-k">-</span> timeCurrent), tweenValue <span class="pl-k">!==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> tweenValue <span class="pl-k">:</span> <span class="pl-c1">String</span>(percentComplete <span class="pl-k">*</span> <span class="pl-c1">100</span>), activeCall);</td>
      </tr>
      <tr>
        <td id="L3205" class="blob-num js-line-number" data-line-number="3205"></td>
        <td id="LC3205" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span> (error) {</td>
      </tr>
      <tr>
        <td id="L3206" class="blob-num js-line-number" data-line-number="3206"></td>
        <td id="LC3206" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3207" class="blob-num js-line-number" data-line-number="3207"></td>
        <td id="LC3207" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">throw</span> error;</td>
      </tr>
      <tr>
        <td id="L3208" class="blob-num js-line-number" data-line-number="3208"></td>
        <td id="LC3208" class="blob-code blob-code-inner js-file-line">            }, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3209" class="blob-num js-line-number" data-line-number="3209"></td>
        <td id="LC3209" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3210" class="blob-num js-line-number" data-line-number="3210"></td>
        <td id="LC3210" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3211" class="blob-num js-line-number" data-line-number="3211"></td>
        <td id="LC3211" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> firstProgress, firstComplete;</td>
      </tr>
      <tr>
        <td id="L3212" class="blob-num js-line-number" data-line-number="3212"></td>
        <td id="LC3212" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">asyncCallbacks</span>() {</td>
      </tr>
      <tr>
        <td id="L3213" class="blob-num js-line-number" data-line-number="3213"></td>
        <td id="LC3213" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> activeCall, nextCall;</td>
      </tr>
      <tr>
        <td id="L3214" class="blob-num js-line-number" data-line-number="3214"></td>
        <td id="LC3214" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Callbacks and complete that might read the DOM again.</span></td>
      </tr>
      <tr>
        <td id="L3215" class="blob-num js-line-number" data-line-number="3215"></td>
        <td id="LC3215" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Progress callback</span></td>
      </tr>
      <tr>
        <td id="L3216" class="blob-num js-line-number" data-line-number="3216"></td>
        <td id="LC3216" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (activeCall <span class="pl-k">=</span> firstProgress; activeCall; activeCall <span class="pl-k">=</span> nextCall) {</td>
      </tr>
      <tr>
        <td id="L3217" class="blob-num js-line-number" data-line-number="3217"></td>
        <td id="LC3217" class="blob-code blob-code-inner js-file-line">            nextCall <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_nextProgress</span>;</td>
      </tr>
      <tr>
        <td id="L3218" class="blob-num js-line-number" data-line-number="3218"></td>
        <td id="LC3218" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Pass to an external fn with a try/catch block for optimisation</span></td>
      </tr>
      <tr>
        <td id="L3219" class="blob-num js-line-number" data-line-number="3219"></td>
        <td id="LC3219" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">callProgress</span>(activeCall, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span>);</td>
      </tr>
      <tr>
        <td id="L3220" class="blob-num js-line-number" data-line-number="3220"></td>
        <td id="LC3220" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3221" class="blob-num js-line-number" data-line-number="3221"></td>
        <td id="LC3221" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Complete animations, including complete callback or looping</span></td>
      </tr>
      <tr>
        <td id="L3222" class="blob-num js-line-number" data-line-number="3222"></td>
        <td id="LC3222" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (activeCall <span class="pl-k">=</span> firstComplete; activeCall; activeCall <span class="pl-k">=</span> nextCall) {</td>
      </tr>
      <tr>
        <td id="L3223" class="blob-num js-line-number" data-line-number="3223"></td>
        <td id="LC3223" class="blob-code blob-code-inner js-file-line">            nextCall <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_nextComplete</span>;</td>
      </tr>
      <tr>
        <td id="L3224" class="blob-num js-line-number" data-line-number="3224"></td>
        <td id="LC3224" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> If this call has finished tweening, pass it to complete() to handle call cleanup. <span class="pl-c">*/</span></span>            <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">completeCall</span>(activeCall);</td>
      </tr>
      <tr>
        <td id="L3225" class="blob-num js-line-number" data-line-number="3225"></td>
        <td id="LC3225" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3226" class="blob-num js-line-number" data-line-number="3226"></td>
        <td id="LC3226" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3227" class="blob-num js-line-number" data-line-number="3227"></td>
        <td id="LC3227" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span>************</span></td>
      </tr>
      <tr>
        <td id="L3228" class="blob-num js-line-number" data-line-number="3228"></td>
        <td id="LC3228" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     Timing</span></td>
      </tr>
      <tr>
        <td id="L3229" class="blob-num js-line-number" data-line-number="3229"></td>
        <td id="LC3229" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *************<span class="pl-c">*/</span></span>    <span class="pl-k">var</span> <span class="pl-c1">FRAME_TIME</span> <span class="pl-k">=</span> <span class="pl-c1">1e3</span> <span class="pl-k">/</span> <span class="pl-c1">60</span>, </td>
      </tr>
      <tr>
        <td id="L3230" class="blob-num js-line-number" data-line-number="3230"></td>
        <td id="LC3230" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3231" class="blob-num js-line-number" data-line-number="3231"></td>
        <td id="LC3231" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    * Shim for window.performance in case it doesn&#39;t exist</span></td>
      </tr>
      <tr>
        <td id="L3232" class="blob-num js-line-number" data-line-number="3232"></td>
        <td id="LC3232" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3233" class="blob-num js-line-number" data-line-number="3233"></td>
        <td id="LC3233" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">performance</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3234" class="blob-num js-line-number" data-line-number="3234"></td>
        <td id="LC3234" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> perf <span class="pl-k">=</span> <span class="pl-c1">window</span>.<span class="pl-smi">performance</span> <span class="pl-k">||</span> {};</td>
      </tr>
      <tr>
        <td id="L3235" class="blob-num js-line-number" data-line-number="3235"></td>
        <td id="LC3235" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-smi">perf</span>.<span class="pl-smi">now</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3236" class="blob-num js-line-number" data-line-number="3236"></td>
        <td id="LC3236" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> nowOffset_1 <span class="pl-k">=</span> <span class="pl-smi">perf</span>.<span class="pl-smi">timing</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">perf</span>.<span class="pl-smi">timing</span>.<span class="pl-smi">navigationStart</span> <span class="pl-k">?</span> <span class="pl-smi">perf</span>.<span class="pl-smi">timing</span>.<span class="pl-smi">navigationStart</span> <span class="pl-k">:</span> <span class="pl-en">_now</span>();</td>
      </tr>
      <tr>
        <td id="L3237" class="blob-num js-line-number" data-line-number="3237"></td>
        <td id="LC3237" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">perf</span>.<span class="pl-en">now</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3238" class="blob-num js-line-number" data-line-number="3238"></td>
        <td id="LC3238" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-en">_now</span>() <span class="pl-k">-</span> nowOffset_1;</td>
      </tr>
      <tr>
        <td id="L3239" class="blob-num js-line-number" data-line-number="3239"></td>
        <td id="LC3239" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L3240" class="blob-num js-line-number" data-line-number="3240"></td>
        <td id="LC3240" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3241" class="blob-num js-line-number" data-line-number="3241"></td>
        <td id="LC3241" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> perf;</td>
      </tr>
      <tr>
        <td id="L3242" class="blob-num js-line-number" data-line-number="3242"></td>
        <td id="LC3242" class="blob-code blob-code-inner js-file-line">    }(), </td>
      </tr>
      <tr>
        <td id="L3243" class="blob-num js-line-number" data-line-number="3243"></td>
        <td id="LC3243" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3244" class="blob-num js-line-number" data-line-number="3244"></td>
        <td id="LC3244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Proxy function for when rAF is not available - try to be as accurate</span></td>
      </tr>
      <tr>
        <td id="L3245" class="blob-num js-line-number" data-line-number="3245"></td>
        <td id="LC3245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * as possible with the setTimeout calls, however they are far less</span></td>
      </tr>
      <tr>
        <td id="L3246" class="blob-num js-line-number" data-line-number="3246"></td>
        <td id="LC3246" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * accurate than rAF can be - so try not to use normally (unless the tab</span></td>
      </tr>
      <tr>
        <td id="L3247" class="blob-num js-line-number" data-line-number="3247"></td>
        <td id="LC3247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * is in the background).</span></td>
      </tr>
      <tr>
        <td id="L3248" class="blob-num js-line-number" data-line-number="3248"></td>
        <td id="LC3248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3249" class="blob-num js-line-number" data-line-number="3249"></td>
        <td id="LC3249" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">rAFProxy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L3250" class="blob-num js-line-number" data-line-number="3250"></td>
        <td id="LC3250" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rAFProxy<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-c1">FRAME_TIME</span> <span class="pl-k">-</span> (<span class="pl-c1">performance</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span>)), <span class="pl-c1">performance</span>.<span class="pl-en">now</span>(), <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span>, <span class="pl-c1">FRAME_TIME</span>);</td>
      </tr>
      <tr>
        <td id="L3251" class="blob-num js-line-number" data-line-number="3251"></td>
        <td id="LC3251" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3252" class="blob-num js-line-number" data-line-number="3252"></td>
        <td id="LC3252" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">callback</span>(<span class="pl-c1">performance</span>.<span class="pl-en">now</span>());</td>
      </tr>
      <tr>
        <td id="L3253" class="blob-num js-line-number" data-line-number="3253"></td>
        <td id="LC3253" class="blob-code blob-code-inner js-file-line">        }, <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-c1">FRAME_TIME</span> <span class="pl-k">-</span> (<span class="pl-c1">performance</span>.<span class="pl-en">now</span>() <span class="pl-k">-</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span>)));</td>
      </tr>
      <tr>
        <td id="L3254" class="blob-num js-line-number" data-line-number="3254"></td>
        <td id="LC3254" class="blob-code blob-code-inner js-file-line">    }, </td>
      </tr>
      <tr>
        <td id="L3255" class="blob-num js-line-number" data-line-number="3255"></td>
        <td id="LC3255" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> rAF shim. Gist: https://gist.github.com/julianshapiro/9497513 <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3256" class="blob-num js-line-number" data-line-number="3256"></td>
        <td id="LC3256" class="blob-code blob-code-inner js-file-line">    rAFShim <span class="pl-k">=</span> <span class="pl-c1">window</span>.<span class="pl-smi">requestAnimationFrame</span> <span class="pl-k">||</span> rAFProxy;</td>
      </tr>
      <tr>
        <td id="L3257" class="blob-num js-line-number" data-line-number="3257"></td>
        <td id="LC3257" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3258" class="blob-num js-line-number" data-line-number="3258"></td>
        <td id="LC3258" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The ticker function being used, either rAF, or a function that</span></td>
      </tr>
      <tr>
        <td id="L3259" class="blob-num js-line-number" data-line-number="3259"></td>
        <td id="LC3259" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * emulates it.</span></td>
      </tr>
      <tr>
        <td id="L3260" class="blob-num js-line-number" data-line-number="3260"></td>
        <td id="LC3260" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">var</span> ticker <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-smi">hidden</span> <span class="pl-k">?</span> rAFProxy <span class="pl-k">:</span> rAFShim;</td>
      </tr>
      <tr>
        <td id="L3261" class="blob-num js-line-number" data-line-number="3261"></td>
        <td id="LC3261" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3262" class="blob-num js-line-number" data-line-number="3262"></td>
        <td id="LC3262" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The time that the last animation frame ran at. Set from tick(), and used</span></td>
      </tr>
      <tr>
        <td id="L3263" class="blob-num js-line-number" data-line-number="3263"></td>
        <td id="LC3263" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * for missing rAF (ie, when not in focus etc).</span></td>
      </tr>
      <tr>
        <td id="L3264" class="blob-num js-line-number" data-line-number="3264"></td>
        <td id="LC3264" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3265" class="blob-num js-line-number" data-line-number="3265"></td>
        <td id="LC3265" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> Inactive browser tabs pause rAF, which results in all active animations immediately sprinting to their completion states when the tab refocuses.</span></td>
      </tr>
      <tr>
        <td id="L3266" class="blob-num js-line-number" data-line-number="3266"></td>
        <td id="LC3266" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     To get around this, we dynamically switch rAF to setTimeout (which the browser *doesn&#39;t* pause) when the tab loses focus. We skip this for mobile</span></td>
      </tr>
      <tr>
        <td id="L3267" class="blob-num js-line-number" data-line-number="3267"></td>
        <td id="LC3267" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     devices to avoid wasting battery power on inactive tabs. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3268" class="blob-num js-line-number" data-line-number="3268"></td>
        <td id="LC3268" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> Note: Tab focus detection doesn&#39;t work on older versions of IE, but that&#39;s okay since they don&#39;t support rAF to begin with. <span class="pl-c">*/</span></span>    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">isMobile</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">document</span>.<span class="pl-smi">hidden</span> <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L3269" class="blob-num js-line-number" data-line-number="3269"></td>
        <td id="LC3269" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">document</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>visibilitychange<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span> <span class="pl-en">updateTicker</span>(<span class="pl-c1">event</span>) {</td>
      </tr>
      <tr>
        <td id="L3270" class="blob-num js-line-number" data-line-number="3270"></td>
        <td id="LC3270" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> hidden <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-smi">hidden</span>;</td>
      </tr>
      <tr>
        <td id="L3271" class="blob-num js-line-number" data-line-number="3271"></td>
        <td id="LC3271" class="blob-code blob-code-inner js-file-line">            ticker <span class="pl-k">=</span> hidden <span class="pl-k">?</span> rAFProxy <span class="pl-k">:</span> rAFShim;</td>
      </tr>
      <tr>
        <td id="L3272" class="blob-num js-line-number" data-line-number="3272"></td>
        <td id="LC3272" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">event</span>) {</td>
      </tr>
      <tr>
        <td id="L3273" class="blob-num js-line-number" data-line-number="3273"></td>
        <td id="LC3273" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">setTimeout</span>(tick, <span class="pl-c1">2e3</span>);</td>
      </tr>
      <tr>
        <td id="L3274" class="blob-num js-line-number" data-line-number="3274"></td>
        <td id="LC3274" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3275" class="blob-num js-line-number" data-line-number="3275"></td>
        <td id="LC3275" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">tick</span>();</td>
      </tr>
      <tr>
        <td id="L3276" class="blob-num js-line-number" data-line-number="3276"></td>
        <td id="LC3276" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3277" class="blob-num js-line-number" data-line-number="3277"></td>
        <td id="LC3277" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3278" class="blob-num js-line-number" data-line-number="3278"></td>
        <td id="LC3278" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ticking;</td>
      </tr>
      <tr>
        <td id="L3279" class="blob-num js-line-number" data-line-number="3279"></td>
        <td id="LC3279" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3280" class="blob-num js-line-number" data-line-number="3280"></td>
        <td id="LC3280" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Called on every tick, preferably through rAF. This is reponsible for</span></td>
      </tr>
      <tr>
        <td id="L3281" class="blob-num js-line-number" data-line-number="3281"></td>
        <td id="LC3281" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * initialising any new animations, then starting any that need starting.</span></td>
      </tr>
      <tr>
        <td id="L3282" class="blob-num js-line-number" data-line-number="3282"></td>
        <td id="LC3282" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Finally it will expand any tweens and set the properties relating to</span></td>
      </tr>
      <tr>
        <td id="L3283" class="blob-num js-line-number" data-line-number="3283"></td>
        <td id="LC3283" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * them. If there are any callbacks relating to the animations then they</span></td>
      </tr>
      <tr>
        <td id="L3284" class="blob-num js-line-number" data-line-number="3284"></td>
        <td id="LC3284" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * will attempt to call at the end (with the exception of &quot;begin&quot;).</span></td>
      </tr>
      <tr>
        <td id="L3285" class="blob-num js-line-number" data-line-number="3285"></td>
        <td id="LC3285" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">tick</span>(<span class="pl-smi">timestamp</span>) {</td>
      </tr>
      <tr>
        <td id="L3286" class="blob-num js-line-number" data-line-number="3286"></td>
        <td id="LC3286" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (ticking) {</td>
      </tr>
      <tr>
        <td id="L3287" class="blob-num js-line-number" data-line-number="3287"></td>
        <td id="LC3287" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Should never happen - but if we&#39;ve swapped back from hidden to</span></td>
      </tr>
      <tr>
        <td id="L3288" class="blob-num js-line-number" data-line-number="3288"></td>
        <td id="LC3288" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> visibile then we want to make sure</span></td>
      </tr>
      <tr>
        <td id="L3289" class="blob-num js-line-number" data-line-number="3289"></td>
        <td id="LC3289" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3290" class="blob-num js-line-number" data-line-number="3290"></td>
        <td id="LC3290" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3291" class="blob-num js-line-number" data-line-number="3291"></td>
        <td id="LC3291" class="blob-code blob-code-inner js-file-line">        ticking <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3292" class="blob-num js-line-number" data-line-number="3292"></td>
        <td id="LC3292" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.</span></td>
      </tr>
      <tr>
        <td id="L3293" class="blob-num js-line-number" data-line-number="3293"></td>
        <td id="LC3293" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         We leverage this metadata to fully ignore the first tick pass since RAF&#39;s initial pass is fired whenever</span></td>
      </tr>
      <tr>
        <td id="L3294" class="blob-num js-line-number" data-line-number="3294"></td>
        <td id="LC3294" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         the browser&#39;s next tick sync time occurs, which results in the first elements subjected to Velocity</span></td>
      </tr>
      <tr>
        <td id="L3295" class="blob-num js-line-number" data-line-number="3295"></td>
        <td id="LC3295" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore</span></td>
      </tr>
      <tr>
        <td id="L3296" class="blob-num js-line-number" data-line-number="3296"></td>
        <td id="LC3296" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated</span></td>
      </tr>
      <tr>
        <td id="L3297" class="blob-num js-line-number" data-line-number="3297"></td>
        <td id="LC3297" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. <span class="pl-c">*/</span></span>        <span class="pl-k">if</span> (timestamp) {</td>
      </tr>
      <tr>
        <td id="L3298" class="blob-num js-line-number" data-line-number="3298"></td>
        <td id="LC3298" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> We normally use RAF&#39;s high resolution timestamp but as it can be significantly offset when the browser is</span></td>
      </tr>
      <tr>
        <td id="L3299" class="blob-num js-line-number" data-line-number="3299"></td>
        <td id="LC3299" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             under high stress we give the option for choppiness over allowing the browser to drop huge chunks of frames.</span></td>
      </tr>
      <tr>
        <td id="L3300" class="blob-num js-line-number" data-line-number="3300"></td>
        <td id="LC3300" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             We use performance.now() and shim it if it doesn&#39;t exist for when the tab is hidden. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3301" class="blob-num js-line-number" data-line-number="3301"></td>
        <td id="LC3301" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> timeCurrent <span class="pl-k">=</span> timestamp <span class="pl-k">&amp;&amp;</span> timestamp <span class="pl-k">!==</span> <span class="pl-c1">true</span> <span class="pl-k">?</span> timestamp <span class="pl-k">:</span> <span class="pl-c1">performance</span>.<span class="pl-en">now</span>(), deltaTime <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span> <span class="pl-k">?</span> timeCurrent <span class="pl-k">-</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span> <span class="pl-k">:</span> <span class="pl-c1">FRAME_TIME</span>, defaultSpeed <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">speed</span>, defaultEasing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">easing</span>, defaultDuration <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">duration</span>;</td>
      </tr>
      <tr>
        <td id="L3302" class="blob-num js-line-number" data-line-number="3302"></td>
        <td id="LC3302" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> activeCall <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>, nextCall <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>, lastProgress <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>, lastComplete <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3303" class="blob-num js-line-number" data-line-number="3303"></td>
        <td id="LC3303" class="blob-code blob-code-inner js-file-line">            firstProgress <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3304" class="blob-num js-line-number" data-line-number="3304"></td>
        <td id="LC3304" class="blob-code blob-code-inner js-file-line">            firstComplete <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3305" class="blob-num js-line-number" data-line-number="3305"></td>
        <td id="LC3305" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (deltaTime <span class="pl-k">&gt;=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">minFrameTime</span> <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span>) {</td>
      </tr>
      <tr>
        <td id="L3306" class="blob-num js-line-number" data-line-number="3306"></td>
        <td id="LC3306" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span> <span class="pl-k">=</span> timeCurrent;</td>
      </tr>
      <tr>
        <td id="L3307" class="blob-num js-line-number" data-line-number="3307"></td>
        <td id="LC3307" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/**</span>******************</span></td>
      </tr>
      <tr>
        <td id="L3308" class="blob-num js-line-number" data-line-number="3308"></td>
        <td id="LC3308" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 Call Iteration</span></td>
      </tr>
      <tr>
        <td id="L3309" class="blob-num js-line-number" data-line-number="3309"></td>
        <td id="LC3309" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 *******************<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3310" class="blob-num js-line-number" data-line-number="3310"></td>
        <td id="LC3310" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Expand any tweens that might need it.</span></td>
      </tr>
      <tr>
        <td id="L3311" class="blob-num js-line-number" data-line-number="3311"></td>
        <td id="LC3311" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">while</span> (activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>) {</td>
      </tr>
      <tr>
        <td id="L3312" class="blob-num js-line-number" data-line-number="3312"></td>
        <td id="LC3312" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">validateTweens</span>(activeCall);</td>
      </tr>
      <tr>
        <td id="L3313" class="blob-num js-line-number" data-line-number="3313"></td>
        <td id="LC3313" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3314" class="blob-num js-line-number" data-line-number="3314"></td>
        <td id="LC3314" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Iterate through each active call.</span></td>
      </tr>
      <tr>
        <td id="L3315" class="blob-num js-line-number" data-line-number="3315"></td>
        <td id="LC3315" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">for</span> (activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span>; activeCall <span class="pl-k">&amp;&amp;</span> activeCall <span class="pl-k">!==</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>; activeCall <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_next</span>) {</td>
      </tr>
      <tr>
        <td id="L3316" class="blob-num js-line-number" data-line-number="3316"></td>
        <td id="LC3316" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> element <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>;</td>
      </tr>
      <tr>
        <td id="L3317" class="blob-num js-line-number" data-line-number="3317"></td>
        <td id="LC3317" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> data <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3318" class="blob-num js-line-number" data-line-number="3318"></td>
        <td id="LC3318" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Check to see if this element has been deleted midway</span></td>
      </tr>
      <tr>
        <td id="L3319" class="blob-num js-line-number" data-line-number="3319"></td>
        <td id="LC3319" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> through the animation. If it&#39;s gone then end this</span></td>
      </tr>
      <tr>
        <td id="L3320" class="blob-num js-line-number" data-line-number="3320"></td>
        <td id="LC3320" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> animation.</span></td>
      </tr>
      <tr>
        <td id="L3321" class="blob-num js-line-number" data-line-number="3321"></td>
        <td id="LC3321" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">element</span>.<span class="pl-c1">parentNode</span> <span class="pl-k">||</span> <span class="pl-k">!</span>(data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element))) {</td>
      </tr>
      <tr>
        <td id="L3322" class="blob-num js-line-number" data-line-number="3322"></td>
        <td id="LC3322" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> TODO: Remove safely - decrease count, delete data, remove from arrays</span></td>
      </tr>
      <tr>
        <td id="L3323" class="blob-num js-line-number" data-line-number="3323"></td>
        <td id="LC3323" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">freeAnimationCall</span>(activeCall);</td>
      </tr>
      <tr>
        <td id="L3324" class="blob-num js-line-number" data-line-number="3324"></td>
        <td id="LC3324" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3325" class="blob-num js-line-number" data-line-number="3325"></td>
        <td id="LC3325" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3326" class="blob-num js-line-number" data-line-number="3326"></td>
        <td id="LC3326" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Don&#39;t bother getting until we can use these.</span></td>
      </tr>
      <tr>
        <td id="L3327" class="blob-num js-line-number" data-line-number="3327"></td>
        <td id="LC3327" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">var</span> options <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-c1">options</span>, flags <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_flags</span>;</td>
      </tr>
      <tr>
        <td id="L3328" class="blob-num js-line-number" data-line-number="3328"></td>
        <td id="LC3328" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> timeStart <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span>;</td>
      </tr>
      <tr>
        <td id="L3329" class="blob-num js-line-number" data-line-number="3329"></td>
        <td id="LC3329" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> If this is the first time that this call has been</span></td>
      </tr>
      <tr>
        <td id="L3330" class="blob-num js-line-number" data-line-number="3330"></td>
        <td id="LC3330" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> processed by tick() then we assign timeStart now so that</span></td>
      </tr>
      <tr>
        <td id="L3331" class="blob-num js-line-number" data-line-number="3331"></td>
        <td id="LC3331" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> it&#39;s value is as close to the real animation start time</span></td>
      </tr>
      <tr>
        <td id="L3332" class="blob-num js-line-number" data-line-number="3332"></td>
        <td id="LC3332" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> as possible.</span></td>
      </tr>
      <tr>
        <td id="L3333" class="blob-num js-line-number" data-line-number="3333"></td>
        <td id="LC3333" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">if</span> (<span class="pl-k">!</span>timeStart) {</td>
      </tr>
      <tr>
        <td id="L3334" class="blob-num js-line-number" data-line-number="3334"></td>
        <td id="LC3334" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> queue_1 <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">queue</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">queue</span> <span class="pl-k">:</span> <span class="pl-smi">options</span>.<span class="pl-smi">queue</span>;</td>
      </tr>
      <tr>
        <td id="L3335" class="blob-num js-line-number" data-line-number="3335"></td>
        <td id="LC3335" class="blob-code blob-code-inner js-file-line">                        timeStart <span class="pl-k">=</span> timeCurrent <span class="pl-k">-</span> deltaTime;</td>
      </tr>
      <tr>
        <td id="L3336" class="blob-num js-line-number" data-line-number="3336"></td>
        <td id="LC3336" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (queue_1 <span class="pl-k">!==</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L3337" class="blob-num js-line-number" data-line-number="3337"></td>
        <td id="LC3337" class="blob-code blob-code-inner js-file-line">                            timeStart <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(timeStart, <span class="pl-smi">data</span>.<span class="pl-smi">lastFinishList</span>[queue_1] <span class="pl-k">||</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3338" class="blob-num js-line-number" data-line-number="3338"></td>
        <td id="LC3338" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3339" class="blob-num js-line-number" data-line-number="3339"></td>
        <td id="LC3339" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">=</span> timeStart;</td>
      </tr>
      <tr>
        <td id="L3340" class="blob-num js-line-number" data-line-number="3340"></td>
        <td id="LC3340" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3341" class="blob-num js-line-number" data-line-number="3341"></td>
        <td id="LC3341" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> If this animation is paused then skip processing unless</span></td>
      </tr>
      <tr>
        <td id="L3342" class="blob-num js-line-number" data-line-number="3342"></td>
        <td id="LC3342" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> it has been set to resume.</span></td>
      </tr>
      <tr>
        <td id="L3343" class="blob-num js-line-number" data-line-number="3343"></td>
        <td id="LC3343" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">if</span> (flags <span class="pl-k">&amp;</span> <span class="pl-c1">16</span> <span class="pl-c"><span class="pl-c">/*</span> PAUSED <span class="pl-c">*/</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3344" class="blob-num js-line-number" data-line-number="3344"></td>
        <td id="LC3344" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> Update the time start to accomodate the paused</span></td>
      </tr>
      <tr>
        <td id="L3345" class="blob-num js-line-number" data-line-number="3345"></td>
        <td id="LC3345" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> completion amount.</span></td>
      </tr>
      <tr>
        <td id="L3346" class="blob-num js-line-number" data-line-number="3346"></td>
        <td id="LC3346" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">+=</span> deltaTime;</td>
      </tr>
      <tr>
        <td id="L3347" class="blob-num js-line-number" data-line-number="3347"></td>
        <td id="LC3347" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3348" class="blob-num js-line-number" data-line-number="3348"></td>
        <td id="LC3348" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3349" class="blob-num js-line-number" data-line-number="3349"></td>
        <td id="LC3349" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Check if this animation is ready - if it&#39;s synced then it</span></td>
      </tr>
      <tr>
        <td id="L3350" class="blob-num js-line-number" data-line-number="3350"></td>
        <td id="LC3350" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> needs to wait for all other animations in the sync</span></td>
      </tr>
      <tr>
        <td id="L3351" class="blob-num js-line-number" data-line-number="3351"></td>
        <td id="LC3351" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">if</span> (<span class="pl-k">!</span>(flags <span class="pl-k">&amp;</span> <span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span> READY <span class="pl-c">*/</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L3352" class="blob-num js-line-number" data-line-number="3352"></td>
        <td id="LC3352" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">activeCall</span>.<span class="pl-smi">_flags</span> <span class="pl-k">|=</span> <span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span> READY <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L3353" class="blob-num js-line-number" data-line-number="3353"></td>
        <td id="LC3353" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">options</span>.<span class="pl-smi">_ready</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3354" class="blob-num js-line-number" data-line-number="3354"></td>
        <td id="LC3354" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3355" class="blob-num js-line-number" data-line-number="3355"></td>
        <td id="LC3355" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3356" class="blob-num js-line-number" data-line-number="3356"></td>
        <td id="LC3356" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Need to split the loop, as ready sync animations must all get</span></td>
      </tr>
      <tr>
        <td id="L3357" class="blob-num js-line-number" data-line-number="3357"></td>
        <td id="LC3357" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> the same start time.</span></td>
      </tr>
      <tr>
        <td id="L3358" class="blob-num js-line-number" data-line-number="3358"></td>
        <td id="LC3358" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">for</span> (activeCall <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span>; activeCall <span class="pl-k">&amp;&amp;</span> activeCall <span class="pl-k">!==</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span>; activeCall <span class="pl-k">=</span> nextCall) {</td>
      </tr>
      <tr>
        <td id="L3359" class="blob-num js-line-number" data-line-number="3359"></td>
        <td id="LC3359" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> flags <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_flags</span>;</td>
      </tr>
      <tr>
        <td id="L3360" class="blob-num js-line-number" data-line-number="3360"></td>
        <td id="LC3360" class="blob-code blob-code-inner js-file-line">                    nextCall <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_next</span>;</td>
      </tr>
      <tr>
        <td id="L3361" class="blob-num js-line-number" data-line-number="3361"></td>
        <td id="LC3361" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-k">!</span>(flags <span class="pl-k">&amp;</span> <span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">/*</span> READY <span class="pl-c">*/</span></span>) <span class="pl-k">||</span> flags <span class="pl-k">&amp;</span> <span class="pl-c1">16</span> <span class="pl-c"><span class="pl-c">/*</span> PAUSED <span class="pl-c">*/</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3362" class="blob-num js-line-number" data-line-number="3362"></td>
        <td id="LC3362" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3363" class="blob-num js-line-number" data-line-number="3363"></td>
        <td id="LC3363" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3364" class="blob-num js-line-number" data-line-number="3364"></td>
        <td id="LC3364" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> options <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-c1">options</span>;</td>
      </tr>
      <tr>
        <td id="L3365" class="blob-num js-line-number" data-line-number="3365"></td>
        <td id="LC3365" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (flags <span class="pl-k">&amp;</span> <span class="pl-c1">32</span> <span class="pl-c"><span class="pl-c">/*</span> SYNC <span class="pl-c">*/</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">options</span>.<span class="pl-smi">_ready</span> <span class="pl-k">&lt;</span> <span class="pl-smi">options</span>.<span class="pl-smi">_total</span>) {</td>
      </tr>
      <tr>
        <td id="L3366" class="blob-num js-line-number" data-line-number="3366"></td>
        <td id="LC3366" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">+=</span> deltaTime;</td>
      </tr>
      <tr>
        <td id="L3367" class="blob-num js-line-number" data-line-number="3367"></td>
        <td id="LC3367" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3368" class="blob-num js-line-number" data-line-number="3368"></td>
        <td id="LC3368" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3369" class="blob-num js-line-number" data-line-number="3369"></td>
        <td id="LC3369" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> speed <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">speed</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">speed</span> <span class="pl-k">:</span> <span class="pl-smi">options</span>.<span class="pl-smi">speed</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">options</span>.<span class="pl-smi">speed</span> <span class="pl-k">:</span> defaultSpeed;</td>
      </tr>
      <tr>
        <td id="L3370" class="blob-num js-line-number" data-line-number="3370"></td>
        <td id="LC3370" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> timeStart <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span>;</td>
      </tr>
      <tr>
        <td id="L3371" class="blob-num js-line-number" data-line-number="3371"></td>
        <td id="LC3371" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Don&#39;t bother getting until we can use these.</span></td>
      </tr>
      <tr>
        <td id="L3372" class="blob-num js-line-number" data-line-number="3372"></td>
        <td id="LC3372" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">if</span> (<span class="pl-k">!</span>(flags <span class="pl-k">&amp;</span> <span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span> STARTED <span class="pl-c">*/</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L3373" class="blob-num js-line-number" data-line-number="3373"></td>
        <td id="LC3373" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> delay <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">delay</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">delay</span> <span class="pl-k">:</span> <span class="pl-smi">options</span>.<span class="pl-smi">delay</span>;</td>
      </tr>
      <tr>
        <td id="L3374" class="blob-num js-line-number" data-line-number="3374"></td>
        <td id="LC3374" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> Make sure anything we&#39;ve delayed doesn&#39;t start</span></td>
      </tr>
      <tr>
        <td id="L3375" class="blob-num js-line-number" data-line-number="3375"></td>
        <td id="LC3375" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> animating yet, there might still be an active delay</span></td>
      </tr>
      <tr>
        <td id="L3376" class="blob-num js-line-number" data-line-number="3376"></td>
        <td id="LC3376" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> after something has been un-paused</span></td>
      </tr>
      <tr>
        <td id="L3377" class="blob-num js-line-number" data-line-number="3377"></td>
        <td id="LC3377" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-k">if</span> (delay) {</td>
      </tr>
      <tr>
        <td id="L3378" class="blob-num js-line-number" data-line-number="3378"></td>
        <td id="LC3378" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (timeStart <span class="pl-k">+</span> delay <span class="pl-k">/</span> speed <span class="pl-k">&gt;</span> timeCurrent) {</td>
      </tr>
      <tr>
        <td id="L3379" class="blob-num js-line-number" data-line-number="3379"></td>
        <td id="LC3379" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3380" class="blob-num js-line-number" data-line-number="3380"></td>
        <td id="LC3380" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L3381" class="blob-num js-line-number" data-line-number="3381"></td>
        <td id="LC3381" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">=</span> timeStart <span class="pl-k">+=</span> delay <span class="pl-k">/</span> (delay <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> speed <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3382" class="blob-num js-line-number" data-line-number="3382"></td>
        <td id="LC3382" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3383" class="blob-num js-line-number" data-line-number="3383"></td>
        <td id="LC3383" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">activeCall</span>.<span class="pl-smi">_flags</span> <span class="pl-k">|=</span> <span class="pl-c1">4</span> <span class="pl-c"><span class="pl-c">/*</span> STARTED <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L3384" class="blob-num js-line-number" data-line-number="3384"></td>
        <td id="LC3384" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> The begin callback is fired once per call, not once</span></td>
      </tr>
      <tr>
        <td id="L3385" class="blob-num js-line-number" data-line-number="3385"></td>
        <td id="LC3385" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> per element, and is passed the full raw DOM element</span></td>
      </tr>
      <tr>
        <td id="L3386" class="blob-num js-line-number" data-line-number="3386"></td>
        <td id="LC3386" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> set as both its context and its first argument.</span></td>
      </tr>
      <tr>
        <td id="L3387" class="blob-num js-line-number" data-line-number="3387"></td>
        <td id="LC3387" class="blob-code blob-code-inner js-file-line">                                                <span class="pl-k">if</span> (<span class="pl-smi">options</span>.<span class="pl-smi">_started</span><span class="pl-k">++</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3388" class="blob-num js-line-number" data-line-number="3388"></td>
        <td id="LC3388" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">options</span>.<span class="pl-smi">_first</span> <span class="pl-k">=</span> activeCall;</td>
      </tr>
      <tr>
        <td id="L3389" class="blob-num js-line-number" data-line-number="3389"></td>
        <td id="LC3389" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-smi">options</span>.<span class="pl-smi">begin</span>) {</td>
      </tr>
      <tr>
        <td id="L3390" class="blob-num js-line-number" data-line-number="3390"></td>
        <td id="LC3390" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> Pass to an external fn with a try/catch block for optimisation</span></td>
      </tr>
      <tr>
        <td id="L3391" class="blob-num js-line-number" data-line-number="3391"></td>
        <td id="LC3391" class="blob-code blob-code-inner js-file-line">                                <span class="pl-en">callBegin</span>(activeCall);</td>
      </tr>
      <tr>
        <td id="L3392" class="blob-num js-line-number" data-line-number="3392"></td>
        <td id="LC3392" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> Only called once, even if reversed or repeated</span></td>
      </tr>
      <tr>
        <td id="L3393" class="blob-num js-line-number" data-line-number="3393"></td>
        <td id="LC3393" class="blob-code blob-code-inner js-file-line">                                                                <span class="pl-smi">options</span>.<span class="pl-smi">begin</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L3394" class="blob-num js-line-number" data-line-number="3394"></td>
        <td id="LC3394" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L3395" class="blob-num js-line-number" data-line-number="3395"></td>
        <td id="LC3395" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3396" class="blob-num js-line-number" data-line-number="3396"></td>
        <td id="LC3396" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3397" class="blob-num js-line-number" data-line-number="3397"></td>
        <td id="LC3397" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (speed <span class="pl-k">!==</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3398" class="blob-num js-line-number" data-line-number="3398"></td>
        <td id="LC3398" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> On the first frame we may have a shorter delta</span></td>
      </tr>
      <tr>
        <td id="L3399" class="blob-num js-line-number" data-line-number="3399"></td>
        <td id="LC3399" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> delta <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(deltaTime, timeCurrent <span class="pl-k">-</span> timeStart);</td>
      </tr>
      <tr>
        <td id="L3400" class="blob-num js-line-number" data-line-number="3400"></td>
        <td id="LC3400" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">activeCall</span>.<span class="pl-smi">timeStart</span> <span class="pl-k">=</span> timeStart <span class="pl-k">+=</span> delta <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> speed);</td>
      </tr>
      <tr>
        <td id="L3401" class="blob-num js-line-number" data-line-number="3401"></td>
        <td id="LC3401" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3402" class="blob-num js-line-number" data-line-number="3402"></td>
        <td id="LC3402" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-smi">options</span>.<span class="pl-smi">_first</span> <span class="pl-k">===</span> activeCall <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">options</span>.<span class="pl-smi">progress</span>) {</td>
      </tr>
      <tr>
        <td id="L3403" class="blob-num js-line-number" data-line-number="3403"></td>
        <td id="LC3403" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">activeCall</span>.<span class="pl-smi">_nextProgress</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L3404" class="blob-num js-line-number" data-line-number="3404"></td>
        <td id="LC3404" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (lastProgress) {</td>
      </tr>
      <tr>
        <td id="L3405" class="blob-num js-line-number" data-line-number="3405"></td>
        <td id="LC3405" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">lastProgress</span>.<span class="pl-smi">_nextProgress</span> <span class="pl-k">=</span> lastProgress <span class="pl-k">=</span> activeCall;</td>
      </tr>
      <tr>
        <td id="L3406" class="blob-num js-line-number" data-line-number="3406"></td>
        <td id="LC3406" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3407" class="blob-num js-line-number" data-line-number="3407"></td>
        <td id="LC3407" class="blob-code blob-code-inner js-file-line">                            firstProgress <span class="pl-k">=</span> lastProgress <span class="pl-k">=</span> activeCall;</td>
      </tr>
      <tr>
        <td id="L3408" class="blob-num js-line-number" data-line-number="3408"></td>
        <td id="LC3408" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3409" class="blob-num js-line-number" data-line-number="3409"></td>
        <td id="LC3409" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3410" class="blob-num js-line-number" data-line-number="3410"></td>
        <td id="LC3410" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> activeEasing <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">easing</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">easing</span> <span class="pl-k">:</span> <span class="pl-smi">options</span>.<span class="pl-smi">easing</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">options</span>.<span class="pl-smi">easing</span> <span class="pl-k">:</span> defaultEasing, millisecondsEllapsed <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">ellapsedTime</span> <span class="pl-k">=</span> timeCurrent <span class="pl-k">-</span> timeStart, duration <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">duration</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">duration</span> <span class="pl-k">:</span> <span class="pl-smi">options</span>.<span class="pl-smi">duration</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-smi">options</span>.<span class="pl-smi">duration</span> <span class="pl-k">:</span> defaultDuration, percentComplete <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">percentComplete</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">mock</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(millisecondsEllapsed <span class="pl-k">/</span> duration, <span class="pl-c1">1</span>), tweens <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">tweens</span>, reverse <span class="pl-k">=</span> flags <span class="pl-k">&amp;</span> <span class="pl-c1">64</span> <span class="pl-c"><span class="pl-c">/*</span> REVERSE <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L3411" class="blob-num js-line-number" data-line-number="3411"></td>
        <td id="LC3411" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (percentComplete <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3412" class="blob-num js-line-number" data-line-number="3412"></td>
        <td id="LC3412" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">activeCall</span>.<span class="pl-smi">_nextComplete</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L3413" class="blob-num js-line-number" data-line-number="3413"></td>
        <td id="LC3413" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (lastComplete) {</td>
      </tr>
      <tr>
        <td id="L3414" class="blob-num js-line-number" data-line-number="3414"></td>
        <td id="LC3414" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">lastComplete</span>.<span class="pl-smi">_nextComplete</span> <span class="pl-k">=</span> lastComplete <span class="pl-k">=</span> activeCall;</td>
      </tr>
      <tr>
        <td id="L3415" class="blob-num js-line-number" data-line-number="3415"></td>
        <td id="LC3415" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3416" class="blob-num js-line-number" data-line-number="3416"></td>
        <td id="LC3416" class="blob-code blob-code-inner js-file-line">                            firstComplete <span class="pl-k">=</span> lastComplete <span class="pl-k">=</span> activeCall;</td>
      </tr>
      <tr>
        <td id="L3417" class="blob-num js-line-number" data-line-number="3417"></td>
        <td id="LC3417" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3418" class="blob-num js-line-number" data-line-number="3418"></td>
        <td id="LC3418" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3419" class="blob-num js-line-number" data-line-number="3419"></td>
        <td id="LC3419" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> (<span class="pl-k">var</span> property <span class="pl-k">in</span> tweens) {</td>
      </tr>
      <tr>
        <td id="L3420" class="blob-num js-line-number" data-line-number="3420"></td>
        <td id="LC3420" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> For every element, iterate through each property.</span></td>
      </tr>
      <tr>
        <td id="L3421" class="blob-num js-line-number" data-line-number="3421"></td>
        <td id="LC3421" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> tween_3 <span class="pl-k">=</span> tweens[property], easing <span class="pl-k">=</span> <span class="pl-smi">tween_3</span>.<span class="pl-smi">easing</span> <span class="pl-k">||</span> activeEasing, pattern <span class="pl-k">=</span> <span class="pl-smi">tween_3</span>.<span class="pl-smi">pattern</span>;</td>
      </tr>
      <tr>
        <td id="L3422" class="blob-num js-line-number" data-line-number="3422"></td>
        <td id="LC3422" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> currentValue <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, i <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3423" class="blob-num js-line-number" data-line-number="3423"></td>
        <td id="LC3423" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (pattern) {</td>
      </tr>
      <tr>
        <td id="L3424" class="blob-num js-line-number" data-line-number="3424"></td>
        <td id="LC3424" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">for</span> (;i <span class="pl-k">&lt;</span> <span class="pl-smi">pattern</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3425" class="blob-num js-line-number" data-line-number="3425"></td>
        <td id="LC3425" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">var</span> startValue <span class="pl-k">=</span> <span class="pl-smi">tween_3</span>.<span class="pl-c1">start</span>[i];</td>
      </tr>
      <tr>
        <td id="L3426" class="blob-num js-line-number" data-line-number="3426"></td>
        <td id="LC3426" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (startValue <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3427" class="blob-num js-line-number" data-line-number="3427"></td>
        <td id="LC3427" class="blob-code blob-code-inner js-file-line">                                    currentValue <span class="pl-k">+=</span> pattern[i];</td>
      </tr>
      <tr>
        <td id="L3428" class="blob-num js-line-number" data-line-number="3428"></td>
        <td id="LC3428" class="blob-code blob-code-inner js-file-line">                                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3429" class="blob-num js-line-number" data-line-number="3429"></td>
        <td id="LC3429" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-c"><span class="pl-c">//</span> All easings must deal with numbers except for</span></td>
      </tr>
      <tr>
        <td id="L3430" class="blob-num js-line-number" data-line-number="3430"></td>
        <td id="LC3430" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-c"><span class="pl-c">//</span> our internal ones</span></td>
      </tr>
      <tr>
        <td id="L3431" class="blob-num js-line-number" data-line-number="3431"></td>
        <td id="LC3431" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">var</span> result <span class="pl-k">=</span> <span class="pl-en">easing</span>(reverse <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> percentComplete <span class="pl-k">:</span> percentComplete, startValue, <span class="pl-smi">tween_3</span>.<span class="pl-smi">end</span>[i], property);</td>
      </tr>
      <tr>
        <td id="L3432" class="blob-num js-line-number" data-line-number="3432"></td>
        <td id="LC3432" class="blob-code blob-code-inner js-file-line">                                    currentValue <span class="pl-k">+=</span> pattern[i] <span class="pl-k">===</span> <span class="pl-c1">true</span> <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(result) <span class="pl-k">:</span> result;</td>
      </tr>
      <tr>
        <td id="L3433" class="blob-num js-line-number" data-line-number="3433"></td>
        <td id="LC3433" class="blob-code blob-code-inner js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L3434" class="blob-num js-line-number" data-line-number="3434"></td>
        <td id="LC3434" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L3435" class="blob-num js-line-number" data-line-number="3435"></td>
        <td id="LC3435" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (property <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>tween<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3436" class="blob-num js-line-number" data-line-number="3436"></td>
        <td id="LC3436" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> TODO: To solve an IE&lt;=8 positioning bug, the unit type must be dropped when setting a property value of 0 - add normalisations to legacy</span></td>
      </tr>
      <tr>
        <td id="L3437" class="blob-num js-line-number" data-line-number="3437"></td>
        <td id="LC3437" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">setPropertyValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>, property, currentValue, <span class="pl-smi">tween_3</span>.<span class="pl-smi">fn</span>);</td>
      </tr>
      <tr>
        <td id="L3438" class="blob-num js-line-number" data-line-number="3438"></td>
        <td id="LC3438" class="blob-code blob-code-inner js-file-line">                            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3439" class="blob-num js-line-number" data-line-number="3439"></td>
        <td id="LC3439" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> Skip the fake &#39;tween&#39; property as that is only</span></td>
      </tr>
      <tr>
        <td id="L3440" class="blob-num js-line-number" data-line-number="3440"></td>
        <td id="LC3440" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> passed into the progress callback.</span></td>
      </tr>
      <tr>
        <td id="L3441" class="blob-num js-line-number" data-line-number="3441"></td>
        <td id="LC3441" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">activeCall</span>.<span class="pl-smi">tween</span> <span class="pl-k">=</span> currentValue;</td>
      </tr>
      <tr>
        <td id="L3442" class="blob-num js-line-number" data-line-number="3442"></td>
        <td id="LC3442" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L3443" class="blob-num js-line-number" data-line-number="3443"></td>
        <td id="LC3443" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3444" class="blob-num js-line-number" data-line-number="3444"></td>
        <td id="LC3444" class="blob-code blob-code-inner js-file-line">                            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Missing pattern:<span class="pl-pds">&quot;</span></span>, property, <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(tween_3[property]));</td>
      </tr>
      <tr>
        <td id="L3445" class="blob-num js-line-number" data-line-number="3445"></td>
        <td id="LC3445" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">delete</span> tweens[property];</td>
      </tr>
      <tr>
        <td id="L3446" class="blob-num js-line-number" data-line-number="3446"></td>
        <td id="LC3446" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3447" class="blob-num js-line-number" data-line-number="3447"></td>
        <td id="LC3447" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3448" class="blob-num js-line-number" data-line-number="3448"></td>
        <td id="LC3448" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3449" class="blob-num js-line-number" data-line-number="3449"></td>
        <td id="LC3449" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (firstProgress <span class="pl-k">||</span> firstComplete) {</td>
      </tr>
      <tr>
        <td id="L3450" class="blob-num js-line-number" data-line-number="3450"></td>
        <td id="LC3450" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">setTimeout</span>(asyncCallbacks, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3451" class="blob-num js-line-number" data-line-number="3451"></td>
        <td id="LC3451" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3452" class="blob-num js-line-number" data-line-number="3452"></td>
        <td id="LC3452" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3453" class="blob-num js-line-number" data-line-number="3453"></td>
        <td id="LC3453" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3454" class="blob-num js-line-number" data-line-number="3454"></td>
        <td id="LC3454" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">first</span>) {</td>
      </tr>
      <tr>
        <td id="L3455" class="blob-num js-line-number" data-line-number="3455"></td>
        <td id="LC3455" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">isTicking</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3456" class="blob-num js-line-number" data-line-number="3456"></td>
        <td id="LC3456" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">ticker</span>(tick);</td>
      </tr>
      <tr>
        <td id="L3457" class="blob-num js-line-number" data-line-number="3457"></td>
        <td id="LC3457" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3458" class="blob-num js-line-number" data-line-number="3458"></td>
        <td id="LC3458" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">isTicking</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3459" class="blob-num js-line-number" data-line-number="3459"></td>
        <td id="LC3459" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">lastTick</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3460" class="blob-num js-line-number" data-line-number="3460"></td>
        <td id="LC3460" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3461" class="blob-num js-line-number" data-line-number="3461"></td>
        <td id="LC3461" class="blob-code blob-code-inner js-file-line">        ticking <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3462" class="blob-num js-line-number" data-line-number="3462"></td>
        <td id="LC3462" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3463" class="blob-num js-line-number" data-line-number="3463"></td>
        <td id="LC3463" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">tick</span> <span class="pl-k">=</span> tick;</td>
      </tr>
      <tr>
        <td id="L3464" class="blob-num js-line-number" data-line-number="3464"></td>
        <td id="LC3464" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L3465" class="blob-num js-line-number" data-line-number="3465"></td>
        <td id="LC3465" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3466" class="blob-num js-line-number" data-line-number="3466"></td>
        <td id="LC3466" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L3467" class="blob-num js-line-number" data-line-number="3467"></td>
        <td id="LC3467" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L3468" class="blob-num js-line-number" data-line-number="3468"></td>
        <td id="LC3468" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3469" class="blob-num js-line-number" data-line-number="3469"></td>
        <td id="LC3469" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L3470" class="blob-num js-line-number" data-line-number="3470"></td>
        <td id="LC3470" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3471" class="blob-num js-line-number" data-line-number="3471"></td>
        <td id="LC3471" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Use rAF high resolution timestamp when available.</span></td>
      </tr>
      <tr>
        <td id="L3472" class="blob-num js-line-number" data-line-number="3472"></td>
        <td id="LC3472" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L3473" class="blob-num js-line-number" data-line-number="3473"></td>
        <td id="LC3473" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3474" class="blob-num js-line-number" data-line-number="3474"></td>
        <td id="LC3474" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L3475" class="blob-num js-line-number" data-line-number="3475"></td>
        <td id="LC3475" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">timestamp</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3476" class="blob-num js-line-number" data-line-number="3476"></td>
        <td id="LC3476" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L3477" class="blob-num js-line-number" data-line-number="3477"></td>
        <td id="LC3477" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3478" class="blob-num js-line-number" data-line-number="3478"></td>
        <td id="LC3478" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L3479" class="blob-num js-line-number" data-line-number="3479"></td>
        <td id="LC3479" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L3480" class="blob-num js-line-number" data-line-number="3480"></td>
        <td id="LC3480" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3481" class="blob-num js-line-number" data-line-number="3481"></td>
        <td id="LC3481" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L3482" class="blob-num js-line-number" data-line-number="3482"></td>
        <td id="LC3482" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3483" class="blob-num js-line-number" data-line-number="3483"></td>
        <td id="LC3483" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Tweens</span></td>
      </tr>
      <tr>
        <td id="L3484" class="blob-num js-line-number" data-line-number="3484"></td>
        <td id="LC3484" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3485" class="blob-num js-line-number" data-line-number="3485"></td>
        <td id="LC3485" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L3486" class="blob-num js-line-number" data-line-number="3486"></td>
        <td id="LC3486" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3487" class="blob-num js-line-number" data-line-number="3487"></td>
        <td id="LC3487" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L3488" class="blob-num js-line-number" data-line-number="3488"></td>
        <td id="LC3488" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> rxHex <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>#(<span class="pl-c1">[<span class="pl-c1">A-f</span><span class="pl-c1">\d</span>]</span><span class="pl-k">{3}</span>)<span class="pl-k">{1,2}</span><span class="pl-k">$</span><span class="pl-pds">/</span>i</span>;</td>
      </tr>
      <tr>
        <td id="L3489" class="blob-num js-line-number" data-line-number="3489"></td>
        <td id="LC3489" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> commands <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Map</span>();</td>
      </tr>
      <tr>
        <td id="L3490" class="blob-num js-line-number" data-line-number="3490"></td>
        <td id="LC3490" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">commands</span>.<span class="pl-c1">set</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">element</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">elementArrayIndex</span>, <span class="pl-smi">propertyName</span>, <span class="pl-smi">tween</span>) {</td>
      </tr>
      <tr>
        <td id="L3491" class="blob-num js-line-number" data-line-number="3491"></td>
        <td id="LC3491" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">value</span>.<span class="pl-c1">call</span>(element, elementArrayIndex, <span class="pl-smi">elements</span>.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L3492" class="blob-num js-line-number" data-line-number="3492"></td>
        <td id="LC3492" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L3493" class="blob-num js-line-number" data-line-number="3493"></td>
        <td id="LC3493" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">commands</span>.<span class="pl-c1">set</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">element</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">elementArrayIndex</span>, <span class="pl-smi">propertyName</span>, <span class="pl-smi">tween</span>) {</td>
      </tr>
      <tr>
        <td id="L3494" class="blob-num js-line-number" data-line-number="3494"></td>
        <td id="LC3494" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value <span class="pl-k">+</span> (element <span class="pl-k">instanceof</span> <span class="pl-c1">HTMLElement</span> <span class="pl-k">?</span> <span class="pl-en">getUnitType</span>(propertyName) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3495" class="blob-num js-line-number" data-line-number="3495"></td>
        <td id="LC3495" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L3496" class="blob-num js-line-number" data-line-number="3496"></td>
        <td id="LC3496" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">commands</span>.<span class="pl-c1">set</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">element</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">elementArrayIndex</span>, <span class="pl-smi">propertyName</span>, <span class="pl-smi">tween</span>) {</td>
      </tr>
      <tr>
        <td id="L3497" class="blob-num js-line-number" data-line-number="3497"></td>
        <td id="LC3497" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">fixColors</span>(value);</td>
      </tr>
      <tr>
        <td id="L3498" class="blob-num js-line-number" data-line-number="3498"></td>
        <td id="LC3498" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L3499" class="blob-num js-line-number" data-line-number="3499"></td>
        <td id="LC3499" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">commands</span>.<span class="pl-c1">set</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">element</span>, <span class="pl-smi">elements</span>, <span class="pl-smi">elementArrayIndex</span>, <span class="pl-smi">propertyName</span>, <span class="pl-smi">tween</span>) {</td>
      </tr>
      <tr>
        <td id="L3500" class="blob-num js-line-number" data-line-number="3500"></td>
        <td id="LC3500" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">fixColors</span>(<span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(element, propertyName, <span class="pl-smi">tween</span>.<span class="pl-smi">fn</span>) <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3501" class="blob-num js-line-number" data-line-number="3501"></td>
        <td id="LC3501" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L3502" class="blob-num js-line-number" data-line-number="3502"></td>
        <td id="LC3502" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3503" class="blob-num js-line-number" data-line-number="3503"></td>
        <td id="LC3503" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Properties that take no default numeric suffix.</span></td>
      </tr>
      <tr>
        <td id="L3504" class="blob-num js-line-number" data-line-number="3504"></td>
        <td id="LC3504" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">var</span> unitless <span class="pl-k">=</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>borderImageSlice<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>columnCount<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>counterIncrement<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>counterReset<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>flex<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>flexGrow<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>flexShrink<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>floodOpacity<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>fontSizeAdjust<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>fontWeight<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>lineHeight<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>order<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>orphans<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>shapeImageThreshold<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>tabSize<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>widows<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>zIndex<span class="pl-pds">&quot;</span></span> ];</td>
      </tr>
      <tr>
        <td id="L3505" class="blob-num js-line-number" data-line-number="3505"></td>
        <td id="LC3505" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3506" class="blob-num js-line-number" data-line-number="3506"></td>
        <td id="LC3506" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Retrieve a property&#39;s default unit type. Used for assigning a unit</span></td>
      </tr>
      <tr>
        <td id="L3507" class="blob-num js-line-number" data-line-number="3507"></td>
        <td id="LC3507" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * type when one is not supplied by the user. These are only valid for</span></td>
      </tr>
      <tr>
        <td id="L3508" class="blob-num js-line-number" data-line-number="3508"></td>
        <td id="LC3508" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * HTMLElement style properties.</span></td>
      </tr>
      <tr>
        <td id="L3509" class="blob-num js-line-number" data-line-number="3509"></td>
        <td id="LC3509" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">getUnitType</span>(<span class="pl-smi">property</span>) {</td>
      </tr>
      <tr>
        <td id="L3510" class="blob-num js-line-number" data-line-number="3510"></td>
        <td id="LC3510" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">_inArray</span>(unitless, property) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3511" class="blob-num js-line-number" data-line-number="3511"></td>
        <td id="LC3511" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3512" class="blob-num js-line-number" data-line-number="3512"></td>
        <td id="LC3512" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3513" class="blob-num js-line-number" data-line-number="3513"></td>
        <td id="LC3513" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Expand a VelocityProperty argument into a valid sparse Tween array. This</span></td>
      </tr>
      <tr>
        <td id="L3514" class="blob-num js-line-number" data-line-number="3514"></td>
        <td id="LC3514" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * pre-allocates the array as it is then the correct size and slightly</span></td>
      </tr>
      <tr>
        <td id="L3515" class="blob-num js-line-number" data-line-number="3515"></td>
        <td id="LC3515" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * faster to access.</span></td>
      </tr>
      <tr>
        <td id="L3516" class="blob-num js-line-number" data-line-number="3516"></td>
        <td id="LC3516" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">expandProperties</span>(<span class="pl-smi">animation</span>, <span class="pl-smi">properties</span>) {</td>
      </tr>
      <tr>
        <td id="L3517" class="blob-num js-line-number" data-line-number="3517"></td>
        <td id="LC3517" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> tweens <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-smi">tweens</span> <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>), elements <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-c1">elements</span>, element <span class="pl-k">=</span> <span class="pl-smi">animation</span>.<span class="pl-smi">element</span>, elementArrayIndex <span class="pl-k">=</span> <span class="pl-smi">elements</span>.<span class="pl-c1">indexOf</span>(element), data <span class="pl-k">=</span> <span class="pl-en">Data</span>(element), queue <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-smi">animation</span>.<span class="pl-smi">queue</span>, <span class="pl-smi">animation</span>.<span class="pl-c1">options</span>.<span class="pl-smi">queue</span>), duration <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-smi">animation</span>.<span class="pl-c1">options</span>.<span class="pl-smi">duration</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">duration</span>);</td>
      </tr>
      <tr>
        <td id="L3518" class="blob-num js-line-number" data-line-number="3518"></td>
        <td id="LC3518" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> property <span class="pl-k">in</span> properties) {</td>
      </tr>
      <tr>
        <td id="L3519" class="blob-num js-line-number" data-line-number="3519"></td>
        <td id="LC3519" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> propertyName <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">camelCase</span>(property);</td>
      </tr>
      <tr>
        <td id="L3520" class="blob-num js-line-number" data-line-number="3520"></td>
        <td id="LC3520" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> valueData <span class="pl-k">=</span> properties[property], fn <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">getNormalization</span>(element, propertyName);</td>
      </tr>
      <tr>
        <td id="L3521" class="blob-num js-line-number" data-line-number="3521"></td>
        <td id="LC3521" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>fn <span class="pl-k">&amp;&amp;</span> propertyName <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>tween<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3522" class="blob-num js-line-number" data-line-number="3522"></td>
        <td id="LC3522" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">debug</span>) {</td>
      </tr>
      <tr>
        <td id="L3523" class="blob-num js-line-number" data-line-number="3523"></td>
        <td id="LC3523" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Skipping [<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> property <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>] due to a lack of browser support.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3524" class="blob-num js-line-number" data-line-number="3524"></td>
        <td id="LC3524" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3525" class="blob-num js-line-number" data-line-number="3525"></td>
        <td id="LC3525" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3526" class="blob-num js-line-number" data-line-number="3526"></td>
        <td id="LC3526" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3527" class="blob-num js-line-number" data-line-number="3527"></td>
        <td id="LC3527" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (valueData <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3528" class="blob-num js-line-number" data-line-number="3528"></td>
        <td id="LC3528" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">debug</span>) {</td>
      </tr>
      <tr>
        <td id="L3529" class="blob-num js-line-number" data-line-number="3529"></td>
        <td id="LC3529" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Skipping [<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> property <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>] due to no value supplied.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3530" class="blob-num js-line-number" data-line-number="3530"></td>
        <td id="LC3530" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3531" class="blob-num js-line-number" data-line-number="3531"></td>
        <td id="LC3531" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3532" class="blob-num js-line-number" data-line-number="3532"></td>
        <td id="LC3532" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3533" class="blob-num js-line-number" data-line-number="3533"></td>
        <td id="LC3533" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> tween_4 <span class="pl-k">=</span> tweens[propertyName] <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L3534" class="blob-num js-line-number" data-line-number="3534"></td>
        <td id="LC3534" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> endValue <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>, startValue <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3535" class="blob-num js-line-number" data-line-number="3535"></td>
        <td id="LC3535" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">tween_4</span>.<span class="pl-smi">fn</span> <span class="pl-k">=</span> fn;</td>
      </tr>
      <tr>
        <td id="L3536" class="blob-num js-line-number" data-line-number="3536"></td>
        <td id="LC3536" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">isFunction</span>(valueData)) {</td>
      </tr>
      <tr>
        <td id="L3537" class="blob-num js-line-number" data-line-number="3537"></td>
        <td id="LC3537" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> If we have a function as the main argument then resolve</span></td>
      </tr>
      <tr>
        <td id="L3538" class="blob-num js-line-number" data-line-number="3538"></td>
        <td id="LC3538" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> it first, in case it returns an array that needs to be</span></td>
      </tr>
      <tr>
        <td id="L3539" class="blob-num js-line-number" data-line-number="3539"></td>
        <td id="LC3539" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> split.</span></td>
      </tr>
      <tr>
        <td id="L3540" class="blob-num js-line-number" data-line-number="3540"></td>
        <td id="LC3540" class="blob-code blob-code-inner js-file-line">                valueData <span class="pl-k">=</span> <span class="pl-smi">valueData</span>.<span class="pl-c1">call</span>(element, elementArrayIndex, <span class="pl-smi">elements</span>.<span class="pl-c1">length</span>, elements);</td>
      </tr>
      <tr>
        <td id="L3541" class="blob-num js-line-number" data-line-number="3541"></td>
        <td id="LC3541" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3542" class="blob-num js-line-number" data-line-number="3542"></td>
        <td id="LC3542" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(valueData)) {</td>
      </tr>
      <tr>
        <td id="L3543" class="blob-num js-line-number" data-line-number="3543"></td>
        <td id="LC3543" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> valueData is an array in the form of</span></td>
      </tr>
      <tr>
        <td id="L3544" class="blob-num js-line-number" data-line-number="3544"></td>
        <td id="LC3544" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> [ endValue, [, easing] [, startValue] ]</span></td>
      </tr>
      <tr>
        <td id="L3545" class="blob-num js-line-number" data-line-number="3545"></td>
        <td id="LC3545" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> arr1 <span class="pl-k">=</span> valueData[<span class="pl-c1">1</span>], arr2 <span class="pl-k">=</span> valueData[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L3546" class="blob-num js-line-number" data-line-number="3546"></td>
        <td id="LC3546" class="blob-code blob-code-inner js-file-line">                endValue <span class="pl-k">=</span> valueData[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3547" class="blob-num js-line-number" data-line-number="3547"></td>
        <td id="LC3547" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">isString</span>(arr1) <span class="pl-k">&amp;&amp;</span> (<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">\d</span>-]</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(arr1) <span class="pl-k">||</span> <span class="pl-smi">rxHex</span>.<span class="pl-c1">test</span>(arr1)) <span class="pl-k">||</span> <span class="pl-en">isFunction</span>(arr1) <span class="pl-k">||</span> <span class="pl-en">isNumber</span>(arr1)) {</td>
      </tr>
      <tr>
        <td id="L3548" class="blob-num js-line-number" data-line-number="3548"></td>
        <td id="LC3548" class="blob-code blob-code-inner js-file-line">                    startValue <span class="pl-k">=</span> arr1;</td>
      </tr>
      <tr>
        <td id="L3549" class="blob-num js-line-number" data-line-number="3549"></td>
        <td id="LC3549" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">isString</span>(arr1) <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span>.<span class="pl-smi">Easings</span>[arr1] <span class="pl-k">||</span> <span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(arr1)) {</td>
      </tr>
      <tr>
        <td id="L3550" class="blob-num js-line-number" data-line-number="3550"></td>
        <td id="LC3550" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">tween_4</span>.<span class="pl-smi">easing</span> <span class="pl-k">=</span> arr1;</td>
      </tr>
      <tr>
        <td id="L3551" class="blob-num js-line-number" data-line-number="3551"></td>
        <td id="LC3551" class="blob-code blob-code-inner js-file-line">                    startValue <span class="pl-k">=</span> arr2;</td>
      </tr>
      <tr>
        <td id="L3552" class="blob-num js-line-number" data-line-number="3552"></td>
        <td id="LC3552" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3553" class="blob-num js-line-number" data-line-number="3553"></td>
        <td id="LC3553" class="blob-code blob-code-inner js-file-line">                    startValue <span class="pl-k">=</span> arr1 <span class="pl-k">||</span> arr2;</td>
      </tr>
      <tr>
        <td id="L3554" class="blob-num js-line-number" data-line-number="3554"></td>
        <td id="LC3554" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3555" class="blob-num js-line-number" data-line-number="3555"></td>
        <td id="LC3555" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3556" class="blob-num js-line-number" data-line-number="3556"></td>
        <td id="LC3556" class="blob-code blob-code-inner js-file-line">                endValue <span class="pl-k">=</span> valueData;</td>
      </tr>
      <tr>
        <td id="L3557" class="blob-num js-line-number" data-line-number="3557"></td>
        <td id="LC3557" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3558" class="blob-num js-line-number" data-line-number="3558"></td>
        <td id="LC3558" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">tween_4</span>.<span class="pl-smi">end</span> <span class="pl-k">=</span> <span class="pl-smi">commands</span>.<span class="pl-c1">get</span>(<span class="pl-k">typeof</span> endValue)(endValue, element, elements, elementArrayIndex, propertyName, tween_4);</td>
      </tr>
      <tr>
        <td id="L3559" class="blob-num js-line-number" data-line-number="3559"></td>
        <td id="LC3559" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (startValue <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> (queue <span class="pl-k">===</span> <span class="pl-c1">false</span> <span class="pl-k">||</span> <span class="pl-smi">data</span>.<span class="pl-smi">queueList</span>[queue] <span class="pl-k">===</span> <span class="pl-c1">undefined</span>)) {</td>
      </tr>
      <tr>
        <td id="L3560" class="blob-num js-line-number" data-line-number="3560"></td>
        <td id="LC3560" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">tween_4</span>.<span class="pl-c1">start</span> <span class="pl-k">=</span> <span class="pl-smi">commands</span>.<span class="pl-c1">get</span>(<span class="pl-k">typeof</span> startValue)(startValue, element, elements, elementArrayIndex, propertyName, tween_4);</td>
      </tr>
      <tr>
        <td id="L3561" class="blob-num js-line-number" data-line-number="3561"></td>
        <td id="LC3561" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3562" class="blob-num js-line-number" data-line-number="3562"></td>
        <td id="LC3562" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">explodeTween</span>(propertyName, tween_4, duration, <span class="pl-k">!!</span>startValue);</td>
      </tr>
      <tr>
        <td id="L3563" class="blob-num js-line-number" data-line-number="3563"></td>
        <td id="LC3563" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3564" class="blob-num js-line-number" data-line-number="3564"></td>
        <td id="LC3564" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3565" class="blob-num js-line-number" data-line-number="3565"></td>
        <td id="LC3565" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">expandProperties</span> <span class="pl-k">=</span> expandProperties;</td>
      </tr>
      <tr>
        <td id="L3566" class="blob-num js-line-number" data-line-number="3566"></td>
        <td id="LC3566" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3567" class="blob-num js-line-number" data-line-number="3567"></td>
        <td id="LC3567" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Convert a string-based tween with start and end strings, into a pattern</span></td>
      </tr>
      <tr>
        <td id="L3568" class="blob-num js-line-number" data-line-number="3568"></td>
        <td id="LC3568" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * based tween with arrays.</span></td>
      </tr>
      <tr>
        <td id="L3569" class="blob-num js-line-number" data-line-number="3569"></td>
        <td id="LC3569" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">explodeTween</span>(<span class="pl-smi">propertyName</span>, <span class="pl-smi">tween</span>, <span class="pl-smi">duration</span>, <span class="pl-smi">isForcefeed</span>) {</td>
      </tr>
      <tr>
        <td id="L3570" class="blob-num js-line-number" data-line-number="3570"></td>
        <td id="LC3570" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> endValue <span class="pl-k">=</span> <span class="pl-smi">tween</span>.<span class="pl-smi">end</span>;</td>
      </tr>
      <tr>
        <td id="L3571" class="blob-num js-line-number" data-line-number="3571"></td>
        <td id="LC3571" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> startValue <span class="pl-k">=</span> <span class="pl-smi">tween</span>.<span class="pl-c1">start</span>;</td>
      </tr>
      <tr>
        <td id="L3572" class="blob-num js-line-number" data-line-number="3572"></td>
        <td id="LC3572" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isString</span>(endValue) <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-en">isString</span>(startValue)) {</td>
      </tr>
      <tr>
        <td id="L3573" class="blob-num js-line-number" data-line-number="3573"></td>
        <td id="LC3573" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3574" class="blob-num js-line-number" data-line-number="3574"></td>
        <td id="LC3574" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3575" class="blob-num js-line-number" data-line-number="3575"></td>
        <td id="LC3575" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> runAgain <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3576" class="blob-num js-line-number" data-line-number="3576"></td>
        <td id="LC3576" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">//</span> Can only be set once if the Start value doesn&#39;t match the End value and it&#39;s not forcefed</span></td>
      </tr>
      <tr>
        <td id="L3577" class="blob-num js-line-number" data-line-number="3577"></td>
        <td id="LC3577" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L3578" class="blob-num js-line-number" data-line-number="3578"></td>
        <td id="LC3578" class="blob-code blob-code-inner js-file-line">            runAgain <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3579" class="blob-num js-line-number" data-line-number="3579"></td>
        <td id="LC3579" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> arrayStart <span class="pl-k">=</span> <span class="pl-smi">tween</span>.<span class="pl-c1">start</span> <span class="pl-k">=</span> [ <span class="pl-c1">null</span> ], arrayEnd <span class="pl-k">=</span> <span class="pl-smi">tween</span>.<span class="pl-smi">end</span> <span class="pl-k">=</span> [ <span class="pl-c1">null</span> ], pattern <span class="pl-k">=</span> <span class="pl-smi">tween</span>.<span class="pl-smi">pattern</span> <span class="pl-k">=</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> ];</td>
      </tr>
      <tr>
        <td id="L3580" class="blob-num js-line-number" data-line-number="3580"></td>
        <td id="LC3580" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> easing <span class="pl-k">=</span> <span class="pl-smi">tween</span>.<span class="pl-smi">easing</span>, indexStart <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c"><span class="pl-c">//</span> index in startValue</span></td>
      </tr>
      <tr>
        <td id="L3581" class="blob-num js-line-number" data-line-number="3581"></td>
        <td id="LC3581" class="blob-code blob-code-inner js-file-line">            indexEnd <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c"><span class="pl-c">//</span> index in endValue</span></td>
      </tr>
      <tr>
        <td id="L3582" class="blob-num js-line-number" data-line-number="3582"></td>
        <td id="LC3582" class="blob-code blob-code-inner js-file-line">            inCalc <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c"><span class="pl-c">//</span> Keep track of being inside a &quot;calc()&quot; so we don&#39;t duplicate it</span></td>
      </tr>
      <tr>
        <td id="L3583" class="blob-num js-line-number" data-line-number="3583"></td>
        <td id="LC3583" class="blob-code blob-code-inner js-file-line">            inRGB <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c"><span class="pl-c">//</span> Keep track of being inside an RGB as we can&#39;t use fractional values</span></td>
      </tr>
      <tr>
        <td id="L3584" class="blob-num js-line-number" data-line-number="3584"></td>
        <td id="LC3584" class="blob-code blob-code-inner js-file-line">            inRGBA <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c"><span class="pl-c">//</span> Keep track of being inside an RGBA as we must pass fractional for the alpha channel</span></td>
      </tr>
      <tr>
        <td id="L3585" class="blob-num js-line-number" data-line-number="3585"></td>
        <td id="LC3585" class="blob-code blob-code-inner js-file-line">            isStringValue <span class="pl-k">=</span> <span class="pl-k">void</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3586" class="blob-num js-line-number" data-line-number="3586"></td>
        <td id="LC3586" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> <span class="pl-en">_loop_2</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3587" class="blob-num js-line-number" data-line-number="3587"></td>
        <td id="LC3587" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> charStart <span class="pl-k">=</span> startValue[indexStart], charEnd <span class="pl-k">=</span> endValue[indexEnd];</td>
      </tr>
      <tr>
        <td id="L3588" class="blob-num js-line-number" data-line-number="3588"></td>
        <td id="LC3588" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> If they&#39;re both numbers, then parse them as a whole</span></td>
      </tr>
      <tr>
        <td id="L3589" class="blob-num js-line-number" data-line-number="3589"></td>
        <td id="LC3589" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (<span class="pl-c1">TWEEN_NUMBER_REGEX</span>.<span class="pl-c1">test</span>(charStart) <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">TWEEN_NUMBER_REGEX</span>.<span class="pl-c1">test</span>(charEnd)) {</td>
      </tr>
      <tr>
        <td id="L3590" class="blob-num js-line-number" data-line-number="3590"></td>
        <td id="LC3590" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> tempStart <span class="pl-k">=</span> charStart, <span class="pl-c"><span class="pl-c">//</span> temporary character buffer</span></td>
      </tr>
      <tr>
        <td id="L3591" class="blob-num js-line-number" data-line-number="3591"></td>
        <td id="LC3591" class="blob-code blob-code-inner js-file-line">                    tempEnd <span class="pl-k">=</span> charEnd, <span class="pl-c"><span class="pl-c">//</span> temporary character buffer</span></td>
      </tr>
      <tr>
        <td id="L3592" class="blob-num js-line-number" data-line-number="3592"></td>
        <td id="LC3592" class="blob-code blob-code-inner js-file-line">                    dotStart <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>, <span class="pl-c"><span class="pl-c">//</span> Make sure we can only ever match a single dot in a decimal</span></td>
      </tr>
      <tr>
        <td id="L3593" class="blob-num js-line-number" data-line-number="3593"></td>
        <td id="LC3593" class="blob-code blob-code-inner js-file-line">                    dotEnd <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3594" class="blob-num js-line-number" data-line-number="3594"></td>
        <td id="LC3594" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">//</span> Make sure we can only ever match a single dot in a decimal</span></td>
      </tr>
      <tr>
        <td id="L3595" class="blob-num js-line-number" data-line-number="3595"></td>
        <td id="LC3595" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">while</span> (<span class="pl-k">++</span>indexStart <span class="pl-k">&lt;</span> <span class="pl-smi">startValue</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L3596" class="blob-num js-line-number" data-line-number="3596"></td>
        <td id="LC3596" class="blob-code blob-code-inner js-file-line">                        charStart <span class="pl-k">=</span> startValue[indexStart];</td>
      </tr>
      <tr>
        <td id="L3597" class="blob-num js-line-number" data-line-number="3597"></td>
        <td id="LC3597" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (charStart <span class="pl-k">===</span> dotStart) {</td>
      </tr>
      <tr>
        <td id="L3598" class="blob-num js-line-number" data-line-number="3598"></td>
        <td id="LC3598" class="blob-code blob-code-inner js-file-line">                            dotStart <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>..<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3599" class="blob-num js-line-number" data-line-number="3599"></td>
        <td id="LC3599" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">//</span> Can never match two characters</span></td>
      </tr>
      <tr>
        <td id="L3600" class="blob-num js-line-number" data-line-number="3600"></td>
        <td id="LC3600" class="blob-code blob-code-inner js-file-line">                                                } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isNumberWhenParsed</span>(charStart)) {</td>
      </tr>
      <tr>
        <td id="L3601" class="blob-num js-line-number" data-line-number="3601"></td>
        <td id="LC3601" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3602" class="blob-num js-line-number" data-line-number="3602"></td>
        <td id="LC3602" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3603" class="blob-num js-line-number" data-line-number="3603"></td>
        <td id="LC3603" class="blob-code blob-code-inner js-file-line">                        tempStart <span class="pl-k">+=</span> charStart;</td>
      </tr>
      <tr>
        <td id="L3604" class="blob-num js-line-number" data-line-number="3604"></td>
        <td id="LC3604" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3605" class="blob-num js-line-number" data-line-number="3605"></td>
        <td id="LC3605" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">while</span> (<span class="pl-k">++</span>indexEnd <span class="pl-k">&lt;</span> <span class="pl-smi">endValue</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L3606" class="blob-num js-line-number" data-line-number="3606"></td>
        <td id="LC3606" class="blob-code blob-code-inner js-file-line">                        charEnd <span class="pl-k">=</span> endValue[indexEnd];</td>
      </tr>
      <tr>
        <td id="L3607" class="blob-num js-line-number" data-line-number="3607"></td>
        <td id="LC3607" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (charEnd <span class="pl-k">===</span> dotEnd) {</td>
      </tr>
      <tr>
        <td id="L3608" class="blob-num js-line-number" data-line-number="3608"></td>
        <td id="LC3608" class="blob-code blob-code-inner js-file-line">                            dotEnd <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>..<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3609" class="blob-num js-line-number" data-line-number="3609"></td>
        <td id="LC3609" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">//</span> Can never match two characters</span></td>
      </tr>
      <tr>
        <td id="L3610" class="blob-num js-line-number" data-line-number="3610"></td>
        <td id="LC3610" class="blob-code blob-code-inner js-file-line">                                                } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isNumberWhenParsed</span>(charEnd)) {</td>
      </tr>
      <tr>
        <td id="L3611" class="blob-num js-line-number" data-line-number="3611"></td>
        <td id="LC3611" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3612" class="blob-num js-line-number" data-line-number="3612"></td>
        <td id="LC3612" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3613" class="blob-num js-line-number" data-line-number="3613"></td>
        <td id="LC3613" class="blob-code blob-code-inner js-file-line">                        tempEnd <span class="pl-k">+=</span> charEnd;</td>
      </tr>
      <tr>
        <td id="L3614" class="blob-num js-line-number" data-line-number="3614"></td>
        <td id="LC3614" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3615" class="blob-num js-line-number" data-line-number="3615"></td>
        <td id="LC3615" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> unitStart <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getUnit</span>(startValue, indexStart), <span class="pl-c"><span class="pl-c">//</span> temporary unit type</span></td>
      </tr>
      <tr>
        <td id="L3616" class="blob-num js-line-number" data-line-number="3616"></td>
        <td id="LC3616" class="blob-code blob-code-inner js-file-line">                    unitEnd <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getUnit</span>(endValue, indexEnd);</td>
      </tr>
      <tr>
        <td id="L3617" class="blob-num js-line-number" data-line-number="3617"></td>
        <td id="LC3617" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">//</span> temporary unit type</span></td>
      </tr>
      <tr>
        <td id="L3618" class="blob-num js-line-number" data-line-number="3618"></td>
        <td id="LC3618" class="blob-code blob-code-inner js-file-line">                                        indexStart <span class="pl-k">+=</span> <span class="pl-smi">unitStart</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L3619" class="blob-num js-line-number" data-line-number="3619"></td>
        <td id="LC3619" class="blob-code blob-code-inner js-file-line">                    indexEnd <span class="pl-k">+=</span> <span class="pl-smi">unitEnd</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L3620" class="blob-num js-line-number" data-line-number="3620"></td>
        <td id="LC3620" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-smi">unitEnd</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3621" class="blob-num js-line-number" data-line-number="3621"></td>
        <td id="LC3621" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> This order as it&#39;s most common for the user supplied</span></td>
      </tr>
      <tr>
        <td id="L3622" class="blob-num js-line-number" data-line-number="3622"></td>
        <td id="LC3622" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> value to be a number.</span></td>
      </tr>
      <tr>
        <td id="L3623" class="blob-num js-line-number" data-line-number="3623"></td>
        <td id="LC3623" class="blob-code blob-code-inner js-file-line">                        unitEnd <span class="pl-k">=</span> unitStart;</td>
      </tr>
      <tr>
        <td id="L3624" class="blob-num js-line-number" data-line-number="3624"></td>
        <td id="LC3624" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">unitStart</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3625" class="blob-num js-line-number" data-line-number="3625"></td>
        <td id="LC3625" class="blob-code blob-code-inner js-file-line">                        unitStart <span class="pl-k">=</span> unitEnd;</td>
      </tr>
      <tr>
        <td id="L3626" class="blob-num js-line-number" data-line-number="3626"></td>
        <td id="LC3626" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3627" class="blob-num js-line-number" data-line-number="3627"></td>
        <td id="LC3627" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (unitStart <span class="pl-k">===</span> unitEnd) {</td>
      </tr>
      <tr>
        <td id="L3628" class="blob-num js-line-number" data-line-number="3628"></td>
        <td id="LC3628" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> Same units</span></td>
      </tr>
      <tr>
        <td id="L3629" class="blob-num js-line-number" data-line-number="3629"></td>
        <td id="LC3629" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (tempStart <span class="pl-k">===</span> tempEnd) {</td>
      </tr>
      <tr>
        <td id="L3630" class="blob-num js-line-number" data-line-number="3630"></td>
        <td id="LC3630" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c"><span class="pl-c">//</span> Same numbers, so just copy over</span></td>
      </tr>
      <tr>
        <td id="L3631" class="blob-num js-line-number" data-line-number="3631"></td>
        <td id="LC3631" class="blob-code blob-code-inner js-file-line">                            pattern[<span class="pl-smi">pattern</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">+=</span> tempStart <span class="pl-k">+</span> unitStart;</td>
      </tr>
      <tr>
        <td id="L3632" class="blob-num js-line-number" data-line-number="3632"></td>
        <td id="LC3632" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3633" class="blob-num js-line-number" data-line-number="3633"></td>
        <td id="LC3633" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">pattern</span>.<span class="pl-c1">push</span>(inRGB <span class="pl-k">?</span> <span class="pl-c1">true</span> <span class="pl-k">:</span> <span class="pl-c1">false</span>, unitStart);</td>
      </tr>
      <tr>
        <td id="L3634" class="blob-num js-line-number" data-line-number="3634"></td>
        <td id="LC3634" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">arrayStart</span>.<span class="pl-c1">push</span>(<span class="pl-c1">parseFloat</span>(tempStart), <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L3635" class="blob-num js-line-number" data-line-number="3635"></td>
        <td id="LC3635" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">arrayEnd</span>.<span class="pl-c1">push</span>(<span class="pl-c1">parseFloat</span>(tempEnd), <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L3636" class="blob-num js-line-number" data-line-number="3636"></td>
        <td id="LC3636" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3637" class="blob-num js-line-number" data-line-number="3637"></td>
        <td id="LC3637" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3638" class="blob-num js-line-number" data-line-number="3638"></td>
        <td id="LC3638" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> Different units, so put into a &quot;calc(from + to)&quot; and</span></td>
      </tr>
      <tr>
        <td id="L3639" class="blob-num js-line-number" data-line-number="3639"></td>
        <td id="LC3639" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> animate each side to/from zero. setPropertyValue will</span></td>
      </tr>
      <tr>
        <td id="L3640" class="blob-num js-line-number" data-line-number="3640"></td>
        <td id="LC3640" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> look out for the final &quot;calc(0 + &quot; prefix and remove</span></td>
      </tr>
      <tr>
        <td id="L3641" class="blob-num js-line-number" data-line-number="3641"></td>
        <td id="LC3641" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> it from the value when it finds it.</span></td>
      </tr>
      <tr>
        <td id="L3642" class="blob-num js-line-number" data-line-number="3642"></td>
        <td id="LC3642" class="blob-code blob-code-inner js-file-line">                        pattern[<span class="pl-smi">pattern</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">+=</span> inCalc <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>+ (<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>calc(<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3643" class="blob-num js-line-number" data-line-number="3643"></td>
        <td id="LC3643" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">pattern</span>.<span class="pl-c1">push</span>(<span class="pl-c1">false</span>, unitStart <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> + <span class="pl-pds">&quot;</span></span>, <span class="pl-c1">false</span>, unitEnd <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3644" class="blob-num js-line-number" data-line-number="3644"></td>
        <td id="LC3644" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">arrayStart</span>.<span class="pl-c1">push</span>(<span class="pl-c1">parseFloat</span>(tempStart) <span class="pl-k">||</span> <span class="pl-c1">0</span>, <span class="pl-c1">null</span>, <span class="pl-c1">0</span>, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L3645" class="blob-num js-line-number" data-line-number="3645"></td>
        <td id="LC3645" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">arrayEnd</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>, <span class="pl-c1">null</span>, <span class="pl-c1">parseFloat</span>(tempEnd) <span class="pl-k">||</span> <span class="pl-c1">0</span>, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L3646" class="blob-num js-line-number" data-line-number="3646"></td>
        <td id="LC3646" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3647" class="blob-num js-line-number" data-line-number="3647"></td>
        <td id="LC3647" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (charStart <span class="pl-k">===</span> charEnd) {</td>
      </tr>
      <tr>
        <td id="L3648" class="blob-num js-line-number" data-line-number="3648"></td>
        <td id="LC3648" class="blob-code blob-code-inner js-file-line">                    pattern[<span class="pl-smi">pattern</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">+=</span> charStart;</td>
      </tr>
      <tr>
        <td id="L3649" class="blob-num js-line-number" data-line-number="3649"></td>
        <td id="LC3649" class="blob-code blob-code-inner js-file-line">                    indexStart<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3650" class="blob-num js-line-number" data-line-number="3650"></td>
        <td id="LC3650" class="blob-code blob-code-inner js-file-line">                    indexEnd<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3651" class="blob-num js-line-number" data-line-number="3651"></td>
        <td id="LC3651" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Keep track of being inside a calc()</span></td>
      </tr>
      <tr>
        <td id="L3652" class="blob-num js-line-number" data-line-number="3652"></td>
        <td id="LC3652" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">if</span> (inCalc <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> inCalc <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> inCalc <span class="pl-k">===</span> <span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>l<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> inCalc <span class="pl-k">===</span> <span class="pl-c1">3</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> inCalc <span class="pl-k">&gt;=</span> <span class="pl-c1">4</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3653" class="blob-num js-line-number" data-line-number="3653"></td>
        <td id="LC3653" class="blob-code blob-code-inner js-file-line">                        inCalc<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3654" class="blob-num js-line-number" data-line-number="3654"></td>
        <td id="LC3654" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> <span class="pl-k">if</span> (inCalc <span class="pl-k">&amp;&amp;</span> inCalc <span class="pl-k">&lt;</span> <span class="pl-c1">5</span> <span class="pl-k">||</span> inCalc <span class="pl-k">&gt;=</span> <span class="pl-c1">4</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">--</span>inCalc <span class="pl-k">&lt;</span> <span class="pl-c1">5</span>) {</td>
      </tr>
      <tr>
        <td id="L3655" class="blob-num js-line-number" data-line-number="3655"></td>
        <td id="LC3655" class="blob-code blob-code-inner js-file-line">                        inCalc <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3656" class="blob-num js-line-number" data-line-number="3656"></td>
        <td id="LC3656" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3657" class="blob-num js-line-number" data-line-number="3657"></td>
        <td id="LC3657" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Keep track of being inside an rgb() / rgba()</span></td>
      </tr>
      <tr>
        <td id="L3658" class="blob-num js-line-number" data-line-number="3658"></td>
        <td id="LC3658" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> The opacity must not be rounded.</span></td>
      </tr>
      <tr>
        <td id="L3659" class="blob-num js-line-number" data-line-number="3659"></td>
        <td id="LC3659" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-k">if</span> (inRGB <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> inRGB <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> inRGB <span class="pl-k">===</span> <span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>b<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> inRGB <span class="pl-k">===</span> <span class="pl-c1">3</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> inRGB <span class="pl-k">&gt;=</span> <span class="pl-c1">3</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3660" class="blob-num js-line-number" data-line-number="3660"></td>
        <td id="LC3660" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (inRGB <span class="pl-k">===</span> <span class="pl-c1">3</span> <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3661" class="blob-num js-line-number" data-line-number="3661"></td>
        <td id="LC3661" class="blob-code blob-code-inner js-file-line">                            inRGBA <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3662" class="blob-num js-line-number" data-line-number="3662"></td>
        <td id="LC3662" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3663" class="blob-num js-line-number" data-line-number="3663"></td>
        <td id="LC3663" class="blob-code blob-code-inner js-file-line">                        inRGB<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3664" class="blob-num js-line-number" data-line-number="3664"></td>
        <td id="LC3664" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> <span class="pl-k">if</span> (inRGBA <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3665" class="blob-num js-line-number" data-line-number="3665"></td>
        <td id="LC3665" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-k">++</span>inRGBA <span class="pl-k">&gt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L3666" class="blob-num js-line-number" data-line-number="3666"></td>
        <td id="LC3666" class="blob-code blob-code-inner js-file-line">                            inRGB <span class="pl-k">=</span> inRGBA <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3667" class="blob-num js-line-number" data-line-number="3667"></td>
        <td id="LC3667" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3668" class="blob-num js-line-number" data-line-number="3668"></td>
        <td id="LC3668" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> <span class="pl-k">if</span> (inRGBA <span class="pl-k">&amp;&amp;</span> inRGB <span class="pl-k">&lt;</span> (inRGBA <span class="pl-k">?</span> <span class="pl-c1">5</span> <span class="pl-k">:</span> <span class="pl-c1">4</span>) <span class="pl-k">||</span> inRGB <span class="pl-k">&gt;=</span> (inRGBA <span class="pl-k">?</span> <span class="pl-c1">4</span> <span class="pl-k">:</span> <span class="pl-c1">3</span>) <span class="pl-k">&amp;&amp;</span> charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">--</span>inRGB <span class="pl-k">&lt;</span> (inRGBA <span class="pl-k">?</span> <span class="pl-c1">5</span> <span class="pl-k">:</span> <span class="pl-c1">4</span>)) {</td>
      </tr>
      <tr>
        <td id="L3669" class="blob-num js-line-number" data-line-number="3669"></td>
        <td id="LC3669" class="blob-code blob-code-inner js-file-line">                        inRGB <span class="pl-k">=</span> inRGBA <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3670" class="blob-num js-line-number" data-line-number="3670"></td>
        <td id="LC3670" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3671" class="blob-num js-line-number" data-line-number="3671"></td>
        <td id="LC3671" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (charStart <span class="pl-k">||</span> charEnd) {</td>
      </tr>
      <tr>
        <td id="L3672" class="blob-num js-line-number" data-line-number="3672"></td>
        <td id="LC3672" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Different letters, so we&#39;re going to push them into start</span></td>
      </tr>
      <tr>
        <td id="L3673" class="blob-num js-line-number" data-line-number="3673"></td>
        <td id="LC3673" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> and end until the next word</span></td>
      </tr>
      <tr>
        <td id="L3674" class="blob-num js-line-number" data-line-number="3674"></td>
        <td id="LC3674" class="blob-code blob-code-inner js-file-line">                    isStringValue <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3675" class="blob-num js-line-number" data-line-number="3675"></td>
        <td id="LC3675" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isString</span>(arrayStart[<span class="pl-smi">arrayStart</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>])) {</td>
      </tr>
      <tr>
        <td id="L3676" class="blob-num js-line-number" data-line-number="3676"></td>
        <td id="LC3676" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (<span class="pl-smi">pattern</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>pattern[<span class="pl-c1">0</span>]) {</td>
      </tr>
      <tr>
        <td id="L3677" class="blob-num js-line-number" data-line-number="3677"></td>
        <td id="LC3677" class="blob-code blob-code-inner js-file-line">                            arrayStart[<span class="pl-c1">0</span>] <span class="pl-k">=</span> arrayEnd[<span class="pl-c1">0</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3678" class="blob-num js-line-number" data-line-number="3678"></td>
        <td id="LC3678" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3679" class="blob-num js-line-number" data-line-number="3679"></td>
        <td id="LC3679" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">pattern</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3680" class="blob-num js-line-number" data-line-number="3680"></td>
        <td id="LC3680" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">arrayStart</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3681" class="blob-num js-line-number" data-line-number="3681"></td>
        <td id="LC3681" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">arrayEnd</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3682" class="blob-num js-line-number" data-line-number="3682"></td>
        <td id="LC3682" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3683" class="blob-num js-line-number" data-line-number="3683"></td>
        <td id="LC3683" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3684" class="blob-num js-line-number" data-line-number="3684"></td>
        <td id="LC3684" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">while</span> (indexStart <span class="pl-k">&lt;</span> <span class="pl-smi">startValue</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L3685" class="blob-num js-line-number" data-line-number="3685"></td>
        <td id="LC3685" class="blob-code blob-code-inner js-file-line">                        charStart <span class="pl-k">=</span> startValue[indexStart<span class="pl-k">++</span>];</td>
      </tr>
      <tr>
        <td id="L3686" class="blob-num js-line-number" data-line-number="3686"></td>
        <td id="LC3686" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (charStart <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> <span class="pl-c1">TWEEN_NUMBER_REGEX</span>.<span class="pl-c1">test</span>(charStart)) {</td>
      </tr>
      <tr>
        <td id="L3687" class="blob-num js-line-number" data-line-number="3687"></td>
        <td id="LC3687" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3688" class="blob-num js-line-number" data-line-number="3688"></td>
        <td id="LC3688" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3689" class="blob-num js-line-number" data-line-number="3689"></td>
        <td id="LC3689" class="blob-code blob-code-inner js-file-line">                            arrayStart[<span class="pl-smi">arrayStart</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">+=</span> charStart;</td>
      </tr>
      <tr>
        <td id="L3690" class="blob-num js-line-number" data-line-number="3690"></td>
        <td id="LC3690" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3691" class="blob-num js-line-number" data-line-number="3691"></td>
        <td id="LC3691" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3692" class="blob-num js-line-number" data-line-number="3692"></td>
        <td id="LC3692" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">while</span> (indexEnd <span class="pl-k">&lt;</span> <span class="pl-smi">endValue</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L3693" class="blob-num js-line-number" data-line-number="3693"></td>
        <td id="LC3693" class="blob-code blob-code-inner js-file-line">                        charEnd <span class="pl-k">=</span> endValue[indexEnd<span class="pl-k">++</span>];</td>
      </tr>
      <tr>
        <td id="L3694" class="blob-num js-line-number" data-line-number="3694"></td>
        <td id="LC3694" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (charEnd <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> <span class="pl-c1">TWEEN_NUMBER_REGEX</span>.<span class="pl-c1">test</span>(charEnd)) {</td>
      </tr>
      <tr>
        <td id="L3695" class="blob-num js-line-number" data-line-number="3695"></td>
        <td id="LC3695" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3696" class="blob-num js-line-number" data-line-number="3696"></td>
        <td id="LC3696" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3697" class="blob-num js-line-number" data-line-number="3697"></td>
        <td id="LC3697" class="blob-code blob-code-inner js-file-line">                            arrayEnd[<span class="pl-smi">arrayEnd</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">+=</span> charEnd;</td>
      </tr>
      <tr>
        <td id="L3698" class="blob-num js-line-number" data-line-number="3698"></td>
        <td id="LC3698" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L3699" class="blob-num js-line-number" data-line-number="3699"></td>
        <td id="LC3699" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3700" class="blob-num js-line-number" data-line-number="3700"></td>
        <td id="LC3700" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3701" class="blob-num js-line-number" data-line-number="3701"></td>
        <td id="LC3701" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span>isForcefeed <span class="pl-k">&amp;&amp;</span> indexStart <span class="pl-k">===</span> <span class="pl-smi">startValue</span>.<span class="pl-c1">length</span> <span class="pl-k">!==</span> (indexEnd <span class="pl-k">===</span> <span class="pl-smi">endValue</span>.<span class="pl-c1">length</span>)) {</td>
      </tr>
      <tr>
        <td id="L3702" class="blob-num js-line-number" data-line-number="3702"></td>
        <td id="LC3702" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> This little piece will take a startValue, split out the</span></td>
      </tr>
      <tr>
        <td id="L3703" class="blob-num js-line-number" data-line-number="3703"></td>
        <td id="LC3703" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> various numbers in it, then copy the endValue into the</span></td>
      </tr>
      <tr>
        <td id="L3704" class="blob-num js-line-number" data-line-number="3704"></td>
        <td id="LC3704" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> startValue while replacing the numbers in it to match the</span></td>
      </tr>
      <tr>
        <td id="L3705" class="blob-num js-line-number" data-line-number="3705"></td>
        <td id="LC3705" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> original start numbers as a repeating sequence.</span></td>
      </tr>
      <tr>
        <td id="L3706" class="blob-num js-line-number" data-line-number="3706"></td>
        <td id="LC3706" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Finally this function will run again with the new</span></td>
      </tr>
      <tr>
        <td id="L3707" class="blob-num js-line-number" data-line-number="3707"></td>
        <td id="LC3707" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> startValue and a now matching pattern.</span></td>
      </tr>
      <tr>
        <td id="L3708" class="blob-num js-line-number" data-line-number="3708"></td>
        <td id="LC3708" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> startNumbers_1 <span class="pl-k">=</span> <span class="pl-smi">startValue</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\d</span><span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-c1">\d</span><span class="pl-k">*</span><span class="pl-pds">/</span>g</span>) <span class="pl-k">||</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span> ], count_1 <span class="pl-k">=</span> <span class="pl-smi">startNumbers_1</span>.<span class="pl-c1">length</span>, index_1 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3709" class="blob-num js-line-number" data-line-number="3709"></td>
        <td id="LC3709" class="blob-code blob-code-inner js-file-line">                    startValue <span class="pl-k">=</span> <span class="pl-smi">endValue</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\d</span><span class="pl-k">+</span><span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-c1">\d</span><span class="pl-k">*</span><span class="pl-pds">/</span>g</span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3710" class="blob-num js-line-number" data-line-number="3710"></td>
        <td id="LC3710" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> startNumbers_1[index_1<span class="pl-k">++</span> <span class="pl-k">%</span> count_1];</td>
      </tr>
      <tr>
        <td id="L3711" class="blob-num js-line-number" data-line-number="3711"></td>
        <td id="LC3711" class="blob-code blob-code-inner js-file-line">                    });</td>
      </tr>
      <tr>
        <td id="L3712" class="blob-num js-line-number" data-line-number="3712"></td>
        <td id="LC3712" class="blob-code blob-code-inner js-file-line">                    runAgain <span class="pl-k">=</span> isForcefeed <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3713" class="blob-num js-line-number" data-line-number="3713"></td>
        <td id="LC3713" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>break<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3714" class="blob-num js-line-number" data-line-number="3714"></td>
        <td id="LC3714" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3715" class="blob-num js-line-number" data-line-number="3715"></td>
        <td id="LC3715" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L3716" class="blob-num js-line-number" data-line-number="3716"></td>
        <td id="LC3716" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> TODO: Relative Values</span></td>
      </tr>
      <tr>
        <td id="L3717" class="blob-num js-line-number" data-line-number="3717"></td>
        <td id="LC3717" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Operator logic must be performed last since it requires unit-normalized start and end values. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3718" class="blob-num js-line-number" data-line-number="3718"></td>
        <td id="LC3718" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span> Note: Relative *percent values* do not behave how most people think; while one would expect &quot;+=50%&quot;</span></td>
      </tr>
      <tr>
        <td id="L3719" class="blob-num js-line-number" data-line-number="3719"></td>
        <td id="LC3719" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             to increase the property 1.5x its current value, it in fact increases the percent units in absolute terms:</span></td>
      </tr>
      <tr>
        <td id="L3720" class="blob-num js-line-number" data-line-number="3720"></td>
        <td id="LC3720" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             50 points is added on top of the current % value. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3721" class="blob-num js-line-number" data-line-number="3721"></td>
        <td id="LC3721" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>					switch (operator as any as string) {</span></td>
      </tr>
      <tr>
        <td id="L3722" class="blob-num js-line-number" data-line-number="3722"></td>
        <td id="LC3722" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>						case &quot;+&quot;:</span></td>
      </tr>
      <tr>
        <td id="L3723" class="blob-num js-line-number" data-line-number="3723"></td>
        <td id="LC3723" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>							endValue = startValue + endValue;</span></td>
      </tr>
      <tr>
        <td id="L3724" class="blob-num js-line-number" data-line-number="3724"></td>
        <td id="LC3724" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>							break;</span></td>
      </tr>
      <tr>
        <td id="L3725" class="blob-num js-line-number" data-line-number="3725"></td>
        <td id="LC3725" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L3726" class="blob-num js-line-number" data-line-number="3726"></td>
        <td id="LC3726" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>						case &quot;-&quot;:</span></td>
      </tr>
      <tr>
        <td id="L3727" class="blob-num js-line-number" data-line-number="3727"></td>
        <td id="LC3727" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>							endValue = startValue - endValue;</span></td>
      </tr>
      <tr>
        <td id="L3728" class="blob-num js-line-number" data-line-number="3728"></td>
        <td id="LC3728" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>							break;</span></td>
      </tr>
      <tr>
        <td id="L3729" class="blob-num js-line-number" data-line-number="3729"></td>
        <td id="LC3729" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L3730" class="blob-num js-line-number" data-line-number="3730"></td>
        <td id="LC3730" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>						case &quot;*&quot;:</span></td>
      </tr>
      <tr>
        <td id="L3731" class="blob-num js-line-number" data-line-number="3731"></td>
        <td id="LC3731" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>							endValue = startValue * endValue;</span></td>
      </tr>
      <tr>
        <td id="L3732" class="blob-num js-line-number" data-line-number="3732"></td>
        <td id="LC3732" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>							break;</span></td>
      </tr>
      <tr>
        <td id="L3733" class="blob-num js-line-number" data-line-number="3733"></td>
        <td id="LC3733" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L3734" class="blob-num js-line-number" data-line-number="3734"></td>
        <td id="LC3734" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>						case &quot;/&quot;:</span></td>
      </tr>
      <tr>
        <td id="L3735" class="blob-num js-line-number" data-line-number="3735"></td>
        <td id="LC3735" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>							endValue = startValue / endValue;</span></td>
      </tr>
      <tr>
        <td id="L3736" class="blob-num js-line-number" data-line-number="3736"></td>
        <td id="LC3736" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>							break;</span></td>
      </tr>
      <tr>
        <td id="L3737" class="blob-num js-line-number" data-line-number="3737"></td>
        <td id="LC3737" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>					}</span></td>
      </tr>
      <tr>
        <td id="L3738" class="blob-num js-line-number" data-line-number="3738"></td>
        <td id="LC3738" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> TODO: Leading from a calc value</span></td>
      </tr>
      <tr>
        <td id="L3739" class="blob-num js-line-number" data-line-number="3739"></td>
        <td id="LC3739" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">while</span> (indexStart <span class="pl-k">&lt;</span> <span class="pl-smi">startValue</span>.<span class="pl-c1">length</span> <span class="pl-k">&amp;&amp;</span> indexEnd <span class="pl-k">&lt;</span> <span class="pl-smi">endValue</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L3740" class="blob-num js-line-number" data-line-number="3740"></td>
        <td id="LC3740" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> state_1 <span class="pl-k">=</span> <span class="pl-en">_loop_2</span>();</td>
      </tr>
      <tr>
        <td id="L3741" class="blob-num js-line-number" data-line-number="3741"></td>
        <td id="LC3741" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (state_1 <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>break<span class="pl-pds">&quot;</span></span>) <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3742" class="blob-num js-line-number" data-line-number="3742"></td>
        <td id="LC3742" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3743" class="blob-num js-line-number" data-line-number="3743"></td>
        <td id="LC3743" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>runAgain) {</td>
      </tr>
      <tr>
        <td id="L3744" class="blob-num js-line-number" data-line-number="3744"></td>
        <td id="LC3744" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> TODO: These two would be slightly better to not add the array indices in the first place</span></td>
      </tr>
      <tr>
        <td id="L3745" class="blob-num js-line-number" data-line-number="3745"></td>
        <td id="LC3745" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (pattern[<span class="pl-c1">0</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> arrayEnd[<span class="pl-c1">0</span>] <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3746" class="blob-num js-line-number" data-line-number="3746"></td>
        <td id="LC3746" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">pattern</span>.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L3747" class="blob-num js-line-number" data-line-number="3747"></td>
        <td id="LC3747" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">arrayStart</span>.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L3748" class="blob-num js-line-number" data-line-number="3748"></td>
        <td id="LC3748" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">arrayEnd</span>.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L3749" class="blob-num js-line-number" data-line-number="3749"></td>
        <td id="LC3749" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3750" class="blob-num js-line-number" data-line-number="3750"></td>
        <td id="LC3750" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (pattern[<span class="pl-smi">pattern</span>.<span class="pl-c1">length</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> arrayEnd[<span class="pl-smi">arrayEnd</span>.<span class="pl-c1">length</span>] <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3751" class="blob-num js-line-number" data-line-number="3751"></td>
        <td id="LC3751" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">pattern</span>.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L3752" class="blob-num js-line-number" data-line-number="3752"></td>
        <td id="LC3752" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">arrayStart</span>.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L3753" class="blob-num js-line-number" data-line-number="3753"></td>
        <td id="LC3753" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">arrayEnd</span>.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L3754" class="blob-num js-line-number" data-line-number="3754"></td>
        <td id="LC3754" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3755" class="blob-num js-line-number" data-line-number="3755"></td>
        <td id="LC3755" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (indexStart <span class="pl-k">&lt;</span> <span class="pl-smi">startValue</span>.<span class="pl-c1">length</span> <span class="pl-k">||</span> indexEnd <span class="pl-k">&lt;</span> <span class="pl-smi">endValue</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L3756" class="blob-num js-line-number" data-line-number="3756"></td>
        <td id="LC3756" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> NOTE: We should never be able to reach this code unless a</span></td>
      </tr>
      <tr>
        <td id="L3757" class="blob-num js-line-number" data-line-number="3757"></td>
        <td id="LC3757" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> bad forcefed value is supplied.</span></td>
      </tr>
      <tr>
        <td id="L3758" class="blob-num js-line-number" data-line-number="3758"></td>
        <td id="LC3758" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Velocity: Trying to pattern match mis-matched strings <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> propertyName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>:[&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> endValue <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;, &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> startValue <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;]<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3759" class="blob-num js-line-number" data-line-number="3759"></td>
        <td id="LC3759" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3760" class="blob-num js-line-number" data-line-number="3760"></td>
        <td id="LC3760" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">debug</span>) {</td>
      </tr>
      <tr>
        <td id="L3761" class="blob-num js-line-number" data-line-number="3761"></td>
        <td id="LC3761" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Velocity: Pattern found:<span class="pl-pds">&quot;</span></span>, pattern, <span class="pl-s"><span class="pl-pds">&quot;</span> -&gt; <span class="pl-pds">&quot;</span></span>, arrayStart, arrayEnd, <span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> startValue <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> endValue <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3762" class="blob-num js-line-number" data-line-number="3762"></td>
        <td id="LC3762" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3763" class="blob-num js-line-number" data-line-number="3763"></td>
        <td id="LC3763" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (propertyName <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3764" class="blob-num js-line-number" data-line-number="3764"></td>
        <td id="LC3764" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(at-start<span class="pl-k">|</span>at-end<span class="pl-k">|</span>during)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(easing)) {</td>
      </tr>
      <tr>
        <td id="L3765" class="blob-num js-line-number" data-line-number="3765"></td>
        <td id="LC3765" class="blob-code blob-code-inner js-file-line">                        easing <span class="pl-k">=</span> endValue <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>at-end<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>at-start<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3766" class="blob-num js-line-number" data-line-number="3766"></td>
        <td id="LC3766" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3767" class="blob-num js-line-number" data-line-number="3767"></td>
        <td id="LC3767" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (propertyName <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3768" class="blob-num js-line-number" data-line-number="3768"></td>
        <td id="LC3768" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(at-start<span class="pl-k">|</span>at-end<span class="pl-k">|</span>during)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(easing)) {</td>
      </tr>
      <tr>
        <td id="L3769" class="blob-num js-line-number" data-line-number="3769"></td>
        <td id="LC3769" class="blob-code blob-code-inner js-file-line">                        easing <span class="pl-k">=</span> endValue <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>at-end<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>at-start<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3770" class="blob-num js-line-number" data-line-number="3770"></td>
        <td id="LC3770" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L3771" class="blob-num js-line-number" data-line-number="3771"></td>
        <td id="LC3771" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (isStringValue <span class="pl-k">&amp;&amp;</span> easing <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>at-start<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> easing <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>during<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> easing <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>at-end<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> easing <span class="pl-k">!==</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span>.<span class="pl-smi">Easings</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>at-Start<span class="pl-pds">&quot;</span></span>] <span class="pl-k">&amp;&amp;</span> easing <span class="pl-k">!==</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span>.<span class="pl-smi">Easings</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>during<span class="pl-pds">&quot;</span></span>] <span class="pl-k">&amp;&amp;</span> easing <span class="pl-k">!==</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span>.<span class="pl-smi">Easings</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>at-end<span class="pl-pds">&quot;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L3772" class="blob-num js-line-number" data-line-number="3772"></td>
        <td id="LC3772" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Velocity: String easings must use one of &#39;at-start&#39;, &#39;during&#39; or &#39;at-end&#39;: {<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> propertyName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>: [&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> endValue <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;, <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> easing <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>, &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> startValue <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;]}<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3773" class="blob-num js-line-number" data-line-number="3773"></td>
        <td id="LC3773" class="blob-code blob-code-inner js-file-line">                    easing <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>at-start<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3774" class="blob-num js-line-number" data-line-number="3774"></td>
        <td id="LC3774" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3775" class="blob-num js-line-number" data-line-number="3775"></td>
        <td id="LC3775" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">tween</span>.<span class="pl-smi">easing</span> <span class="pl-k">=</span> <span class="pl-en">validateEasing</span>(easing, duration);</td>
      </tr>
      <tr>
        <td id="L3776" class="blob-num js-line-number" data-line-number="3776"></td>
        <td id="LC3776" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3777" class="blob-num js-line-number" data-line-number="3777"></td>
        <td id="LC3777" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> This can only run a second time once - if going from automatic startValue to &quot;fixed&quot; pattern from endValue with startValue numbers</span></td>
      </tr>
      <tr>
        <td id="L3778" class="blob-num js-line-number" data-line-number="3778"></td>
        <td id="LC3778" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">while</span> (runAgain);</td>
      </tr>
      <tr>
        <td id="L3779" class="blob-num js-line-number" data-line-number="3779"></td>
        <td id="LC3779" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3780" class="blob-num js-line-number" data-line-number="3780"></td>
        <td id="LC3780" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3781" class="blob-num js-line-number" data-line-number="3781"></td>
        <td id="LC3781" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Expand all queued animations that haven&#39;t gone yet</span></td>
      </tr>
      <tr>
        <td id="L3782" class="blob-num js-line-number" data-line-number="3782"></td>
        <td id="LC3782" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3783" class="blob-num js-line-number" data-line-number="3783"></td>
        <td id="LC3783" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * This will automatically expand the properties map for any recently added</span></td>
      </tr>
      <tr>
        <td id="L3784" class="blob-num js-line-number" data-line-number="3784"></td>
        <td id="LC3784" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * animations so that the start and end values are correct.</span></td>
      </tr>
      <tr>
        <td id="L3785" class="blob-num js-line-number" data-line-number="3785"></td>
        <td id="LC3785" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span>    <span class="pl-k">function</span> <span class="pl-en">validateTweens</span>(<span class="pl-smi">activeCall</span>) {</td>
      </tr>
      <tr>
        <td id="L3786" class="blob-num js-line-number" data-line-number="3786"></td>
        <td id="LC3786" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> This might be called on an already-ready animation</span></td>
      </tr>
      <tr>
        <td id="L3787" class="blob-num js-line-number" data-line-number="3787"></td>
        <td id="LC3787" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span> <span class="pl-k">===</span> activeCall) {</td>
      </tr>
      <tr>
        <td id="L3788" class="blob-num js-line-number" data-line-number="3788"></td>
        <td id="LC3788" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">firstNew</span> <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">_next</span>;</td>
      </tr>
      <tr>
        <td id="L3789" class="blob-num js-line-number" data-line-number="3789"></td>
        <td id="LC3789" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3790" class="blob-num js-line-number" data-line-number="3790"></td>
        <td id="LC3790" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Check if we&#39;re actually already ready</span></td>
      </tr>
      <tr>
        <td id="L3791" class="blob-num js-line-number" data-line-number="3791"></td>
        <td id="LC3791" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">activeCall</span>.<span class="pl-smi">_flags</span> <span class="pl-k">&amp;</span> <span class="pl-c1">1</span> <span class="pl-c"><span class="pl-c">/*</span> EXPANDED <span class="pl-c">*/</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3792" class="blob-num js-line-number" data-line-number="3792"></td>
        <td id="LC3792" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3793" class="blob-num js-line-number" data-line-number="3793"></td>
        <td id="LC3793" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3794" class="blob-num js-line-number" data-line-number="3794"></td>
        <td id="LC3794" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> element <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>, tweens <span class="pl-k">=</span> <span class="pl-smi">activeCall</span>.<span class="pl-smi">tweens</span>, duration <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-c1">options</span>.<span class="pl-smi">duration</span>, <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>.<span class="pl-smi">duration</span>);</td>
      </tr>
      <tr>
        <td id="L3795" class="blob-num js-line-number" data-line-number="3795"></td>
        <td id="LC3795" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> propertyName <span class="pl-k">in</span> tweens) {</td>
      </tr>
      <tr>
        <td id="L3796" class="blob-num js-line-number" data-line-number="3796"></td>
        <td id="LC3796" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> tween_5 <span class="pl-k">=</span> tweens[propertyName];</td>
      </tr>
      <tr>
        <td id="L3797" class="blob-num js-line-number" data-line-number="3797"></td>
        <td id="LC3797" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">tween_5</span>.<span class="pl-c1">start</span> <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3798" class="blob-num js-line-number" data-line-number="3798"></td>
        <td id="LC3798" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Get the start value as it&#39;s not been passed in</span></td>
      </tr>
      <tr>
        <td id="L3799" class="blob-num js-line-number" data-line-number="3799"></td>
        <td id="LC3799" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> startValue <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">getPropertyValue</span>(<span class="pl-smi">activeCall</span>.<span class="pl-smi">element</span>, propertyName);</td>
      </tr>
      <tr>
        <td id="L3800" class="blob-num js-line-number" data-line-number="3800"></td>
        <td id="LC3800" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">isString</span>(startValue)) {</td>
      </tr>
      <tr>
        <td id="L3801" class="blob-num js-line-number" data-line-number="3801"></td>
        <td id="LC3801" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">tween_5</span>.<span class="pl-c1">start</span> <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">CSS</span>.<span class="pl-en">fixColors</span>(startValue);</td>
      </tr>
      <tr>
        <td id="L3802" class="blob-num js-line-number" data-line-number="3802"></td>
        <td id="LC3802" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">explodeTween</span>(propertyName, tween_5, duration);</td>
      </tr>
      <tr>
        <td id="L3803" class="blob-num js-line-number" data-line-number="3803"></td>
        <td id="LC3803" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(startValue)) {</td>
      </tr>
      <tr>
        <td id="L3804" class="blob-num js-line-number" data-line-number="3804"></td>
        <td id="LC3804" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad type<span class="pl-pds">&quot;</span></span>, tween_5, propertyName, startValue);</td>
      </tr>
      <tr>
        <td id="L3805" class="blob-num js-line-number" data-line-number="3805"></td>
        <td id="LC3805" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3806" class="blob-num js-line-number" data-line-number="3806"></td>
        <td id="LC3806" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3807" class="blob-num js-line-number" data-line-number="3807"></td>
        <td id="LC3807" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">debug</span>) {</td>
      </tr>
      <tr>
        <td id="L3808" class="blob-num js-line-number" data-line-number="3808"></td>
        <td id="LC3808" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tweensContainer (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> propertyName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>): <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(tween_5), element);</td>
      </tr>
      <tr>
        <td id="L3809" class="blob-num js-line-number" data-line-number="3809"></td>
        <td id="LC3809" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3810" class="blob-num js-line-number" data-line-number="3810"></td>
        <td id="LC3810" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3811" class="blob-num js-line-number" data-line-number="3811"></td>
        <td id="LC3811" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">activeCall</span>.<span class="pl-smi">_flags</span> <span class="pl-k">|=</span> <span class="pl-c1">1</span> <span class="pl-c"><span class="pl-c">/*</span> EXPANDED <span class="pl-c">*/</span></span>;</td>
      </tr>
      <tr>
        <td id="L3812" class="blob-num js-line-number" data-line-number="3812"></td>
        <td id="LC3812" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3813" class="blob-num js-line-number" data-line-number="3813"></td>
        <td id="LC3813" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">validateTweens</span> <span class="pl-k">=</span> validateTweens;</td>
      </tr>
      <tr>
        <td id="L3814" class="blob-num js-line-number" data-line-number="3814"></td>
        <td id="LC3814" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L3815" class="blob-num js-line-number" data-line-number="3815"></td>
        <td id="LC3815" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3816" class="blob-num js-line-number" data-line-number="3816"></td>
        <td id="LC3816" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L3817" class="blob-num js-line-number" data-line-number="3817"></td>
        <td id="LC3817" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L3818" class="blob-num js-line-number" data-line-number="3818"></td>
        <td id="LC3818" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3819" class="blob-num js-line-number" data-line-number="3819"></td>
        <td id="LC3819" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L3820" class="blob-num js-line-number" data-line-number="3820"></td>
        <td id="LC3820" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3821" class="blob-num js-line-number" data-line-number="3821"></td>
        <td id="LC3821" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validation functions used for various types of data that can be supplied.</span></td>
      </tr>
      <tr>
        <td id="L3822" class="blob-num js-line-number" data-line-number="3822"></td>
        <td id="LC3822" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * All errors are reported in the non-minified version for development. If a</span></td>
      </tr>
      <tr>
        <td id="L3823" class="blob-num js-line-number" data-line-number="3823"></td>
        <td id="LC3823" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * validation fails then it should return &lt;code&gt;undefined&lt;/code&gt;.</span></td>
      </tr>
      <tr>
        <td id="L3824" class="blob-num js-line-number" data-line-number="3824"></td>
        <td id="LC3824" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L3825" class="blob-num js-line-number" data-line-number="3825"></td>
        <td id="LC3825" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3826" class="blob-num js-line-number" data-line-number="3826"></td>
        <td id="LC3826" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Parse a duration value and return an ms number. Optionally return a</span></td>
      </tr>
      <tr>
        <td id="L3827" class="blob-num js-line-number" data-line-number="3827"></td>
        <td id="LC3827" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * default value if the number is not valid.</span></td>
      </tr>
      <tr>
        <td id="L3828" class="blob-num js-line-number" data-line-number="3828"></td>
        <td id="LC3828" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">parseDuration</span>(<span class="pl-smi">duration</span>, <span class="pl-smi">def</span>) {</td>
      </tr>
      <tr>
        <td id="L3829" class="blob-num js-line-number" data-line-number="3829"></td>
        <td id="LC3829" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isNumber</span>(duration)) {</td>
      </tr>
      <tr>
        <td id="L3830" class="blob-num js-line-number" data-line-number="3830"></td>
        <td id="LC3830" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> duration;</td>
      </tr>
      <tr>
        <td id="L3831" class="blob-num js-line-number" data-line-number="3831"></td>
        <td id="LC3831" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3832" class="blob-num js-line-number" data-line-number="3832"></td>
        <td id="LC3832" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isString</span>(duration)) {</td>
      </tr>
      <tr>
        <td id="L3833" class="blob-num js-line-number" data-line-number="3833"></td>
        <td id="LC3833" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> Duration[<span class="pl-smi">duration</span>.<span class="pl-c1">toLowerCase</span>()] <span class="pl-k">||</span> <span class="pl-c1">parseFloat</span>(<span class="pl-smi">duration</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ms<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>000<span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L3834" class="blob-num js-line-number" data-line-number="3834"></td>
        <td id="LC3834" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3835" class="blob-num js-line-number" data-line-number="3835"></td>
        <td id="LC3835" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> def <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-c1">undefined</span> <span class="pl-k">:</span> <span class="pl-en">parseDuration</span>(def);</td>
      </tr>
      <tr>
        <td id="L3836" class="blob-num js-line-number" data-line-number="3836"></td>
        <td id="LC3836" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3837" class="blob-num js-line-number" data-line-number="3837"></td>
        <td id="LC3837" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3838" class="blob-num js-line-number" data-line-number="3838"></td>
        <td id="LC3838" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3839" class="blob-num js-line-number" data-line-number="3839"></td>
        <td id="LC3839" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;cache&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3840" class="blob-num js-line-number" data-line-number="3840"></td>
        <td id="LC3840" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3841" class="blob-num js-line-number" data-line-number="3841"></td>
        <td id="LC3841" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateCache</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3842" class="blob-num js-line-number" data-line-number="3842"></td>
        <td id="LC3842" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isBoolean</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L3843" class="blob-num js-line-number" data-line-number="3843"></td>
        <td id="LC3843" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L3844" class="blob-num js-line-number" data-line-number="3844"></td>
        <td id="LC3844" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3845" class="blob-num js-line-number" data-line-number="3845"></td>
        <td id="LC3845" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3846" class="blob-num js-line-number" data-line-number="3846"></td>
        <td id="LC3846" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;cache&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3847" class="blob-num js-line-number" data-line-number="3847"></td>
        <td id="LC3847" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3848" class="blob-num js-line-number" data-line-number="3848"></td>
        <td id="LC3848" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3849" class="blob-num js-line-number" data-line-number="3849"></td>
        <td id="LC3849" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3850" class="blob-num js-line-number" data-line-number="3850"></td>
        <td id="LC3850" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3851" class="blob-num js-line-number" data-line-number="3851"></td>
        <td id="LC3851" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;begin&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3852" class="blob-num js-line-number" data-line-number="3852"></td>
        <td id="LC3852" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3853" class="blob-num js-line-number" data-line-number="3853"></td>
        <td id="LC3853" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateBegin</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3854" class="blob-num js-line-number" data-line-number="3854"></td>
        <td id="LC3854" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isFunction</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L3855" class="blob-num js-line-number" data-line-number="3855"></td>
        <td id="LC3855" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L3856" class="blob-num js-line-number" data-line-number="3856"></td>
        <td id="LC3856" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3857" class="blob-num js-line-number" data-line-number="3857"></td>
        <td id="LC3857" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3858" class="blob-num js-line-number" data-line-number="3858"></td>
        <td id="LC3858" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;begin&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3859" class="blob-num js-line-number" data-line-number="3859"></td>
        <td id="LC3859" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3860" class="blob-num js-line-number" data-line-number="3860"></td>
        <td id="LC3860" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3861" class="blob-num js-line-number" data-line-number="3861"></td>
        <td id="LC3861" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3862" class="blob-num js-line-number" data-line-number="3862"></td>
        <td id="LC3862" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3863" class="blob-num js-line-number" data-line-number="3863"></td>
        <td id="LC3863" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;complete&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3864" class="blob-num js-line-number" data-line-number="3864"></td>
        <td id="LC3864" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3865" class="blob-num js-line-number" data-line-number="3865"></td>
        <td id="LC3865" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateComplete</span>(<span class="pl-smi">value</span>, <span class="pl-smi">noError</span>) {</td>
      </tr>
      <tr>
        <td id="L3866" class="blob-num js-line-number" data-line-number="3866"></td>
        <td id="LC3866" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isFunction</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L3867" class="blob-num js-line-number" data-line-number="3867"></td>
        <td id="LC3867" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L3868" class="blob-num js-line-number" data-line-number="3868"></td>
        <td id="LC3868" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3869" class="blob-num js-line-number" data-line-number="3869"></td>
        <td id="LC3869" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>noError) {</td>
      </tr>
      <tr>
        <td id="L3870" class="blob-num js-line-number" data-line-number="3870"></td>
        <td id="LC3870" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;complete&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3871" class="blob-num js-line-number" data-line-number="3871"></td>
        <td id="LC3871" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3872" class="blob-num js-line-number" data-line-number="3872"></td>
        <td id="LC3872" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3873" class="blob-num js-line-number" data-line-number="3873"></td>
        <td id="LC3873" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3874" class="blob-num js-line-number" data-line-number="3874"></td>
        <td id="LC3874" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3875" class="blob-num js-line-number" data-line-number="3875"></td>
        <td id="LC3875" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;delay&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3876" class="blob-num js-line-number" data-line-number="3876"></td>
        <td id="LC3876" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3877" class="blob-num js-line-number" data-line-number="3877"></td>
        <td id="LC3877" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateDelay</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3878" class="blob-num js-line-number" data-line-number="3878"></td>
        <td id="LC3878" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> parsed <span class="pl-k">=</span> <span class="pl-en">parseDuration</span>(value);</td>
      </tr>
      <tr>
        <td id="L3879" class="blob-num js-line-number" data-line-number="3879"></td>
        <td id="LC3879" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(parsed)) {</td>
      </tr>
      <tr>
        <td id="L3880" class="blob-num js-line-number" data-line-number="3880"></td>
        <td id="LC3880" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> parsed;</td>
      </tr>
      <tr>
        <td id="L3881" class="blob-num js-line-number" data-line-number="3881"></td>
        <td id="LC3881" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3882" class="blob-num js-line-number" data-line-number="3882"></td>
        <td id="LC3882" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3883" class="blob-num js-line-number" data-line-number="3883"></td>
        <td id="LC3883" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;delay&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3884" class="blob-num js-line-number" data-line-number="3884"></td>
        <td id="LC3884" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3885" class="blob-num js-line-number" data-line-number="3885"></td>
        <td id="LC3885" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3886" class="blob-num js-line-number" data-line-number="3886"></td>
        <td id="LC3886" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3887" class="blob-num js-line-number" data-line-number="3887"></td>
        <td id="LC3887" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3888" class="blob-num js-line-number" data-line-number="3888"></td>
        <td id="LC3888" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;duration&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3889" class="blob-num js-line-number" data-line-number="3889"></td>
        <td id="LC3889" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3890" class="blob-num js-line-number" data-line-number="3890"></td>
        <td id="LC3890" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateDuration</span>(<span class="pl-smi">value</span>, <span class="pl-smi">noError</span>) {</td>
      </tr>
      <tr>
        <td id="L3891" class="blob-num js-line-number" data-line-number="3891"></td>
        <td id="LC3891" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> parsed <span class="pl-k">=</span> <span class="pl-en">parseDuration</span>(value);</td>
      </tr>
      <tr>
        <td id="L3892" class="blob-num js-line-number" data-line-number="3892"></td>
        <td id="LC3892" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(parsed) <span class="pl-k">&amp;&amp;</span> parsed <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3893" class="blob-num js-line-number" data-line-number="3893"></td>
        <td id="LC3893" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> parsed;</td>
      </tr>
      <tr>
        <td id="L3894" class="blob-num js-line-number" data-line-number="3894"></td>
        <td id="LC3894" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3895" class="blob-num js-line-number" data-line-number="3895"></td>
        <td id="LC3895" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>noError) {</td>
      </tr>
      <tr>
        <td id="L3896" class="blob-num js-line-number" data-line-number="3896"></td>
        <td id="LC3896" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;duration&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3897" class="blob-num js-line-number" data-line-number="3897"></td>
        <td id="LC3897" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3898" class="blob-num js-line-number" data-line-number="3898"></td>
        <td id="LC3898" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3899" class="blob-num js-line-number" data-line-number="3899"></td>
        <td id="LC3899" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3900" class="blob-num js-line-number" data-line-number="3900"></td>
        <td id="LC3900" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3901" class="blob-num js-line-number" data-line-number="3901"></td>
        <td id="LC3901" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;easing&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3902" class="blob-num js-line-number" data-line-number="3902"></td>
        <td id="LC3902" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3903" class="blob-num js-line-number" data-line-number="3903"></td>
        <td id="LC3903" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateEasing</span>(<span class="pl-smi">value</span>, <span class="pl-smi">duration</span>, <span class="pl-smi">noError</span>) {</td>
      </tr>
      <tr>
        <td id="L3904" class="blob-num js-line-number" data-line-number="3904"></td>
        <td id="LC3904" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Easing <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Easing</span>;</td>
      </tr>
      <tr>
        <td id="L3905" class="blob-num js-line-number" data-line-number="3905"></td>
        <td id="LC3905" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isString</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L3906" class="blob-num js-line-number" data-line-number="3906"></td>
        <td id="LC3906" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Named easing</span></td>
      </tr>
      <tr>
        <td id="L3907" class="blob-num js-line-number" data-line-number="3907"></td>
        <td id="LC3907" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">Easing</span>.<span class="pl-smi">Easings</span>[value];</td>
      </tr>
      <tr>
        <td id="L3908" class="blob-num js-line-number" data-line-number="3908"></td>
        <td id="LC3908" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3909" class="blob-num js-line-number" data-line-number="3909"></td>
        <td id="LC3909" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isFunction</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L3910" class="blob-num js-line-number" data-line-number="3910"></td>
        <td id="LC3910" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L3911" class="blob-num js-line-number" data-line-number="3911"></td>
        <td id="LC3911" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3912" class="blob-num js-line-number" data-line-number="3912"></td>
        <td id="LC3912" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L3913" class="blob-num js-line-number" data-line-number="3913"></td>
        <td id="LC3913" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">value</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3914" class="blob-num js-line-number" data-line-number="3914"></td>
        <td id="LC3914" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Steps</span></td>
      </tr>
      <tr>
        <td id="L3915" class="blob-num js-line-number" data-line-number="3915"></td>
        <td id="LC3915" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">Easing</span>.<span class="pl-en">generateStep</span>(value[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L3916" class="blob-num js-line-number" data-line-number="3916"></td>
        <td id="LC3916" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3917" class="blob-num js-line-number" data-line-number="3917"></td>
        <td id="LC3917" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">value</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L3918" class="blob-num js-line-number" data-line-number="3918"></td>
        <td id="LC3918" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> springRK4 must be passed the animation&#39;s duration.</span></td>
      </tr>
      <tr>
        <td id="L3919" class="blob-num js-line-number" data-line-number="3919"></td>
        <td id="LC3919" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Note: If the springRK4 array contains non-numbers,</span></td>
      </tr>
      <tr>
        <td id="L3920" class="blob-num js-line-number" data-line-number="3920"></td>
        <td id="LC3920" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> generateSpringRK4() returns an easing function generated with</span></td>
      </tr>
      <tr>
        <td id="L3921" class="blob-num js-line-number" data-line-number="3921"></td>
        <td id="LC3921" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> default tension and friction values.</span></td>
      </tr>
      <tr>
        <td id="L3922" class="blob-num js-line-number" data-line-number="3922"></td>
        <td id="LC3922" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">Easing</span>.<span class="pl-en">generateSpringRK4</span>(value[<span class="pl-c1">0</span>], value[<span class="pl-c1">1</span>], duration);</td>
      </tr>
      <tr>
        <td id="L3923" class="blob-num js-line-number" data-line-number="3923"></td>
        <td id="LC3923" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3924" class="blob-num js-line-number" data-line-number="3924"></td>
        <td id="LC3924" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">value</span>.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">4</span>) {</td>
      </tr>
      <tr>
        <td id="L3925" class="blob-num js-line-number" data-line-number="3925"></td>
        <td id="LC3925" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Note: If the bezier array contains non-numbers, generateBezier()</span></td>
      </tr>
      <tr>
        <td id="L3926" class="blob-num js-line-number" data-line-number="3926"></td>
        <td id="LC3926" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> returns undefined.</span></td>
      </tr>
      <tr>
        <td id="L3927" class="blob-num js-line-number" data-line-number="3927"></td>
        <td id="LC3927" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">Easing</span>.<span class="pl-smi">generateBezier</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>, value) <span class="pl-k">||</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3928" class="blob-num js-line-number" data-line-number="3928"></td>
        <td id="LC3928" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3929" class="blob-num js-line-number" data-line-number="3929"></td>
        <td id="LC3929" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3930" class="blob-num js-line-number" data-line-number="3930"></td>
        <td id="LC3930" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>noError) {</td>
      </tr>
      <tr>
        <td id="L3931" class="blob-num js-line-number" data-line-number="3931"></td>
        <td id="LC3931" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;easing&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3932" class="blob-num js-line-number" data-line-number="3932"></td>
        <td id="LC3932" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3933" class="blob-num js-line-number" data-line-number="3933"></td>
        <td id="LC3933" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3934" class="blob-num js-line-number" data-line-number="3934"></td>
        <td id="LC3934" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3935" class="blob-num js-line-number" data-line-number="3935"></td>
        <td id="LC3935" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3936" class="blob-num js-line-number" data-line-number="3936"></td>
        <td id="LC3936" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;fpsLimit&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3937" class="blob-num js-line-number" data-line-number="3937"></td>
        <td id="LC3937" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3938" class="blob-num js-line-number" data-line-number="3938"></td>
        <td id="LC3938" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateFpsLimit</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3939" class="blob-num js-line-number" data-line-number="3939"></td>
        <td id="LC3939" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L3940" class="blob-num js-line-number" data-line-number="3940"></td>
        <td id="LC3940" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3941" class="blob-num js-line-number" data-line-number="3941"></td>
        <td id="LC3941" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3942" class="blob-num js-line-number" data-line-number="3942"></td>
        <td id="LC3942" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> parsed <span class="pl-k">=</span> <span class="pl-c1">parseInt</span>(value, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L3943" class="blob-num js-line-number" data-line-number="3943"></td>
        <td id="LC3943" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(parsed) <span class="pl-k">&amp;&amp;</span> parsed <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3944" class="blob-num js-line-number" data-line-number="3944"></td>
        <td id="LC3944" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(parsed, <span class="pl-c1">60</span>);</td>
      </tr>
      <tr>
        <td id="L3945" class="blob-num js-line-number" data-line-number="3945"></td>
        <td id="LC3945" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3946" class="blob-num js-line-number" data-line-number="3946"></td>
        <td id="LC3946" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3947" class="blob-num js-line-number" data-line-number="3947"></td>
        <td id="LC3947" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3948" class="blob-num js-line-number" data-line-number="3948"></td>
        <td id="LC3948" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;fpsLimit&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3949" class="blob-num js-line-number" data-line-number="3949"></td>
        <td id="LC3949" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3950" class="blob-num js-line-number" data-line-number="3950"></td>
        <td id="LC3950" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3951" class="blob-num js-line-number" data-line-number="3951"></td>
        <td id="LC3951" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3952" class="blob-num js-line-number" data-line-number="3952"></td>
        <td id="LC3952" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3953" class="blob-num js-line-number" data-line-number="3953"></td>
        <td id="LC3953" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;loop&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3954" class="blob-num js-line-number" data-line-number="3954"></td>
        <td id="LC3954" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3955" class="blob-num js-line-number" data-line-number="3955"></td>
        <td id="LC3955" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateLoop</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3956" class="blob-num js-line-number" data-line-number="3956"></td>
        <td id="LC3956" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L3957" class="blob-num js-line-number" data-line-number="3957"></td>
        <td id="LC3957" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3958" class="blob-num js-line-number" data-line-number="3958"></td>
        <td id="LC3958" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L3959" class="blob-num js-line-number" data-line-number="3959"></td>
        <td id="LC3959" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3960" class="blob-num js-line-number" data-line-number="3960"></td>
        <td id="LC3960" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3961" class="blob-num js-line-number" data-line-number="3961"></td>
        <td id="LC3961" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> parsed <span class="pl-k">=</span> <span class="pl-c1">parseInt</span>(value, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L3962" class="blob-num js-line-number" data-line-number="3962"></td>
        <td id="LC3962" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(parsed) <span class="pl-k">&amp;&amp;</span> parsed <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3963" class="blob-num js-line-number" data-line-number="3963"></td>
        <td id="LC3963" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> parsed;</td>
      </tr>
      <tr>
        <td id="L3964" class="blob-num js-line-number" data-line-number="3964"></td>
        <td id="LC3964" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3965" class="blob-num js-line-number" data-line-number="3965"></td>
        <td id="LC3965" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3966" class="blob-num js-line-number" data-line-number="3966"></td>
        <td id="LC3966" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3967" class="blob-num js-line-number" data-line-number="3967"></td>
        <td id="LC3967" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;loop&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3968" class="blob-num js-line-number" data-line-number="3968"></td>
        <td id="LC3968" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3969" class="blob-num js-line-number" data-line-number="3969"></td>
        <td id="LC3969" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3970" class="blob-num js-line-number" data-line-number="3970"></td>
        <td id="LC3970" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3971" class="blob-num js-line-number" data-line-number="3971"></td>
        <td id="LC3971" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3972" class="blob-num js-line-number" data-line-number="3972"></td>
        <td id="LC3972" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;progress&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3973" class="blob-num js-line-number" data-line-number="3973"></td>
        <td id="LC3973" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3974" class="blob-num js-line-number" data-line-number="3974"></td>
        <td id="LC3974" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateProgress</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3975" class="blob-num js-line-number" data-line-number="3975"></td>
        <td id="LC3975" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isFunction</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L3976" class="blob-num js-line-number" data-line-number="3976"></td>
        <td id="LC3976" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L3977" class="blob-num js-line-number" data-line-number="3977"></td>
        <td id="LC3977" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3978" class="blob-num js-line-number" data-line-number="3978"></td>
        <td id="LC3978" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3979" class="blob-num js-line-number" data-line-number="3979"></td>
        <td id="LC3979" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;progress&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3980" class="blob-num js-line-number" data-line-number="3980"></td>
        <td id="LC3980" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3981" class="blob-num js-line-number" data-line-number="3981"></td>
        <td id="LC3981" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3982" class="blob-num js-line-number" data-line-number="3982"></td>
        <td id="LC3982" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3983" class="blob-num js-line-number" data-line-number="3983"></td>
        <td id="LC3983" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3984" class="blob-num js-line-number" data-line-number="3984"></td>
        <td id="LC3984" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;promise&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3985" class="blob-num js-line-number" data-line-number="3985"></td>
        <td id="LC3985" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3986" class="blob-num js-line-number" data-line-number="3986"></td>
        <td id="LC3986" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validatePromise</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3987" class="blob-num js-line-number" data-line-number="3987"></td>
        <td id="LC3987" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isBoolean</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L3988" class="blob-num js-line-number" data-line-number="3988"></td>
        <td id="LC3988" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L3989" class="blob-num js-line-number" data-line-number="3989"></td>
        <td id="LC3989" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3990" class="blob-num js-line-number" data-line-number="3990"></td>
        <td id="LC3990" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3991" class="blob-num js-line-number" data-line-number="3991"></td>
        <td id="LC3991" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;promise&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L3992" class="blob-num js-line-number" data-line-number="3992"></td>
        <td id="LC3992" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3993" class="blob-num js-line-number" data-line-number="3993"></td>
        <td id="LC3993" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3994" class="blob-num js-line-number" data-line-number="3994"></td>
        <td id="LC3994" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3995" class="blob-num js-line-number" data-line-number="3995"></td>
        <td id="LC3995" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L3996" class="blob-num js-line-number" data-line-number="3996"></td>
        <td id="LC3996" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;promiseRejectEmpty&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L3997" class="blob-num js-line-number" data-line-number="3997"></td>
        <td id="LC3997" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L3998" class="blob-num js-line-number" data-line-number="3998"></td>
        <td id="LC3998" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validatePromiseRejectEmpty</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3999" class="blob-num js-line-number" data-line-number="3999"></td>
        <td id="LC3999" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isBoolean</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L4000" class="blob-num js-line-number" data-line-number="4000"></td>
        <td id="LC4000" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L4001" class="blob-num js-line-number" data-line-number="4001"></td>
        <td id="LC4001" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4002" class="blob-num js-line-number" data-line-number="4002"></td>
        <td id="LC4002" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4003" class="blob-num js-line-number" data-line-number="4003"></td>
        <td id="LC4003" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;promiseRejectEmpty&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L4004" class="blob-num js-line-number" data-line-number="4004"></td>
        <td id="LC4004" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4005" class="blob-num js-line-number" data-line-number="4005"></td>
        <td id="LC4005" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4006" class="blob-num js-line-number" data-line-number="4006"></td>
        <td id="LC4006" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4007" class="blob-num js-line-number" data-line-number="4007"></td>
        <td id="LC4007" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4008" class="blob-num js-line-number" data-line-number="4008"></td>
        <td id="LC4008" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;queue&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L4009" class="blob-num js-line-number" data-line-number="4009"></td>
        <td id="LC4009" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L4010" class="blob-num js-line-number" data-line-number="4010"></td>
        <td id="LC4010" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateQueue</span>(<span class="pl-smi">value</span>, <span class="pl-smi">noError</span>) {</td>
      </tr>
      <tr>
        <td id="L4011" class="blob-num js-line-number" data-line-number="4011"></td>
        <td id="LC4011" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">false</span> <span class="pl-k">||</span> <span class="pl-en">isString</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L4012" class="blob-num js-line-number" data-line-number="4012"></td>
        <td id="LC4012" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L4013" class="blob-num js-line-number" data-line-number="4013"></td>
        <td id="LC4013" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4014" class="blob-num js-line-number" data-line-number="4014"></td>
        <td id="LC4014" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>noError) {</td>
      </tr>
      <tr>
        <td id="L4015" class="blob-num js-line-number" data-line-number="4015"></td>
        <td id="LC4015" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;queue&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L4016" class="blob-num js-line-number" data-line-number="4016"></td>
        <td id="LC4016" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4017" class="blob-num js-line-number" data-line-number="4017"></td>
        <td id="LC4017" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4018" class="blob-num js-line-number" data-line-number="4018"></td>
        <td id="LC4018" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4019" class="blob-num js-line-number" data-line-number="4019"></td>
        <td id="LC4019" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4020" class="blob-num js-line-number" data-line-number="4020"></td>
        <td id="LC4020" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;repeat&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L4021" class="blob-num js-line-number" data-line-number="4021"></td>
        <td id="LC4021" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L4022" class="blob-num js-line-number" data-line-number="4022"></td>
        <td id="LC4022" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateRepeat</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L4023" class="blob-num js-line-number" data-line-number="4023"></td>
        <td id="LC4023" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L4024" class="blob-num js-line-number" data-line-number="4024"></td>
        <td id="LC4024" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4025" class="blob-num js-line-number" data-line-number="4025"></td>
        <td id="LC4025" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L4026" class="blob-num js-line-number" data-line-number="4026"></td>
        <td id="LC4026" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4027" class="blob-num js-line-number" data-line-number="4027"></td>
        <td id="LC4027" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4028" class="blob-num js-line-number" data-line-number="4028"></td>
        <td id="LC4028" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> parsed <span class="pl-k">=</span> <span class="pl-c1">parseInt</span>(value, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L4029" class="blob-num js-line-number" data-line-number="4029"></td>
        <td id="LC4029" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(parsed) <span class="pl-k">&amp;&amp;</span> parsed <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4030" class="blob-num js-line-number" data-line-number="4030"></td>
        <td id="LC4030" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> parsed;</td>
      </tr>
      <tr>
        <td id="L4031" class="blob-num js-line-number" data-line-number="4031"></td>
        <td id="LC4031" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4032" class="blob-num js-line-number" data-line-number="4032"></td>
        <td id="LC4032" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4033" class="blob-num js-line-number" data-line-number="4033"></td>
        <td id="LC4033" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4034" class="blob-num js-line-number" data-line-number="4034"></td>
        <td id="LC4034" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;repeat&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L4035" class="blob-num js-line-number" data-line-number="4035"></td>
        <td id="LC4035" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4036" class="blob-num js-line-number" data-line-number="4036"></td>
        <td id="LC4036" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4037" class="blob-num js-line-number" data-line-number="4037"></td>
        <td id="LC4037" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4038" class="blob-num js-line-number" data-line-number="4038"></td>
        <td id="LC4038" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4039" class="blob-num js-line-number" data-line-number="4039"></td>
        <td id="LC4039" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;speed&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L4040" class="blob-num js-line-number" data-line-number="4040"></td>
        <td id="LC4040" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L4041" class="blob-num js-line-number" data-line-number="4041"></td>
        <td id="LC4041" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateSpeed</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L4042" class="blob-num js-line-number" data-line-number="4042"></td>
        <td id="LC4042" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isNumber</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L4043" class="blob-num js-line-number" data-line-number="4043"></td>
        <td id="LC4043" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L4044" class="blob-num js-line-number" data-line-number="4044"></td>
        <td id="LC4044" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4045" class="blob-num js-line-number" data-line-number="4045"></td>
        <td id="LC4045" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4046" class="blob-num js-line-number" data-line-number="4046"></td>
        <td id="LC4046" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;speed&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L4047" class="blob-num js-line-number" data-line-number="4047"></td>
        <td id="LC4047" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4048" class="blob-num js-line-number" data-line-number="4048"></td>
        <td id="LC4048" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4049" class="blob-num js-line-number" data-line-number="4049"></td>
        <td id="LC4049" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4050" class="blob-num js-line-number" data-line-number="4050"></td>
        <td id="LC4050" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4051" class="blob-num js-line-number" data-line-number="4051"></td>
        <td id="LC4051" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Validate a &lt;code&gt;sync&lt;/code&gt; option.</span></td>
      </tr>
      <tr>
        <td id="L4052" class="blob-num js-line-number" data-line-number="4052"></td>
        <td id="LC4052" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L4053" class="blob-num js-line-number" data-line-number="4053"></td>
        <td id="LC4053" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">function</span> <span class="pl-en">validateSync</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L4054" class="blob-num js-line-number" data-line-number="4054"></td>
        <td id="LC4054" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isBoolean</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L4055" class="blob-num js-line-number" data-line-number="4055"></td>
        <td id="LC4055" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L4056" class="blob-num js-line-number" data-line-number="4056"></td>
        <td id="LC4056" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4057" class="blob-num js-line-number" data-line-number="4057"></td>
        <td id="LC4057" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4058" class="blob-num js-line-number" data-line-number="4058"></td>
        <td id="LC4058" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Trying to set &#39;sync&#39; to an invalid value:<span class="pl-pds">&quot;</span></span>, value);</td>
      </tr>
      <tr>
        <td id="L4059" class="blob-num js-line-number" data-line-number="4059"></td>
        <td id="LC4059" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4060" class="blob-num js-line-number" data-line-number="4060"></td>
        <td id="LC4060" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4061" class="blob-num js-line-number" data-line-number="4061"></td>
        <td id="LC4061" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4062" class="blob-num js-line-number" data-line-number="4062"></td>
        <td id="LC4062" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L4063" class="blob-num js-line-number" data-line-number="4063"></td>
        <td id="LC4063" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L4064" class="blob-num js-line-number" data-line-number="4064"></td>
        <td id="LC4064" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4065" class="blob-num js-line-number" data-line-number="4065"></td>
        <td id="LC4065" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L4066" class="blob-num js-line-number" data-line-number="4066"></td>
        <td id="LC4066" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4067" class="blob-num js-line-number" data-line-number="4067"></td>
        <td id="LC4067" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Velocity version (should grab from package.json during build).</span></td>
      </tr>
      <tr>
        <td id="L4068" class="blob-num js-line-number" data-line-number="4068"></td>
        <td id="LC4068" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">var</span> VelocityStatic;</td>
      </tr>
      <tr>
        <td id="L4069" class="blob-num js-line-number" data-line-number="4069"></td>
        <td id="LC4069" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4070" class="blob-num js-line-number" data-line-number="4070"></td>
        <td id="LC4070" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">VelocityStatic</span>) {</td>
      </tr>
      <tr>
        <td id="L4071" class="blob-num js-line-number" data-line-number="4071"></td>
        <td id="LC4071" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">VelocityStatic</span>.<span class="pl-c1">version</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>2.0.1<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4072" class="blob-num js-line-number" data-line-number="4072"></td>
        <td id="LC4072" class="blob-code blob-code-inner js-file-line">})(VelocityStatic <span class="pl-k">||</span> (VelocityStatic <span class="pl-k">=</span> {}));</td>
      </tr>
      <tr>
        <td id="L4073" class="blob-num js-line-number" data-line-number="4073"></td>
        <td id="LC4073" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4074" class="blob-num js-line-number" data-line-number="4074"></td>
        <td id="LC4074" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L4075" class="blob-num js-line-number" data-line-number="4075"></td>
        <td id="LC4075" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L4076" class="blob-num js-line-number" data-line-number="4076"></td>
        <td id="LC4076" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4077" class="blob-num js-line-number" data-line-number="4077"></td>
        <td id="LC4077" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L4078" class="blob-num js-line-number" data-line-number="4078"></td>
        <td id="LC4078" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4079" class="blob-num js-line-number" data-line-number="4079"></td>
        <td id="LC4079" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Core &quot;Velocity&quot; function.</span></td>
      </tr>
      <tr>
        <td id="L4080" class="blob-num js-line-number" data-line-number="4080"></td>
        <td id="LC4080" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4081" class="blob-num js-line-number" data-line-number="4081"></td>
        <td id="LC4081" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">VelocityFn</span>() {</td>
      </tr>
      <tr>
        <td id="L4082" class="blob-num js-line-number" data-line-number="4082"></td>
        <td id="LC4082" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> __args <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4083" class="blob-num js-line-number" data-line-number="4083"></td>
        <td id="LC4083" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> _i <span class="pl-k">=</span> <span class="pl-c1">0</span>; _i <span class="pl-k">&lt;</span> <span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>; _i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L4084" class="blob-num js-line-number" data-line-number="4084"></td>
        <td id="LC4084" class="blob-code blob-code-inner js-file-line">        __args[_i] <span class="pl-k">=</span> <span class="pl-c1">arguments</span>[_i];</td>
      </tr>
      <tr>
        <td id="L4085" class="blob-num js-line-number" data-line-number="4085"></td>
        <td id="LC4085" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4086" class="blob-num js-line-number" data-line-number="4086"></td>
        <td id="LC4086" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> </td>
      </tr>
      <tr>
        <td id="L4087" class="blob-num js-line-number" data-line-number="4087"></td>
        <td id="LC4087" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4088" class="blob-num js-line-number" data-line-number="4088"></td>
        <td id="LC4088" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * A shortcut to the default options.</span></td>
      </tr>
      <tr>
        <td id="L4089" class="blob-num js-line-number" data-line-number="4089"></td>
        <td id="LC4089" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4090" class="blob-num js-line-number" data-line-number="4090"></td>
        <td id="LC4090" class="blob-code blob-code-inner js-file-line">    defaults <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">defaults</span>, </td>
      </tr>
      <tr>
        <td id="L4091" class="blob-num js-line-number" data-line-number="4091"></td>
        <td id="LC4091" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4092" class="blob-num js-line-number" data-line-number="4092"></td>
        <td id="LC4092" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Shortcut to arguments for file size.</span></td>
      </tr>
      <tr>
        <td id="L4093" class="blob-num js-line-number" data-line-number="4093"></td>
        <td id="LC4093" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4094" class="blob-num js-line-number" data-line-number="4094"></td>
        <td id="LC4094" class="blob-code blob-code-inner js-file-line">    _arguments <span class="pl-k">=</span> <span class="pl-c1">arguments</span>, </td>
      </tr>
      <tr>
        <td id="L4095" class="blob-num js-line-number" data-line-number="4095"></td>
        <td id="LC4095" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4096" class="blob-num js-line-number" data-line-number="4096"></td>
        <td id="LC4096" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Cache of the first argument - this is used often enough to be saved.</span></td>
      </tr>
      <tr>
        <td id="L4097" class="blob-num js-line-number" data-line-number="4097"></td>
        <td id="LC4097" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4098" class="blob-num js-line-number" data-line-number="4098"></td>
        <td id="LC4098" class="blob-code blob-code-inner js-file-line">    args0 <span class="pl-k">=</span> _arguments[<span class="pl-c1">0</span>], </td>
      </tr>
      <tr>
        <td id="L4099" class="blob-num js-line-number" data-line-number="4099"></td>
        <td id="LC4099" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4100" class="blob-num js-line-number" data-line-number="4100"></td>
        <td id="LC4100" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * To allow for expressive CoffeeScript code, Velocity supports an</span></td>
      </tr>
      <tr>
        <td id="L4101" class="blob-num js-line-number" data-line-number="4101"></td>
        <td id="LC4101" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * alternative syntax in which &quot;elements&quot; (or &quot;e&quot;), &quot;properties&quot; (or</span></td>
      </tr>
      <tr>
        <td id="L4102" class="blob-num js-line-number" data-line-number="4102"></td>
        <td id="LC4102" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &quot;p&quot;), and &quot;options&quot; (or &quot;o&quot;) objects are defined on a container</span></td>
      </tr>
      <tr>
        <td id="L4103" class="blob-num js-line-number" data-line-number="4103"></td>
        <td id="LC4103" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * object that&#39;s passed in as Velocity&#39;s sole argument.</span></td>
      </tr>
      <tr>
        <td id="L4104" class="blob-num js-line-number" data-line-number="4104"></td>
        <td id="LC4104" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4105" class="blob-num js-line-number" data-line-number="4105"></td>
        <td id="LC4105" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Note: Some browsers automatically populate arguments with a</span></td>
      </tr>
      <tr>
        <td id="L4106" class="blob-num js-line-number" data-line-number="4106"></td>
        <td id="LC4106" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &quot;properties&quot; object. We detect it by checking for its default</span></td>
      </tr>
      <tr>
        <td id="L4107" class="blob-num js-line-number" data-line-number="4107"></td>
        <td id="LC4107" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &quot;names&quot; property.</span></td>
      </tr>
      <tr>
        <td id="L4108" class="blob-num js-line-number" data-line-number="4108"></td>
        <td id="LC4108" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4109" class="blob-num js-line-number" data-line-number="4109"></td>
        <td id="LC4109" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> TODO: Confirm which browsers - if &lt;=IE8 the we can drop completely</span></td>
      </tr>
      <tr>
        <td id="L4110" class="blob-num js-line-number" data-line-number="4110"></td>
        <td id="LC4110" class="blob-code blob-code-inner js-file-line">    syntacticSugar <span class="pl-k">=</span> <span class="pl-en">isPlainObject</span>(args0) <span class="pl-k">&amp;&amp;</span> (<span class="pl-smi">args0</span>.<span class="pl-smi">p</span> <span class="pl-k">||</span> (<span class="pl-en">isPlainObject</span>(<span class="pl-smi">args0</span>.<span class="pl-smi">properties</span>) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-smi">args0</span>.<span class="pl-smi">properties</span>.<span class="pl-smi">names</span> <span class="pl-k">||</span> <span class="pl-en">isString</span>(<span class="pl-smi">args0</span>.<span class="pl-smi">properties</span>)));</td>
      </tr>
      <tr>
        <td id="L4111" class="blob-num js-line-number" data-line-number="4111"></td>
        <td id="LC4111" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> </td>
      </tr>
      <tr>
        <td id="L4112" class="blob-num js-line-number" data-line-number="4112"></td>
        <td id="LC4112" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4113" class="blob-num js-line-number" data-line-number="4113"></td>
        <td id="LC4113" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *  When Velocity is called via the utility function (Velocity()),</span></td>
      </tr>
      <tr>
        <td id="L4114" class="blob-num js-line-number" data-line-number="4114"></td>
        <td id="LC4114" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * elements are explicitly passed in as the first parameter. Thus,</span></td>
      </tr>
      <tr>
        <td id="L4115" class="blob-num js-line-number" data-line-number="4115"></td>
        <td id="LC4115" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * argument positioning varies.</span></td>
      </tr>
      <tr>
        <td id="L4116" class="blob-num js-line-number" data-line-number="4116"></td>
        <td id="LC4116" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4117" class="blob-num js-line-number" data-line-number="4117"></td>
        <td id="LC4117" class="blob-code blob-code-inner js-file-line">    argumentIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>, </td>
      </tr>
      <tr>
        <td id="L4118" class="blob-num js-line-number" data-line-number="4118"></td>
        <td id="LC4118" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4119" class="blob-num js-line-number" data-line-number="4119"></td>
        <td id="LC4119" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The list of elements, extended with Promise and Velocity.</span></td>
      </tr>
      <tr>
        <td id="L4120" class="blob-num js-line-number" data-line-number="4120"></td>
        <td id="LC4120" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4121" class="blob-num js-line-number" data-line-number="4121"></td>
        <td id="LC4121" class="blob-code blob-code-inner js-file-line">    elements, </td>
      </tr>
      <tr>
        <td id="L4122" class="blob-num js-line-number" data-line-number="4122"></td>
        <td id="LC4122" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4123" class="blob-num js-line-number" data-line-number="4123"></td>
        <td id="LC4123" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The properties being animated. This can be a string, in which case it</span></td>
      </tr>
      <tr>
        <td id="L4124" class="blob-num js-line-number" data-line-number="4124"></td>
        <td id="LC4124" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * is either a function for these elements, or it is a &quot;named&quot; animation</span></td>
      </tr>
      <tr>
        <td id="L4125" class="blob-num js-line-number" data-line-number="4125"></td>
        <td id="LC4125" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * sequence to use instead. Named sequences start with either &quot;callout.&quot;</span></td>
      </tr>
      <tr>
        <td id="L4126" class="blob-num js-line-number" data-line-number="4126"></td>
        <td id="LC4126" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * or &quot;transition.&quot;. When used as a callout the values will be reset</span></td>
      </tr>
      <tr>
        <td id="L4127" class="blob-num js-line-number" data-line-number="4127"></td>
        <td id="LC4127" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * after finishing. When used as a transtition then there is no special</span></td>
      </tr>
      <tr>
        <td id="L4128" class="blob-num js-line-number" data-line-number="4128"></td>
        <td id="LC4128" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * handling after finishing.</span></td>
      </tr>
      <tr>
        <td id="L4129" class="blob-num js-line-number" data-line-number="4129"></td>
        <td id="LC4129" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4130" class="blob-num js-line-number" data-line-number="4130"></td>
        <td id="LC4130" class="blob-code blob-code-inner js-file-line">    propertiesMap, </td>
      </tr>
      <tr>
        <td id="L4131" class="blob-num js-line-number" data-line-number="4131"></td>
        <td id="LC4131" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4132" class="blob-num js-line-number" data-line-number="4132"></td>
        <td id="LC4132" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Options supplied, this will be mapped and validated into</span></td>
      </tr>
      <tr>
        <td id="L4133" class="blob-num js-line-number" data-line-number="4133"></td>
        <td id="LC4133" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;code&gt;options&lt;/code&gt;.</span></td>
      </tr>
      <tr>
        <td id="L4134" class="blob-num js-line-number" data-line-number="4134"></td>
        <td id="LC4134" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4135" class="blob-num js-line-number" data-line-number="4135"></td>
        <td id="LC4135" class="blob-code blob-code-inner js-file-line">    optionsMap, </td>
      </tr>
      <tr>
        <td id="L4136" class="blob-num js-line-number" data-line-number="4136"></td>
        <td id="LC4136" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4137" class="blob-num js-line-number" data-line-number="4137"></td>
        <td id="LC4137" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * If called via a chain then this contains the &lt;b&gt;last&lt;/b&gt; calls</span></td>
      </tr>
      <tr>
        <td id="L4138" class="blob-num js-line-number" data-line-number="4138"></td>
        <td id="LC4138" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * animations. If this does not have a value then any access to the</span></td>
      </tr>
      <tr>
        <td id="L4139" class="blob-num js-line-number" data-line-number="4139"></td>
        <td id="LC4139" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * element&#39;s animations needs to be to the currently-running ones.</span></td>
      </tr>
      <tr>
        <td id="L4140" class="blob-num js-line-number" data-line-number="4140"></td>
        <td id="LC4140" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4141" class="blob-num js-line-number" data-line-number="4141"></td>
        <td id="LC4141" class="blob-code blob-code-inner js-file-line">    animations, </td>
      </tr>
      <tr>
        <td id="L4142" class="blob-num js-line-number" data-line-number="4142"></td>
        <td id="LC4142" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4143" class="blob-num js-line-number" data-line-number="4143"></td>
        <td id="LC4143" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The promise that is returned.</span></td>
      </tr>
      <tr>
        <td id="L4144" class="blob-num js-line-number" data-line-number="4144"></td>
        <td id="LC4144" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4145" class="blob-num js-line-number" data-line-number="4145"></td>
        <td id="LC4145" class="blob-code blob-code-inner js-file-line">    promise, </td>
      </tr>
      <tr>
        <td id="L4146" class="blob-num js-line-number" data-line-number="4146"></td>
        <td id="LC4146" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Used when the animation is finished</span></td>
      </tr>
      <tr>
        <td id="L4147" class="blob-num js-line-number" data-line-number="4147"></td>
        <td id="LC4147" class="blob-code blob-code-inner js-file-line">    resolver, </td>
      </tr>
      <tr>
        <td id="L4148" class="blob-num js-line-number" data-line-number="4148"></td>
        <td id="LC4148" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Used when there was an issue with one or more of the Velocity arguments</span></td>
      </tr>
      <tr>
        <td id="L4149" class="blob-num js-line-number" data-line-number="4149"></td>
        <td id="LC4149" class="blob-code blob-code-inner js-file-line">    rejecter;</td>
      </tr>
      <tr>
        <td id="L4150" class="blob-num js-line-number" data-line-number="4150"></td>
        <td id="LC4150" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>console.log(&quot;Velocity&quot;, _arguments)</span></td>
      </tr>
      <tr>
        <td id="L4151" class="blob-num js-line-number" data-line-number="4151"></td>
        <td id="LC4151" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> First get the elements, and the animations connected to the last call if</span></td>
      </tr>
      <tr>
        <td id="L4152" class="blob-num js-line-number" data-line-number="4152"></td>
        <td id="LC4152" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> this is chained.</span></td>
      </tr>
      <tr>
        <td id="L4153" class="blob-num js-line-number" data-line-number="4153"></td>
        <td id="LC4153" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> TODO: Clean this up a bit</span></td>
      </tr>
      <tr>
        <td id="L4154" class="blob-num js-line-number" data-line-number="4154"></td>
        <td id="LC4154" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> TODO: Throw error if the chain is called with elements as the first argument. isVelocityResult(this) &amp;&amp; ( (isNode(arg0) || isWrapped(arg0)) &amp;&amp; arg0 == this)</span></td>
      </tr>
      <tr>
        <td id="L4155" class="blob-num js-line-number" data-line-number="4155"></td>
        <td id="LC4155" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isNode</span>(<span class="pl-c1">this</span>)) {</td>
      </tr>
      <tr>
        <td id="L4156" class="blob-num js-line-number" data-line-number="4156"></td>
        <td id="LC4156" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> This is from a chain such as document.getElementById(&quot;&quot;).velocity(...)</span></td>
      </tr>
      <tr>
        <td id="L4157" class="blob-num js-line-number" data-line-number="4157"></td>
        <td id="LC4157" class="blob-code blob-code-inner js-file-line">        elements <span class="pl-k">=</span> [ <span class="pl-c1">this</span> ];</td>
      </tr>
      <tr>
        <td id="L4158" class="blob-num js-line-number" data-line-number="4158"></td>
        <td id="LC4158" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">isWrapped</span>(<span class="pl-c1">this</span>)) {</td>
      </tr>
      <tr>
        <td id="L4159" class="blob-num js-line-number" data-line-number="4159"></td>
        <td id="LC4159" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> This might be a chain from something else, but if chained from a</span></td>
      </tr>
      <tr>
        <td id="L4160" class="blob-num js-line-number" data-line-number="4160"></td>
        <td id="LC4160" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> previous Velocity() call then grab the animations it&#39;s related to.</span></td>
      </tr>
      <tr>
        <td id="L4161" class="blob-num js-line-number" data-line-number="4161"></td>
        <td id="LC4161" class="blob-code blob-code-inner js-file-line">        elements <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>([], <span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L4162" class="blob-num js-line-number" data-line-number="4162"></td>
        <td id="LC4162" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(<span class="pl-c1">this</span>)) {</td>
      </tr>
      <tr>
        <td id="L4163" class="blob-num js-line-number" data-line-number="4163"></td>
        <td id="LC4163" class="blob-code blob-code-inner js-file-line">            animations <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">velocity</span>.<span class="pl-smi">animations</span>;</td>
      </tr>
      <tr>
        <td id="L4164" class="blob-num js-line-number" data-line-number="4164"></td>
        <td id="LC4164" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4165" class="blob-num js-line-number" data-line-number="4165"></td>
        <td id="LC4165" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (syntacticSugar) {</td>
      </tr>
      <tr>
        <td id="L4166" class="blob-num js-line-number" data-line-number="4166"></td>
        <td id="LC4166" class="blob-code blob-code-inner js-file-line">        elements <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>([], <span class="pl-smi">args0</span>.<span class="pl-c1">elements</span> <span class="pl-k">||</span> <span class="pl-smi">args0</span>.<span class="pl-smi">e</span>);</td>
      </tr>
      <tr>
        <td id="L4167" class="blob-num js-line-number" data-line-number="4167"></td>
        <td id="LC4167" class="blob-code blob-code-inner js-file-line">        argumentIndex<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L4168" class="blob-num js-line-number" data-line-number="4168"></td>
        <td id="LC4168" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">isNode</span>(args0)) {</td>
      </tr>
      <tr>
        <td id="L4169" class="blob-num js-line-number" data-line-number="4169"></td>
        <td id="LC4169" class="blob-code blob-code-inner js-file-line">        elements <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>([], [ args0 ]);</td>
      </tr>
      <tr>
        <td id="L4170" class="blob-num js-line-number" data-line-number="4170"></td>
        <td id="LC4170" class="blob-code blob-code-inner js-file-line">        argumentIndex<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L4171" class="blob-num js-line-number" data-line-number="4171"></td>
        <td id="LC4171" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">isWrapped</span>(args0)) {</td>
      </tr>
      <tr>
        <td id="L4172" class="blob-num js-line-number" data-line-number="4172"></td>
        <td id="LC4172" class="blob-code blob-code-inner js-file-line">        elements <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>([], args0);</td>
      </tr>
      <tr>
        <td id="L4173" class="blob-num js-line-number" data-line-number="4173"></td>
        <td id="LC4173" class="blob-code blob-code-inner js-file-line">        argumentIndex<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L4174" class="blob-num js-line-number" data-line-number="4174"></td>
        <td id="LC4174" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4175" class="blob-num js-line-number" data-line-number="4175"></td>
        <td id="LC4175" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Allow elements to be chained.</span></td>
      </tr>
      <tr>
        <td id="L4176" class="blob-num js-line-number" data-line-number="4176"></td>
        <td id="LC4176" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (elements) {</td>
      </tr>
      <tr>
        <td id="L4177" class="blob-num js-line-number" data-line-number="4177"></td>
        <td id="LC4177" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">defineProperty</span>(elements, <span class="pl-s"><span class="pl-pds">&quot;</span>velocity<span class="pl-pds">&quot;</span></span>, <span class="pl-smi">VelocityFn</span>.<span class="pl-en">bind</span>(elements));</td>
      </tr>
      <tr>
        <td id="L4178" class="blob-num js-line-number" data-line-number="4178"></td>
        <td id="LC4178" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (animations) {</td>
      </tr>
      <tr>
        <td id="L4179" class="blob-num js-line-number" data-line-number="4179"></td>
        <td id="LC4179" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">defineProperty</span>(<span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>animations<span class="pl-pds">&quot;</span></span>, animations);</td>
      </tr>
      <tr>
        <td id="L4180" class="blob-num js-line-number" data-line-number="4180"></td>
        <td id="LC4180" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4181" class="blob-num js-line-number" data-line-number="4181"></td>
        <td id="LC4181" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4182" class="blob-num js-line-number" data-line-number="4182"></td>
        <td id="LC4182" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Next get the propertiesMap and options.</span></td>
      </tr>
      <tr>
        <td id="L4183" class="blob-num js-line-number" data-line-number="4183"></td>
        <td id="LC4183" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (syntacticSugar) {</td>
      </tr>
      <tr>
        <td id="L4184" class="blob-num js-line-number" data-line-number="4184"></td>
        <td id="LC4184" class="blob-code blob-code-inner js-file-line">        propertiesMap <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-smi">args0</span>.<span class="pl-smi">properties</span>, <span class="pl-smi">args0</span>.<span class="pl-smi">p</span>);</td>
      </tr>
      <tr>
        <td id="L4185" class="blob-num js-line-number" data-line-number="4185"></td>
        <td id="LC4185" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4186" class="blob-num js-line-number" data-line-number="4186"></td>
        <td id="LC4186" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: Should be possible to call Velocity(&quot;pauseAll&quot;) - currently not possible</span></td>
      </tr>
      <tr>
        <td id="L4187" class="blob-num js-line-number" data-line-number="4187"></td>
        <td id="LC4187" class="blob-code blob-code-inner js-file-line">        propertiesMap <span class="pl-k">=</span> _arguments[argumentIndex<span class="pl-k">++</span>];</td>
      </tr>
      <tr>
        <td id="L4188" class="blob-num js-line-number" data-line-number="4188"></td>
        <td id="LC4188" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4189" class="blob-num js-line-number" data-line-number="4189"></td>
        <td id="LC4189" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Get any options map passed in as arguments first, expand any direct</span></td>
      </tr>
      <tr>
        <td id="L4190" class="blob-num js-line-number" data-line-number="4190"></td>
        <td id="LC4190" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> options if possible.</span></td>
      </tr>
      <tr>
        <td id="L4191" class="blob-num js-line-number" data-line-number="4191"></td>
        <td id="LC4191" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> isReverse <span class="pl-k">=</span> propertiesMap <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>reverse<span class="pl-pds">&quot;</span></span>, isAction <span class="pl-k">=</span> <span class="pl-k">!</span>isReverse <span class="pl-k">&amp;&amp;</span> <span class="pl-en">isString</span>(propertiesMap), opts <span class="pl-k">=</span> syntacticSugar <span class="pl-k">?</span> <span class="pl-en">getValue</span>(<span class="pl-smi">args0</span>.<span class="pl-c1">options</span>, <span class="pl-smi">args0</span>.<span class="pl-smi">o</span>) <span class="pl-k">:</span> _arguments[argumentIndex];</td>
      </tr>
      <tr>
        <td id="L4192" class="blob-num js-line-number" data-line-number="4192"></td>
        <td id="LC4192" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isPlainObject</span>(opts)) {</td>
      </tr>
      <tr>
        <td id="L4193" class="blob-num js-line-number" data-line-number="4193"></td>
        <td id="LC4193" class="blob-code blob-code-inner js-file-line">        optionsMap <span class="pl-k">=</span> opts;</td>
      </tr>
      <tr>
        <td id="L4194" class="blob-num js-line-number" data-line-number="4194"></td>
        <td id="LC4194" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4195" class="blob-num js-line-number" data-line-number="4195"></td>
        <td id="LC4195" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Create the promise if supported and wanted.</span></td>
      </tr>
      <tr>
        <td id="L4196" class="blob-num js-line-number" data-line-number="4196"></td>
        <td id="LC4196" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">Promise</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-en">getValue</span>(optionsMap <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">optionsMap</span>.<span class="pl-smi">promise</span>, <span class="pl-smi">defaults</span>.<span class="pl-smi">promise</span>)) {</td>
      </tr>
      <tr>
        <td id="L4197" class="blob-num js-line-number" data-line-number="4197"></td>
        <td id="LC4197" class="blob-code blob-code-inner js-file-line">        promise <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Promise</span>(<span class="pl-k">function</span>(<span class="pl-smi">_resolve</span>, <span class="pl-smi">_reject</span>) {</td>
      </tr>
      <tr>
        <td id="L4198" class="blob-num js-line-number" data-line-number="4198"></td>
        <td id="LC4198" class="blob-code blob-code-inner js-file-line">            rejecter <span class="pl-k">=</span> _reject;</td>
      </tr>
      <tr>
        <td id="L4199" class="blob-num js-line-number" data-line-number="4199"></td>
        <td id="LC4199" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> IMPORTANT:</span></td>
      </tr>
      <tr>
        <td id="L4200" class="blob-num js-line-number" data-line-number="4200"></td>
        <td id="LC4200" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> If a resolver tries to run on a Promise then it will wait until</span></td>
      </tr>
      <tr>
        <td id="L4201" class="blob-num js-line-number" data-line-number="4201"></td>
        <td id="LC4201" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> that Promise resolves - but in this case we&#39;re running on our own</span></td>
      </tr>
      <tr>
        <td id="L4202" class="blob-num js-line-number" data-line-number="4202"></td>
        <td id="LC4202" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Promise, so need to make sure it&#39;s not seen as one. Setting these</span></td>
      </tr>
      <tr>
        <td id="L4203" class="blob-num js-line-number" data-line-number="4203"></td>
        <td id="LC4203" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> values to &lt;code&gt;undefined&lt;/code&gt; for the duration of the resolve.</span></td>
      </tr>
      <tr>
        <td id="L4204" class="blob-num js-line-number" data-line-number="4204"></td>
        <td id="LC4204" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Due to being an async call, they should be back to &quot;normal&quot;</span></td>
      </tr>
      <tr>
        <td id="L4205" class="blob-num js-line-number" data-line-number="4205"></td>
        <td id="LC4205" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> before the &lt;code&gt;.then()&lt;/code&gt; function gets called.</span></td>
      </tr>
      <tr>
        <td id="L4206" class="blob-num js-line-number" data-line-number="4206"></td>
        <td id="LC4206" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">resolver</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">args</span>) {</td>
      </tr>
      <tr>
        <td id="L4207" class="blob-num js-line-number" data-line-number="4207"></td>
        <td id="LC4207" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">isVelocityResult</span>(args)) {</td>
      </tr>
      <tr>
        <td id="L4208" class="blob-num js-line-number" data-line-number="4208"></td>
        <td id="LC4208" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> _then <span class="pl-k">=</span> args <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">args</span>.<span class="pl-smi">then</span>;</td>
      </tr>
      <tr>
        <td id="L4209" class="blob-num js-line-number" data-line-number="4209"></td>
        <td id="LC4209" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (_then) {</td>
      </tr>
      <tr>
        <td id="L4210" class="blob-num js-line-number" data-line-number="4210"></td>
        <td id="LC4210" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">args</span>.<span class="pl-smi">then</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L4211" class="blob-num js-line-number" data-line-number="4211"></td>
        <td id="LC4211" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">//</span> Preserving enumeration etc</span></td>
      </tr>
      <tr>
        <td id="L4212" class="blob-num js-line-number" data-line-number="4212"></td>
        <td id="LC4212" class="blob-code blob-code-inner js-file-line">                                        }</td>
      </tr>
      <tr>
        <td id="L4213" class="blob-num js-line-number" data-line-number="4213"></td>
        <td id="LC4213" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">_resolve</span>(args);</td>
      </tr>
      <tr>
        <td id="L4214" class="blob-num js-line-number" data-line-number="4214"></td>
        <td id="LC4214" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (_then) {</td>
      </tr>
      <tr>
        <td id="L4215" class="blob-num js-line-number" data-line-number="4215"></td>
        <td id="LC4215" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">args</span>.<span class="pl-smi">then</span> <span class="pl-k">=</span> _then;</td>
      </tr>
      <tr>
        <td id="L4216" class="blob-num js-line-number" data-line-number="4216"></td>
        <td id="LC4216" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4217" class="blob-num js-line-number" data-line-number="4217"></td>
        <td id="LC4217" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4218" class="blob-num js-line-number" data-line-number="4218"></td>
        <td id="LC4218" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">_resolve</span>(args);</td>
      </tr>
      <tr>
        <td id="L4219" class="blob-num js-line-number" data-line-number="4219"></td>
        <td id="LC4219" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4220" class="blob-num js-line-number" data-line-number="4220"></td>
        <td id="LC4220" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L4221" class="blob-num js-line-number" data-line-number="4221"></td>
        <td id="LC4221" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4222" class="blob-num js-line-number" data-line-number="4222"></td>
        <td id="LC4222" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (elements) {</td>
      </tr>
      <tr>
        <td id="L4223" class="blob-num js-line-number" data-line-number="4223"></td>
        <td id="LC4223" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">defineProperty</span>(elements, <span class="pl-s"><span class="pl-pds">&quot;</span>then<span class="pl-pds">&quot;</span></span>, <span class="pl-smi">promise</span>.<span class="pl-smi">then</span>.<span class="pl-en">bind</span>(promise));</td>
      </tr>
      <tr>
        <td id="L4224" class="blob-num js-line-number" data-line-number="4224"></td>
        <td id="LC4224" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">defineProperty</span>(elements, <span class="pl-s"><span class="pl-pds">&quot;</span>catch<span class="pl-pds">&quot;</span></span>, <span class="pl-smi">promise</span>.<span class="pl-smi">catch</span>.<span class="pl-en">bind</span>(promise));</td>
      </tr>
      <tr>
        <td id="L4225" class="blob-num js-line-number" data-line-number="4225"></td>
        <td id="LC4225" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">promise</span>.<span class="pl-smi">finally</span>) {</td>
      </tr>
      <tr>
        <td id="L4226" class="blob-num js-line-number" data-line-number="4226"></td>
        <td id="LC4226" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Semi-standard</span></td>
      </tr>
      <tr>
        <td id="L4227" class="blob-num js-line-number" data-line-number="4227"></td>
        <td id="LC4227" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">defineProperty</span>(elements, <span class="pl-s"><span class="pl-pds">&quot;</span>finally<span class="pl-pds">&quot;</span></span>, <span class="pl-smi">promise</span>.<span class="pl-smi">finally</span>.<span class="pl-en">bind</span>(promise));</td>
      </tr>
      <tr>
        <td id="L4228" class="blob-num js-line-number" data-line-number="4228"></td>
        <td id="LC4228" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4229" class="blob-num js-line-number" data-line-number="4229"></td>
        <td id="LC4229" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4230" class="blob-num js-line-number" data-line-number="4230"></td>
        <td id="LC4230" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4231" class="blob-num js-line-number" data-line-number="4231"></td>
        <td id="LC4231" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> promiseRejectEmpty <span class="pl-k">=</span> <span class="pl-en">getValue</span>(optionsMap <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">optionsMap</span>.<span class="pl-smi">promiseRejectEmpty</span>, <span class="pl-smi">defaults</span>.<span class="pl-smi">promiseRejectEmpty</span>);</td>
      </tr>
      <tr>
        <td id="L4232" class="blob-num js-line-number" data-line-number="4232"></td>
        <td id="LC4232" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (promise) {</td>
      </tr>
      <tr>
        <td id="L4233" class="blob-num js-line-number" data-line-number="4233"></td>
        <td id="LC4233" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>elements <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isAction) {</td>
      </tr>
      <tr>
        <td id="L4234" class="blob-num js-line-number" data-line-number="4234"></td>
        <td id="LC4234" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (promiseRejectEmpty) {</td>
      </tr>
      <tr>
        <td id="L4235" class="blob-num js-line-number" data-line-number="4235"></td>
        <td id="LC4235" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">rejecter</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Velocity: No elements supplied, if that is deliberate then pass `promiseRejectEmpty:false` as an option. Aborting.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4236" class="blob-num js-line-number" data-line-number="4236"></td>
        <td id="LC4236" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4237" class="blob-num js-line-number" data-line-number="4237"></td>
        <td id="LC4237" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">resolver</span>();</td>
      </tr>
      <tr>
        <td id="L4238" class="blob-num js-line-number" data-line-number="4238"></td>
        <td id="LC4238" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4239" class="blob-num js-line-number" data-line-number="4239"></td>
        <td id="LC4239" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span>propertiesMap) {</td>
      </tr>
      <tr>
        <td id="L4240" class="blob-num js-line-number" data-line-number="4240"></td>
        <td id="LC4240" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (promiseRejectEmpty) {</td>
      </tr>
      <tr>
        <td id="L4241" class="blob-num js-line-number" data-line-number="4241"></td>
        <td id="LC4241" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">rejecter</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Velocity: No properties supplied, if that is deliberate then pass `promiseRejectEmpty:false` as an option. Aborting.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4242" class="blob-num js-line-number" data-line-number="4242"></td>
        <td id="LC4242" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4243" class="blob-num js-line-number" data-line-number="4243"></td>
        <td id="LC4243" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">resolver</span>();</td>
      </tr>
      <tr>
        <td id="L4244" class="blob-num js-line-number" data-line-number="4244"></td>
        <td id="LC4244" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4245" class="blob-num js-line-number" data-line-number="4245"></td>
        <td id="LC4245" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4246" class="blob-num js-line-number" data-line-number="4246"></td>
        <td id="LC4246" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4247" class="blob-num js-line-number" data-line-number="4247"></td>
        <td id="LC4247" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>elements <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isAction <span class="pl-k">||</span> <span class="pl-k">!</span>propertiesMap) {</td>
      </tr>
      <tr>
        <td id="L4248" class="blob-num js-line-number" data-line-number="4248"></td>
        <td id="LC4248" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> promise;</td>
      </tr>
      <tr>
        <td id="L4249" class="blob-num js-line-number" data-line-number="4249"></td>
        <td id="LC4249" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4250" class="blob-num js-line-number" data-line-number="4250"></td>
        <td id="LC4250" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> NOTE: Can&#39;t use isAction here due to type inference - there are callbacks</span></td>
      </tr>
      <tr>
        <td id="L4251" class="blob-num js-line-number" data-line-number="4251"></td>
        <td id="LC4251" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> between so the type isn&#39;t considered safe.</span></td>
      </tr>
      <tr>
        <td id="L4252" class="blob-num js-line-number" data-line-number="4252"></td>
        <td id="LC4252" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isAction) {</td>
      </tr>
      <tr>
        <td id="L4253" class="blob-num js-line-number" data-line-number="4253"></td>
        <td id="LC4253" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> args <span class="pl-k">=</span> [], promiseHandler <span class="pl-k">=</span> promise <span class="pl-k">&amp;&amp;</span> {</td>
      </tr>
      <tr>
        <td id="L4254" class="blob-num js-line-number" data-line-number="4254"></td>
        <td id="LC4254" class="blob-code blob-code-inner js-file-line">            _promise<span class="pl-k">:</span> promise,</td>
      </tr>
      <tr>
        <td id="L4255" class="blob-num js-line-number" data-line-number="4255"></td>
        <td id="LC4255" class="blob-code blob-code-inner js-file-line">            _resolver<span class="pl-k">:</span> resolver,</td>
      </tr>
      <tr>
        <td id="L4256" class="blob-num js-line-number" data-line-number="4256"></td>
        <td id="LC4256" class="blob-code blob-code-inner js-file-line">            _rejecter<span class="pl-k">:</span> rejecter</td>
      </tr>
      <tr>
        <td id="L4257" class="blob-num js-line-number" data-line-number="4257"></td>
        <td id="LC4257" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4258" class="blob-num js-line-number" data-line-number="4258"></td>
        <td id="LC4258" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (argumentIndex <span class="pl-k">&lt;</span> <span class="pl-smi">_arguments</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4259" class="blob-num js-line-number" data-line-number="4259"></td>
        <td id="LC4259" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">args</span>.<span class="pl-c1">push</span>(_arguments[argumentIndex<span class="pl-k">++</span>]);</td>
      </tr>
      <tr>
        <td id="L4260" class="blob-num js-line-number" data-line-number="4260"></td>
        <td id="LC4260" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4261" class="blob-num js-line-number" data-line-number="4261"></td>
        <td id="LC4261" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Velocity&#39;s behavior is categorized into &quot;actions&quot;. If a string is</span></td>
      </tr>
      <tr>
        <td id="L4262" class="blob-num js-line-number" data-line-number="4262"></td>
        <td id="LC4262" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> passed in instead of a propertiesMap then that will call a function</span></td>
      </tr>
      <tr>
        <td id="L4263" class="blob-num js-line-number" data-line-number="4263"></td>
        <td id="LC4263" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> to do something special to the animation linked.</span></td>
      </tr>
      <tr>
        <td id="L4264" class="blob-num js-line-number" data-line-number="4264"></td>
        <td id="LC4264" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> There is one special case - &quot;reverse&quot; - which is handled differently,</span></td>
      </tr>
      <tr>
        <td id="L4265" class="blob-num js-line-number" data-line-number="4265"></td>
        <td id="LC4265" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> by being stored on the animation and then expanded when the animation</span></td>
      </tr>
      <tr>
        <td id="L4266" class="blob-num js-line-number" data-line-number="4266"></td>
        <td id="LC4266" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> starts.</span></td>
      </tr>
      <tr>
        <td id="L4267" class="blob-num js-line-number" data-line-number="4267"></td>
        <td id="LC4267" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> action <span class="pl-k">=</span> <span class="pl-smi">propertiesMap</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\.</span><span class="pl-c1">.</span><span class="pl-k">*</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>), callback <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Actions</span>[action] <span class="pl-k">||</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">Actions</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>];</td>
      </tr>
      <tr>
        <td id="L4268" class="blob-num js-line-number" data-line-number="4268"></td>
        <td id="LC4268" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (callback) {</td>
      </tr>
      <tr>
        <td id="L4269" class="blob-num js-line-number" data-line-number="4269"></td>
        <td id="LC4269" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> result <span class="pl-k">=</span> <span class="pl-en">callback</span>(args, elements, promiseHandler, propertiesMap);</td>
      </tr>
      <tr>
        <td id="L4270" class="blob-num js-line-number" data-line-number="4270"></td>
        <td id="LC4270" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (result <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L4271" class="blob-num js-line-number" data-line-number="4271"></td>
        <td id="LC4271" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> result;</td>
      </tr>
      <tr>
        <td id="L4272" class="blob-num js-line-number" data-line-number="4272"></td>
        <td id="LC4272" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4273" class="blob-num js-line-number" data-line-number="4273"></td>
        <td id="LC4273" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4274" class="blob-num js-line-number" data-line-number="4274"></td>
        <td id="LC4274" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Unknown action:<span class="pl-pds">&quot;</span></span>, propertiesMap);</td>
      </tr>
      <tr>
        <td id="L4275" class="blob-num js-line-number" data-line-number="4275"></td>
        <td id="LC4275" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4276" class="blob-num js-line-number" data-line-number="4276"></td>
        <td id="LC4276" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">isPlainObject</span>(propertiesMap) <span class="pl-k">||</span> isReverse) {</td>
      </tr>
      <tr>
        <td id="L4277" class="blob-num js-line-number" data-line-number="4277"></td>
        <td id="LC4277" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L4278" class="blob-num js-line-number" data-line-number="4278"></td>
        <td id="LC4278" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * The options for this set of animations.</span></td>
      </tr>
      <tr>
        <td id="L4279" class="blob-num js-line-number" data-line-number="4279"></td>
        <td id="LC4279" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4280" class="blob-num js-line-number" data-line-number="4280"></td>
        <td id="LC4280" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> options <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L4281" class="blob-num js-line-number" data-line-number="4281"></td>
        <td id="LC4281" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> isSync <span class="pl-k">=</span> <span class="pl-smi">defaults</span>.<span class="pl-smi">sync</span>;</td>
      </tr>
      <tr>
        <td id="L4282" class="blob-num js-line-number" data-line-number="4282"></td>
        <td id="LC4282" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Private options first - set as non-enumerable, and starting with an</span></td>
      </tr>
      <tr>
        <td id="L4283" class="blob-num js-line-number" data-line-number="4283"></td>
        <td id="LC4283" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> underscore so we can filter them out.</span></td>
      </tr>
      <tr>
        <td id="L4284" class="blob-num js-line-number" data-line-number="4284"></td>
        <td id="LC4284" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (promise) {</td>
      </tr>
      <tr>
        <td id="L4285" class="blob-num js-line-number" data-line-number="4285"></td>
        <td id="LC4285" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">defineProperty</span>(options, <span class="pl-s"><span class="pl-pds">&quot;</span>_promise<span class="pl-pds">&quot;</span></span>, promise);</td>
      </tr>
      <tr>
        <td id="L4286" class="blob-num js-line-number" data-line-number="4286"></td>
        <td id="LC4286" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">defineProperty</span>(options, <span class="pl-s"><span class="pl-pds">&quot;</span>_rejecter<span class="pl-pds">&quot;</span></span>, rejecter);</td>
      </tr>
      <tr>
        <td id="L4287" class="blob-num js-line-number" data-line-number="4287"></td>
        <td id="LC4287" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">defineProperty</span>(options, <span class="pl-s"><span class="pl-pds">&quot;</span>_resolver<span class="pl-pds">&quot;</span></span>, resolver);</td>
      </tr>
      <tr>
        <td id="L4288" class="blob-num js-line-number" data-line-number="4288"></td>
        <td id="LC4288" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4289" class="blob-num js-line-number" data-line-number="4289"></td>
        <td id="LC4289" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">defineProperty</span>(options, <span class="pl-s"><span class="pl-pds">&quot;</span>_ready<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L4290" class="blob-num js-line-number" data-line-number="4290"></td>
        <td id="LC4290" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">defineProperty</span>(options, <span class="pl-s"><span class="pl-pds">&quot;</span>_started<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L4291" class="blob-num js-line-number" data-line-number="4291"></td>
        <td id="LC4291" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">defineProperty</span>(options, <span class="pl-s"><span class="pl-pds">&quot;</span>_completed<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L4292" class="blob-num js-line-number" data-line-number="4292"></td>
        <td id="LC4292" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">defineProperty</span>(options, <span class="pl-s"><span class="pl-pds">&quot;</span>_total<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L4293" class="blob-num js-line-number" data-line-number="4293"></td>
        <td id="LC4293" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Now check the optionsMap</span></td>
      </tr>
      <tr>
        <td id="L4294" class="blob-num js-line-number" data-line-number="4294"></td>
        <td id="LC4294" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">isPlainObject</span>(optionsMap)) {</td>
      </tr>
      <tr>
        <td id="L4295" class="blob-num js-line-number" data-line-number="4295"></td>
        <td id="LC4295" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">options</span>.<span class="pl-smi">duration</span> <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-en">validateDuration</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">duration</span>), <span class="pl-smi">defaults</span>.<span class="pl-smi">duration</span>);</td>
      </tr>
      <tr>
        <td id="L4296" class="blob-num js-line-number" data-line-number="4296"></td>
        <td id="LC4296" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">options</span>.<span class="pl-smi">delay</span> <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-en">validateDelay</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">delay</span>), <span class="pl-smi">defaults</span>.<span class="pl-smi">delay</span>);</td>
      </tr>
      <tr>
        <td id="L4297" class="blob-num js-line-number" data-line-number="4297"></td>
        <td id="LC4297" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Need the extra fallback here in case it supplies an invalid</span></td>
      </tr>
      <tr>
        <td id="L4298" class="blob-num js-line-number" data-line-number="4298"></td>
        <td id="LC4298" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> easing that we need to overrride with the default.</span></td>
      </tr>
      <tr>
        <td id="L4299" class="blob-num js-line-number" data-line-number="4299"></td>
        <td id="LC4299" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">options</span>.<span class="pl-smi">easing</span> <span class="pl-k">=</span> <span class="pl-en">validateEasing</span>(<span class="pl-en">getValue</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">easing</span>, <span class="pl-smi">defaults</span>.<span class="pl-smi">easing</span>), <span class="pl-smi">options</span>.<span class="pl-smi">duration</span>) <span class="pl-k">||</span> <span class="pl-en">validateEasing</span>(<span class="pl-smi">defaults</span>.<span class="pl-smi">easing</span>, <span class="pl-smi">options</span>.<span class="pl-smi">duration</span>);</td>
      </tr>
      <tr>
        <td id="L4300" class="blob-num js-line-number" data-line-number="4300"></td>
        <td id="LC4300" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">options</span>.<span class="pl-smi">loop</span> <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-en">validateLoop</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">loop</span>), <span class="pl-smi">defaults</span>.<span class="pl-smi">loop</span>);</td>
      </tr>
      <tr>
        <td id="L4301" class="blob-num js-line-number" data-line-number="4301"></td>
        <td id="LC4301" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">options</span>.<span class="pl-smi">repeat</span> <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">repeatAgain</span> <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-en">validateRepeat</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">repeat</span>), <span class="pl-smi">defaults</span>.<span class="pl-smi">repeat</span>);</td>
      </tr>
      <tr>
        <td id="L4302" class="blob-num js-line-number" data-line-number="4302"></td>
        <td id="LC4302" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">optionsMap</span>.<span class="pl-smi">speed</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4303" class="blob-num js-line-number" data-line-number="4303"></td>
        <td id="LC4303" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">options</span>.<span class="pl-smi">speed</span> <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-en">validateSpeed</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">speed</span>), <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L4304" class="blob-num js-line-number" data-line-number="4304"></td>
        <td id="LC4304" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4305" class="blob-num js-line-number" data-line-number="4305"></td>
        <td id="LC4305" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">isBoolean</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">promise</span>)) {</td>
      </tr>
      <tr>
        <td id="L4306" class="blob-num js-line-number" data-line-number="4306"></td>
        <td id="LC4306" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">options</span>.<span class="pl-smi">promise</span> <span class="pl-k">=</span> <span class="pl-smi">optionsMap</span>.<span class="pl-smi">promise</span>;</td>
      </tr>
      <tr>
        <td id="L4307" class="blob-num js-line-number" data-line-number="4307"></td>
        <td id="LC4307" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4308" class="blob-num js-line-number" data-line-number="4308"></td>
        <td id="LC4308" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">options</span>.<span class="pl-smi">queue</span> <span class="pl-k">=</span> <span class="pl-en">getValue</span>(<span class="pl-en">validateQueue</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">queue</span>), <span class="pl-smi">defaults</span>.<span class="pl-smi">queue</span>);</td>
      </tr>
      <tr>
        <td id="L4309" class="blob-num js-line-number" data-line-number="4309"></td>
        <td id="LC4309" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">optionsMap</span>.<span class="pl-smi">mobileHA</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">isGingerbread</span>) {</td>
      </tr>
      <tr>
        <td id="L4310" class="blob-num js-line-number" data-line-number="4310"></td>
        <td id="LC4310" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)</span></td>
      </tr>
      <tr>
        <td id="L4311" class="blob-num js-line-number" data-line-number="4311"></td>
        <td id="LC4311" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 on animating elements. HA is removed from the element at the completion of its animation. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4312" class="blob-num js-line-number" data-line-number="4312"></td>
        <td id="LC4312" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Note: Android Gingerbread doesn&#39;t support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4313" class="blob-num js-line-number" data-line-number="4313"></td>
        <td id="LC4313" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">/*</span> Note: You can read more about the use of mobileHA in Velocity&#39;s documentation: VelocityJS.org/#mobileHA. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4314" class="blob-num js-line-number" data-line-number="4314"></td>
        <td id="LC4314" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">options</span>.<span class="pl-smi">mobileHA</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4315" class="blob-num js-line-number" data-line-number="4315"></td>
        <td id="LC4315" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4316" class="blob-num js-line-number" data-line-number="4316"></td>
        <td id="LC4316" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>isReverse) {</td>
      </tr>
      <tr>
        <td id="L4317" class="blob-num js-line-number" data-line-number="4317"></td>
        <td id="LC4317" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">optionsMap</span>.<span class="pl-c1">display</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4318" class="blob-num js-line-number" data-line-number="4318"></td>
        <td id="LC4318" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">propertiesMap</span>.<span class="pl-c1">display</span> <span class="pl-k">=</span> <span class="pl-smi">optionsMap</span>.<span class="pl-c1">display</span>;</td>
      </tr>
      <tr>
        <td id="L4319" class="blob-num js-line-number" data-line-number="4319"></td>
        <td id="LC4319" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Deprecated &#39;options.display&#39; used, this is now a property:<span class="pl-pds">&quot;</span></span>, <span class="pl-smi">optionsMap</span>.<span class="pl-c1">display</span>);</td>
      </tr>
      <tr>
        <td id="L4320" class="blob-num js-line-number" data-line-number="4320"></td>
        <td id="LC4320" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4321" class="blob-num js-line-number" data-line-number="4321"></td>
        <td id="LC4321" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">optionsMap</span>.<span class="pl-c1">visibility</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4322" class="blob-num js-line-number" data-line-number="4322"></td>
        <td id="LC4322" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">propertiesMap</span>.<span class="pl-c1">visibility</span> <span class="pl-k">=</span> <span class="pl-smi">optionsMap</span>.<span class="pl-c1">visibility</span>;</td>
      </tr>
      <tr>
        <td id="L4323" class="blob-num js-line-number" data-line-number="4323"></td>
        <td id="LC4323" class="blob-code blob-code-inner js-file-line">                    <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Deprecated &#39;options.visibility&#39; used, this is now a property:<span class="pl-pds">&quot;</span></span>, <span class="pl-smi">optionsMap</span>.<span class="pl-c1">visibility</span>);</td>
      </tr>
      <tr>
        <td id="L4324" class="blob-num js-line-number" data-line-number="4324"></td>
        <td id="LC4324" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4325" class="blob-num js-line-number" data-line-number="4325"></td>
        <td id="LC4325" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4326" class="blob-num js-line-number" data-line-number="4326"></td>
        <td id="LC4326" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> TODO: Allow functional options for different options per element</span></td>
      </tr>
      <tr>
        <td id="L4327" class="blob-num js-line-number" data-line-number="4327"></td>
        <td id="LC4327" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">var</span> optionsBegin <span class="pl-k">=</span> <span class="pl-en">validateBegin</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">begin</span>), optionsComplete <span class="pl-k">=</span> <span class="pl-en">validateComplete</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-c1">complete</span>), optionsProgress <span class="pl-k">=</span> <span class="pl-en">validateProgress</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">progress</span>), optionsSync <span class="pl-k">=</span> <span class="pl-en">validateSync</span>(<span class="pl-smi">optionsMap</span>.<span class="pl-smi">sync</span>);</td>
      </tr>
      <tr>
        <td id="L4328" class="blob-num js-line-number" data-line-number="4328"></td>
        <td id="LC4328" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (optionsBegin <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4329" class="blob-num js-line-number" data-line-number="4329"></td>
        <td id="LC4329" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">options</span>.<span class="pl-smi">begin</span> <span class="pl-k">=</span> optionsBegin;</td>
      </tr>
      <tr>
        <td id="L4330" class="blob-num js-line-number" data-line-number="4330"></td>
        <td id="LC4330" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4331" class="blob-num js-line-number" data-line-number="4331"></td>
        <td id="LC4331" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (optionsComplete <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4332" class="blob-num js-line-number" data-line-number="4332"></td>
        <td id="LC4332" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">options</span>.<span class="pl-c1">complete</span> <span class="pl-k">=</span> optionsComplete;</td>
      </tr>
      <tr>
        <td id="L4333" class="blob-num js-line-number" data-line-number="4333"></td>
        <td id="LC4333" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4334" class="blob-num js-line-number" data-line-number="4334"></td>
        <td id="LC4334" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (optionsProgress <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4335" class="blob-num js-line-number" data-line-number="4335"></td>
        <td id="LC4335" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">options</span>.<span class="pl-smi">progress</span> <span class="pl-k">=</span> optionsProgress;</td>
      </tr>
      <tr>
        <td id="L4336" class="blob-num js-line-number" data-line-number="4336"></td>
        <td id="LC4336" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4337" class="blob-num js-line-number" data-line-number="4337"></td>
        <td id="LC4337" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (optionsSync <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4338" class="blob-num js-line-number" data-line-number="4338"></td>
        <td id="LC4338" class="blob-code blob-code-inner js-file-line">                isSync <span class="pl-k">=</span> optionsSync;</td>
      </tr>
      <tr>
        <td id="L4339" class="blob-num js-line-number" data-line-number="4339"></td>
        <td id="LC4339" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4340" class="blob-num js-line-number" data-line-number="4340"></td>
        <td id="LC4340" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span>syntacticSugar) {</td>
      </tr>
      <tr>
        <td id="L4341" class="blob-num js-line-number" data-line-number="4341"></td>
        <td id="LC4341" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Expand any direct options if possible.</span></td>
      </tr>
      <tr>
        <td id="L4342" class="blob-num js-line-number" data-line-number="4342"></td>
        <td id="LC4342" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> duration <span class="pl-k">=</span> <span class="pl-en">validateDuration</span>(_arguments[argumentIndex], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4343" class="blob-num js-line-number" data-line-number="4343"></td>
        <td id="LC4343" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> offset <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4344" class="blob-num js-line-number" data-line-number="4344"></td>
        <td id="LC4344" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (duration <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L4345" class="blob-num js-line-number" data-line-number="4345"></td>
        <td id="LC4345" class="blob-code blob-code-inner js-file-line">                offset<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L4346" class="blob-num js-line-number" data-line-number="4346"></td>
        <td id="LC4346" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">options</span>.<span class="pl-smi">duration</span> <span class="pl-k">=</span> duration;</td>
      </tr>
      <tr>
        <td id="L4347" class="blob-num js-line-number" data-line-number="4347"></td>
        <td id="LC4347" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4348" class="blob-num js-line-number" data-line-number="4348"></td>
        <td id="LC4348" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">isFunction</span>(_arguments[argumentIndex <span class="pl-k">+</span> offset])) {</td>
      </tr>
      <tr>
        <td id="L4349" class="blob-num js-line-number" data-line-number="4349"></td>
        <td id="LC4349" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Despite coming before Complete, we can&#39;t pass a fn easing</span></td>
      </tr>
      <tr>
        <td id="L4350" class="blob-num js-line-number" data-line-number="4350"></td>
        <td id="LC4350" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> easing <span class="pl-k">=</span> <span class="pl-en">validateEasing</span>(_arguments[argumentIndex <span class="pl-k">+</span> offset], <span class="pl-en">getValue</span>(options <span class="pl-k">&amp;&amp;</span> <span class="pl-en">validateDuration</span>(<span class="pl-smi">options</span>.<span class="pl-smi">duration</span>), <span class="pl-smi">defaults</span>.<span class="pl-smi">duration</span>), <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4351" class="blob-num js-line-number" data-line-number="4351"></td>
        <td id="LC4351" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (easing <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L4352" class="blob-num js-line-number" data-line-number="4352"></td>
        <td id="LC4352" class="blob-code blob-code-inner js-file-line">                    offset<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L4353" class="blob-num js-line-number" data-line-number="4353"></td>
        <td id="LC4353" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">options</span>.<span class="pl-smi">easing</span> <span class="pl-k">=</span> easing;</td>
      </tr>
      <tr>
        <td id="L4354" class="blob-num js-line-number" data-line-number="4354"></td>
        <td id="LC4354" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4355" class="blob-num js-line-number" data-line-number="4355"></td>
        <td id="LC4355" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4356" class="blob-num js-line-number" data-line-number="4356"></td>
        <td id="LC4356" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> complete <span class="pl-k">=</span> <span class="pl-en">validateComplete</span>(_arguments[argumentIndex <span class="pl-k">+</span> offset], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4357" class="blob-num js-line-number" data-line-number="4357"></td>
        <td id="LC4357" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (complete <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L4358" class="blob-num js-line-number" data-line-number="4358"></td>
        <td id="LC4358" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">options</span>.<span class="pl-c1">complete</span> <span class="pl-k">=</span> complete;</td>
      </tr>
      <tr>
        <td id="L4359" class="blob-num js-line-number" data-line-number="4359"></td>
        <td id="LC4359" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4360" class="blob-num js-line-number" data-line-number="4360"></td>
        <td id="LC4360" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">options</span>.<span class="pl-smi">loop</span> <span class="pl-k">=</span> <span class="pl-smi">defaults</span>.<span class="pl-smi">loop</span>;</td>
      </tr>
      <tr>
        <td id="L4361" class="blob-num js-line-number" data-line-number="4361"></td>
        <td id="LC4361" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">options</span>.<span class="pl-smi">repeat</span> <span class="pl-k">=</span> <span class="pl-smi">options</span>.<span class="pl-smi">repeatAgain</span> <span class="pl-k">=</span> <span class="pl-smi">defaults</span>.<span class="pl-smi">repeat</span>;</td>
      </tr>
      <tr>
        <td id="L4362" class="blob-num js-line-number" data-line-number="4362"></td>
        <td id="LC4362" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4363" class="blob-num js-line-number" data-line-number="4363"></td>
        <td id="LC4363" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isReverse <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">options</span>.<span class="pl-smi">queue</span> <span class="pl-k">===</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L4364" class="blob-num js-line-number" data-line-number="4364"></td>
        <td id="LC4364" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Cannot reverse a queue:false animation.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4365" class="blob-num js-line-number" data-line-number="4365"></td>
        <td id="LC4365" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4366" class="blob-num js-line-number" data-line-number="4366"></td>
        <td id="LC4366" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> When a set of elements is targeted by a Velocity call, the set is broken up and each element has the current Velocity call individually queued onto it.</span></td>
      </tr>
      <tr>
        <td id="L4367" class="blob-num js-line-number" data-line-number="4367"></td>
        <td id="LC4367" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         In this way, each element&#39;s existing queue is respected; some elements may already be animating and accordingly should not have this current Velocity call triggered immediately. <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4368" class="blob-num js-line-number" data-line-number="4368"></td>
        <td id="LC4368" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span> In each queue, tween data is processed for each animating property then pushed onto the call-wide calls array. When the last element in the set has had its tweens processed,</span></td>
      </tr>
      <tr>
        <td id="L4369" class="blob-num js-line-number" data-line-number="4369"></td>
        <td id="LC4369" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         the call array is pushed to VelocityStatic.State.calls for live processing by the requestAnimationFrame tick. <span class="pl-c">*/</span></span>        <span class="pl-k">var</span> rootAnimation <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4370" class="blob-num js-line-number" data-line-number="4370"></td>
        <td id="LC4370" class="blob-code blob-code-inner js-file-line">            _prev<span class="pl-k">:</span> <span class="pl-c1">undefined</span>,</td>
      </tr>
      <tr>
        <td id="L4371" class="blob-num js-line-number" data-line-number="4371"></td>
        <td id="LC4371" class="blob-code blob-code-inner js-file-line">            _next<span class="pl-k">:</span> <span class="pl-c1">undefined</span>,</td>
      </tr>
      <tr>
        <td id="L4372" class="blob-num js-line-number" data-line-number="4372"></td>
        <td id="LC4372" class="blob-code blob-code-inner js-file-line">            _flags<span class="pl-k">:</span> isSync <span class="pl-k">?</span> <span class="pl-c1">32</span> <span class="pl-c"><span class="pl-c">/*</span> SYNC <span class="pl-c">*/</span></span> <span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4373" class="blob-num js-line-number" data-line-number="4373"></td>
        <td id="LC4373" class="blob-code blob-code-inner js-file-line">            options<span class="pl-k">:</span> options,</td>
      </tr>
      <tr>
        <td id="L4374" class="blob-num js-line-number" data-line-number="4374"></td>
        <td id="LC4374" class="blob-code blob-code-inner js-file-line">            percentComplete<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4375" class="blob-num js-line-number" data-line-number="4375"></td>
        <td id="LC4375" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>element: element,</span></td>
      </tr>
      <tr>
        <td id="L4376" class="blob-num js-line-number" data-line-number="4376"></td>
        <td id="LC4376" class="blob-code blob-code-inner js-file-line">            elements<span class="pl-k">:</span> elements,</td>
      </tr>
      <tr>
        <td id="L4377" class="blob-num js-line-number" data-line-number="4377"></td>
        <td id="LC4377" class="blob-code blob-code-inner js-file-line">            ellapsedTime<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4378" class="blob-num js-line-number" data-line-number="4378"></td>
        <td id="LC4378" class="blob-code blob-code-inner js-file-line">            timeStart<span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L4379" class="blob-num js-line-number" data-line-number="4379"></td>
        <td id="LC4379" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4380" class="blob-num js-line-number" data-line-number="4380"></td>
        <td id="LC4380" class="blob-code blob-code-inner js-file-line">        animations <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4381" class="blob-num js-line-number" data-line-number="4381"></td>
        <td id="LC4381" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> index <span class="pl-k">=</span> <span class="pl-c1">0</span>; index <span class="pl-k">&lt;</span> <span class="pl-smi">elements</span>.<span class="pl-c1">length</span>; index<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L4382" class="blob-num js-line-number" data-line-number="4382"></td>
        <td id="LC4382" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> element <span class="pl-k">=</span> elements[index];</td>
      </tr>
      <tr>
        <td id="L4383" class="blob-num js-line-number" data-line-number="4383"></td>
        <td id="LC4383" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> flags <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4384" class="blob-num js-line-number" data-line-number="4384"></td>
        <td id="LC4384" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">isNode</span>(element)) {</td>
      </tr>
      <tr>
        <td id="L4385" class="blob-num js-line-number" data-line-number="4385"></td>
        <td id="LC4385" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (isReverse) {</td>
      </tr>
      <tr>
        <td id="L4386" class="blob-num js-line-number" data-line-number="4386"></td>
        <td id="LC4386" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> lastAnimation <span class="pl-k">=</span> <span class="pl-en">Data</span>(element).<span class="pl-smi">lastAnimationList</span>[<span class="pl-smi">options</span>.<span class="pl-smi">queue</span>];</td>
      </tr>
      <tr>
        <td id="L4387" class="blob-num js-line-number" data-line-number="4387"></td>
        <td id="LC4387" class="blob-code blob-code-inner js-file-line">                    propertiesMap <span class="pl-k">=</span> lastAnimation <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">lastAnimation</span>.<span class="pl-smi">tweens</span>;</td>
      </tr>
      <tr>
        <td id="L4388" class="blob-num js-line-number" data-line-number="4388"></td>
        <td id="LC4388" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-k">!</span>propertiesMap) {</td>
      </tr>
      <tr>
        <td id="L4389" class="blob-num js-line-number" data-line-number="4389"></td>
        <td id="LC4389" class="blob-code blob-code-inner js-file-line">                        <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS: Attempting to reverse an animation on an element with no previous animation:<span class="pl-pds">&quot;</span></span>, element);</td>
      </tr>
      <tr>
        <td id="L4390" class="blob-num js-line-number" data-line-number="4390"></td>
        <td id="LC4390" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L4391" class="blob-num js-line-number" data-line-number="4391"></td>
        <td id="LC4391" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L4392" class="blob-num js-line-number" data-line-number="4392"></td>
        <td id="LC4392" class="blob-code blob-code-inner js-file-line">                    flags <span class="pl-k">|=</span> <span class="pl-c1">64</span> <span class="pl-c"><span class="pl-c">/*</span> REVERSE <span class="pl-c">*/</span></span> <span class="pl-k">&amp;</span> <span class="pl-k">~</span>(<span class="pl-smi">lastAnimation</span>.<span class="pl-smi">_flags</span> <span class="pl-k">&amp;</span> <span class="pl-c1">64</span> <span class="pl-c"><span class="pl-c">/*</span> REVERSE <span class="pl-c">*/</span></span>);</td>
      </tr>
      <tr>
        <td id="L4393" class="blob-num js-line-number" data-line-number="4393"></td>
        <td id="LC4393" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4394" class="blob-num js-line-number" data-line-number="4394"></td>
        <td id="LC4394" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> tweens <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">null</span>), animation <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({</td>
      </tr>
      <tr>
        <td id="L4395" class="blob-num js-line-number" data-line-number="4395"></td>
        <td id="LC4395" class="blob-code blob-code-inner js-file-line">                    element<span class="pl-k">:</span> element,</td>
      </tr>
      <tr>
        <td id="L4396" class="blob-num js-line-number" data-line-number="4396"></td>
        <td id="LC4396" class="blob-code blob-code-inner js-file-line">                    tweens<span class="pl-k">:</span> tweens</td>
      </tr>
      <tr>
        <td id="L4397" class="blob-num js-line-number" data-line-number="4397"></td>
        <td id="LC4397" class="blob-code blob-code-inner js-file-line">                }, rootAnimation);</td>
      </tr>
      <tr>
        <td id="L4398" class="blob-num js-line-number" data-line-number="4398"></td>
        <td id="LC4398" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">options</span>.<span class="pl-smi">_total</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L4399" class="blob-num js-line-number" data-line-number="4399"></td>
        <td id="LC4399" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">animation</span>.<span class="pl-smi">_flags</span> <span class="pl-k">|=</span> flags;</td>
      </tr>
      <tr>
        <td id="L4400" class="blob-num js-line-number" data-line-number="4400"></td>
        <td id="LC4400" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">animations</span>.<span class="pl-c1">push</span>(animation);</td>
      </tr>
      <tr>
        <td id="L4401" class="blob-num js-line-number" data-line-number="4401"></td>
        <td id="LC4401" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (isReverse) {</td>
      </tr>
      <tr>
        <td id="L4402" class="blob-num js-line-number" data-line-number="4402"></td>
        <td id="LC4402" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> In this case we&#39;re using the previous animation, so</span></td>
      </tr>
      <tr>
        <td id="L4403" class="blob-num js-line-number" data-line-number="4403"></td>
        <td id="LC4403" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> it will be expanded correctly when that one runs.</span></td>
      </tr>
      <tr>
        <td id="L4404" class="blob-num js-line-number" data-line-number="4404"></td>
        <td id="LC4404" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">animation</span>.<span class="pl-smi">tweens</span> <span class="pl-k">=</span> propertiesMap;</td>
      </tr>
      <tr>
        <td id="L4405" class="blob-num js-line-number" data-line-number="4405"></td>
        <td id="LC4405" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4406" class="blob-num js-line-number" data-line-number="4406"></td>
        <td id="LC4406" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">expandProperties</span>(animation, propertiesMap);</td>
      </tr>
      <tr>
        <td id="L4407" class="blob-num js-line-number" data-line-number="4407"></td>
        <td id="LC4407" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L4408" class="blob-num js-line-number" data-line-number="4408"></td>
        <td id="LC4408" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">queue</span>(element, animation, <span class="pl-smi">options</span>.<span class="pl-smi">queue</span>);</td>
      </tr>
      <tr>
        <td id="L4409" class="blob-num js-line-number" data-line-number="4409"></td>
        <td id="LC4409" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4410" class="blob-num js-line-number" data-line-number="4410"></td>
        <td id="LC4410" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4411" class="blob-num js-line-number" data-line-number="4411"></td>
        <td id="LC4411" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">State</span>.<span class="pl-smi">isTicking</span> <span class="pl-k">===</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L4412" class="blob-num js-line-number" data-line-number="4412"></td>
        <td id="LC4412" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> If the animation tick isn&#39;t running, start it. (Velocity shuts it</span></td>
      </tr>
      <tr>
        <td id="L4413" class="blob-num js-line-number" data-line-number="4413"></td>
        <td id="LC4413" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> off when there are no active calls to process.)</span></td>
      </tr>
      <tr>
        <td id="L4414" class="blob-num js-line-number" data-line-number="4414"></td>
        <td id="LC4414" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">VelocityStatic</span>.<span class="pl-en">tick</span>();</td>
      </tr>
      <tr>
        <td id="L4415" class="blob-num js-line-number" data-line-number="4415"></td>
        <td id="LC4415" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4416" class="blob-num js-line-number" data-line-number="4416"></td>
        <td id="LC4416" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (animations) {</td>
      </tr>
      <tr>
        <td id="L4417" class="blob-num js-line-number" data-line-number="4417"></td>
        <td id="LC4417" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">defineProperty</span>(<span class="pl-smi">elements</span>.<span class="pl-smi">velocity</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>animations<span class="pl-pds">&quot;</span></span>, animations);</td>
      </tr>
      <tr>
        <td id="L4418" class="blob-num js-line-number" data-line-number="4418"></td>
        <td id="LC4418" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4419" class="blob-num js-line-number" data-line-number="4419"></td>
        <td id="LC4419" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4420" class="blob-num js-line-number" data-line-number="4420"></td>
        <td id="LC4420" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span>*************</span></td>
      </tr>
      <tr>
        <td id="L4421" class="blob-num js-line-number" data-line-number="4421"></td>
        <td id="LC4421" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     Chaining</span></td>
      </tr>
      <tr>
        <td id="L4422" class="blob-num js-line-number" data-line-number="4422"></td>
        <td id="LC4422" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     **************<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4423" class="blob-num js-line-number" data-line-number="4423"></td>
        <td id="LC4423" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span> Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. <span class="pl-c">*/</span></span>    <span class="pl-k">return</span> elements <span class="pl-k">||</span> promise;</td>
      </tr>
      <tr>
        <td id="L4424" class="blob-num js-line-number" data-line-number="4424"></td>
        <td id="LC4424" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4425" class="blob-num js-line-number" data-line-number="4425"></td>
        <td id="LC4425" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4426" class="blob-num js-line-number" data-line-number="4426"></td>
        <td id="LC4426" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span>*************</span></td>
      </tr>
      <tr>
        <td id="L4427" class="blob-num js-line-number" data-line-number="4427"></td>
        <td id="LC4427" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Summary</span></td>
      </tr>
      <tr>
        <td id="L4428" class="blob-num js-line-number" data-line-number="4428"></td>
        <td id="LC4428" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> **************<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4429" class="blob-num js-line-number" data-line-number="4429"></td>
        <td id="LC4429" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L4430" class="blob-num js-line-number" data-line-number="4430"></td>
        <td id="LC4430" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> - CSS: CSS stack that works independently from the rest of Velocity.</span></td>
      </tr>
      <tr>
        <td id="L4431" class="blob-num js-line-number" data-line-number="4431"></td>
        <td id="LC4431" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> - animate(): Core animation method that iterates over the targeted elements and queues the incoming call onto each element individually.</span></td>
      </tr>
      <tr>
        <td id="L4432" class="blob-num js-line-number" data-line-number="4432"></td>
        <td id="LC4432" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> - Pre-Queueing: Prepare the element for animation by instantiating its data cache and processing the call&#39;s options.</span></td>
      </tr>
      <tr>
        <td id="L4433" class="blob-num js-line-number" data-line-number="4433"></td>
        <td id="LC4433" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> - Queueing: The logic that runs once the call has reached its point of execution in the element&#39;s queue stack.</span></td>
      </tr>
      <tr>
        <td id="L4434" class="blob-num js-line-number" data-line-number="4434"></td>
        <td id="LC4434" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Most logic is placed here to avoid risking it becoming stale (if the element&#39;s properties have changed).</span></td>
      </tr>
      <tr>
        <td id="L4435" class="blob-num js-line-number" data-line-number="4435"></td>
        <td id="LC4435" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> - Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.</span></td>
      </tr>
      <tr>
        <td id="L4436" class="blob-num js-line-number" data-line-number="4436"></td>
        <td id="LC4436" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> - tick(): The single requestAnimationFrame loop responsible for tweening all in-progress calls.</span></td>
      </tr>
      <tr>
        <td id="L4437" class="blob-num js-line-number" data-line-number="4437"></td>
        <td id="LC4437" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> - completeCall(): Handles the cleanup process for each Velocity call.</span></td>
      </tr>
      <tr>
        <td id="L4438" class="blob-num js-line-number" data-line-number="4438"></td>
        <td id="LC4438" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4439" class="blob-num js-line-number" data-line-number="4439"></td>
        <td id="LC4439" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span>*******************</span></td>
      </tr>
      <tr>
        <td id="L4440" class="blob-num js-line-number" data-line-number="4440"></td>
        <td id="LC4440" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Helper Functions</span></td>
      </tr>
      <tr>
        <td id="L4441" class="blob-num js-line-number" data-line-number="4441"></td>
        <td id="LC4441" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> ********************<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4442" class="blob-num js-line-number" data-line-number="4442"></td>
        <td id="LC4442" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span> IE detection. Gist: https://gist.github.com/julianshapiro/9098609 <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4443" class="blob-num js-line-number" data-line-number="4443"></td>
        <td id="LC4443" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">IE</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4444" class="blob-num js-line-number" data-line-number="4444"></td>
        <td id="LC4444" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">document</span>.<span class="pl-smi">documentMode</span>) {</td>
      </tr>
      <tr>
        <td id="L4445" class="blob-num js-line-number" data-line-number="4445"></td>
        <td id="LC4445" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">document</span>.<span class="pl-smi">documentMode</span>;</td>
      </tr>
      <tr>
        <td id="L4446" class="blob-num js-line-number" data-line-number="4446"></td>
        <td id="LC4446" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4447" class="blob-num js-line-number" data-line-number="4447"></td>
        <td id="LC4447" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">7</span>; i <span class="pl-k">&gt;</span> <span class="pl-c1">4</span>; i<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L4448" class="blob-num js-line-number" data-line-number="4448"></td>
        <td id="LC4448" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> div <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4449" class="blob-num js-line-number" data-line-number="4449"></td>
        <td id="LC4449" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">div</span>.<span class="pl-smi">innerHTML</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\x3c</span>!--[if IE <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> i <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>]&gt;&lt;span&gt;&lt;/span&gt;&lt;![endif]--<span class="pl-cce">\x3e</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4450" class="blob-num js-line-number" data-line-number="4450"></td>
        <td id="LC4450" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">div</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4451" class="blob-num js-line-number" data-line-number="4451"></td>
        <td id="LC4451" class="blob-code blob-code-inner js-file-line">                div <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4452" class="blob-num js-line-number" data-line-number="4452"></td>
        <td id="LC4452" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> i;</td>
      </tr>
      <tr>
        <td id="L4453" class="blob-num js-line-number" data-line-number="4453"></td>
        <td id="LC4453" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4454" class="blob-num js-line-number" data-line-number="4454"></td>
        <td id="LC4454" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4455" class="blob-num js-line-number" data-line-number="4455"></td>
        <td id="LC4455" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4456" class="blob-num js-line-number" data-line-number="4456"></td>
        <td id="LC4456" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L4457" class="blob-num js-line-number" data-line-number="4457"></td>
        <td id="LC4457" class="blob-code blob-code-inner js-file-line">}();</td>
      </tr>
      <tr>
        <td id="L4458" class="blob-num js-line-number" data-line-number="4458"></td>
        <td id="LC4458" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4459" class="blob-num js-line-number" data-line-number="4459"></td>
        <td id="LC4459" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span>****************</span></td>
      </tr>
      <tr>
        <td id="L4460" class="blob-num js-line-number" data-line-number="4460"></td>
        <td id="LC4460" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Unsupported</span></td>
      </tr>
      <tr>
        <td id="L4461" class="blob-num js-line-number" data-line-number="4461"></td>
        <td id="LC4461" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *****************<span class="pl-c">*/</span></span> <span class="pl-k">if</span> (<span class="pl-c1">IE</span> <span class="pl-k">&lt;=</span> <span class="pl-c1">8</span>) {</td>
      </tr>
      <tr>
        <td id="L4462" class="blob-num js-line-number" data-line-number="4462"></td>
        <td id="LC4462" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VelocityJS cannot run on Internet Explorer 8 or earlier<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4463" class="blob-num js-line-number" data-line-number="4463"></td>
        <td id="LC4463" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4464" class="blob-num js-line-number" data-line-number="4464"></td>
        <td id="LC4464" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4465" class="blob-num js-line-number" data-line-number="4465"></td>
        <td id="LC4465" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (<span class="pl-c1">window</span> <span class="pl-k">===</span> <span class="pl-c1">this</span>) {</td>
      </tr>
      <tr>
        <td id="L4466" class="blob-num js-line-number" data-line-number="4466"></td>
        <td id="LC4466" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L4467" class="blob-num js-line-number" data-line-number="4467"></td>
        <td id="LC4467" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Both jQuery and Zepto allow their $.fn object to be extended to allow</span></td>
      </tr>
      <tr>
        <td id="L4468" class="blob-num js-line-number" data-line-number="4468"></td>
        <td id="LC4468" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * wrapped elements to be subjected to plugin calls. If either framework is</span></td>
      </tr>
      <tr>
        <td id="L4469" class="blob-num js-line-number" data-line-number="4469"></td>
        <td id="LC4469" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * loaded, register a &quot;velocity&quot; extension pointing to Velocity&#39;s core</span></td>
      </tr>
      <tr>
        <td id="L4470" class="blob-num js-line-number" data-line-number="4470"></td>
        <td id="LC4470" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * animate() method. Velocity also registers itself onto a global container</span></td>
      </tr>
      <tr>
        <td id="L4471" class="blob-num js-line-number" data-line-number="4471"></td>
        <td id="LC4471" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * (window.jQuery || window.Zepto || window) so that certain features are</span></td>
      </tr>
      <tr>
        <td id="L4472" class="blob-num js-line-number" data-line-number="4472"></td>
        <td id="LC4472" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * accessible beyond just a per-element scope. Accordingly, Velocity can</span></td>
      </tr>
      <tr>
        <td id="L4473" class="blob-num js-line-number" data-line-number="4473"></td>
        <td id="LC4473" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * both act on wrapped DOM elements and stand alone for targeting raw DOM</span></td>
      </tr>
      <tr>
        <td id="L4474" class="blob-num js-line-number" data-line-number="4474"></td>
        <td id="LC4474" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * elements.</span></td>
      </tr>
      <tr>
        <td id="L4475" class="blob-num js-line-number" data-line-number="4475"></td>
        <td id="LC4475" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4476" class="blob-num js-line-number" data-line-number="4476"></td>
        <td id="LC4476" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> patch <span class="pl-k">=</span> <span class="pl-smi">VelocityStatic</span>.<span class="pl-smi">patch</span>, jQuery <span class="pl-k">=</span> <span class="pl-c1">window</span>.<span class="pl-smi">jQuery</span>, Zepto <span class="pl-k">=</span> <span class="pl-c1">window</span>.<span class="pl-smi">Zepto</span>;</td>
      </tr>
      <tr>
        <td id="L4477" class="blob-num js-line-number" data-line-number="4477"></td>
        <td id="LC4477" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">patch</span>(<span class="pl-c1">window</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4478" class="blob-num js-line-number" data-line-number="4478"></td>
        <td id="LC4478" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">patch</span>(<span class="pl-c1">Element</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">Element</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L4479" class="blob-num js-line-number" data-line-number="4479"></td>
        <td id="LC4479" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">patch</span>(<span class="pl-c1">NodeList</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">NodeList</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L4480" class="blob-num js-line-number" data-line-number="4480"></td>
        <td id="LC4480" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">patch</span>(<span class="pl-c1">HTMLCollection</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">HTMLCollection</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L4481" class="blob-num js-line-number" data-line-number="4481"></td>
        <td id="LC4481" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">patch</span>(jQuery, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4482" class="blob-num js-line-number" data-line-number="4482"></td>
        <td id="LC4482" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">patch</span>(jQuery <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">jQuery</span>.<span class="pl-smi">fn</span>);</td>
      </tr>
      <tr>
        <td id="L4483" class="blob-num js-line-number" data-line-number="4483"></td>
        <td id="LC4483" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">patch</span>(Zepto, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4484" class="blob-num js-line-number" data-line-number="4484"></td>
        <td id="LC4484" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">patch</span>(Zepto <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">Zepto</span>.<span class="pl-smi">fn</span>);</td>
      </tr>
      <tr>
        <td id="L4485" class="blob-num js-line-number" data-line-number="4485"></td>
        <td id="LC4485" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4486" class="blob-num js-line-number" data-line-number="4486"></td>
        <td id="LC4486" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4487" class="blob-num js-line-number" data-line-number="4487"></td>
        <td id="LC4487" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span>****************</span></td>
      </tr>
      <tr>
        <td id="L4488" class="blob-num js-line-number" data-line-number="4488"></td>
        <td id="LC4488" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Known Issues</span></td>
      </tr>
      <tr>
        <td id="L4489" class="blob-num js-line-number" data-line-number="4489"></td>
        <td id="LC4489" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *****************<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L4490" class="blob-num js-line-number" data-line-number="4490"></td>
        <td id="LC4490" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span> The CSS spec mandates that the translateX/Y/Z transforms are %-relative to the element itself -- not its parent.</span></td>
      </tr>
      <tr>
        <td id="L4491" class="blob-num js-line-number" data-line-number="4491"></td>
        <td id="LC4491" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Velocity, however, doesn&#39;t make this distinction. Thus, converting to or from the % unit with these subproperties</span></td>
      </tr>
      <tr>
        <td id="L4492" class="blob-num js-line-number" data-line-number="4492"></td>
        <td id="LC4492" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> will produce an inaccurate conversion value. The same issue exists with the cx/cy attributes of SVG circles and ellipses. <span class="pl-c">*/</span></span> <span class="pl-k">var</span> <span class="pl-en">_loop_3</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L4493" class="blob-num js-line-number" data-line-number="4493"></td>
        <td id="LC4493" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> value <span class="pl-k">=</span> VelocityStatic[key];</td>
      </tr>
      <tr>
        <td id="L4494" class="blob-num js-line-number" data-line-number="4494"></td>
        <td id="LC4494" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-en">isString</span>(value) <span class="pl-k">||</span> <span class="pl-en">isNumber</span>(value) <span class="pl-k">||</span> <span class="pl-en">isBoolean</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L4495" class="blob-num js-line-number" data-line-number="4495"></td>
        <td id="LC4495" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(VelocityFn, key, {</td>
      </tr>
      <tr>
        <td id="L4496" class="blob-num js-line-number" data-line-number="4496"></td>
        <td id="LC4496" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">PUBLIC_MEMBERS</span>.<span class="pl-c1">indexOf</span>(key) <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4497" class="blob-num js-line-number" data-line-number="4497"></td>
        <td id="LC4497" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4498" class="blob-num js-line-number" data-line-number="4498"></td>
        <td id="LC4498" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> VelocityStatic[key];</td>
      </tr>
      <tr>
        <td id="L4499" class="blob-num js-line-number" data-line-number="4499"></td>
        <td id="LC4499" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L4500" class="blob-num js-line-number" data-line-number="4500"></td>
        <td id="LC4500" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L4501" class="blob-num js-line-number" data-line-number="4501"></td>
        <td id="LC4501" class="blob-code blob-code-inner js-file-line">                VelocityStatic[key] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L4502" class="blob-num js-line-number" data-line-number="4502"></td>
        <td id="LC4502" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4503" class="blob-num js-line-number" data-line-number="4503"></td>
        <td id="LC4503" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4504" class="blob-num js-line-number" data-line-number="4504"></td>
        <td id="LC4504" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4505" class="blob-num js-line-number" data-line-number="4505"></td>
        <td id="LC4505" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(VelocityFn, key, {</td>
      </tr>
      <tr>
        <td id="L4506" class="blob-num js-line-number" data-line-number="4506"></td>
        <td id="LC4506" class="blob-code blob-code-inner js-file-line">            enumerable<span class="pl-k">:</span> <span class="pl-c1">PUBLIC_MEMBERS</span>.<span class="pl-c1">indexOf</span>(key) <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4507" class="blob-num js-line-number" data-line-number="4507"></td>
        <td id="LC4507" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4508" class="blob-num js-line-number" data-line-number="4508"></td>
        <td id="LC4508" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> VelocityStatic[key];</td>
      </tr>
      <tr>
        <td id="L4509" class="blob-num js-line-number" data-line-number="4509"></td>
        <td id="LC4509" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4510" class="blob-num js-line-number" data-line-number="4510"></td>
        <td id="LC4510" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4511" class="blob-num js-line-number" data-line-number="4511"></td>
        <td id="LC4511" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4512" class="blob-num js-line-number" data-line-number="4512"></td>
        <td id="LC4512" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4513" class="blob-num js-line-number" data-line-number="4513"></td>
        <td id="LC4513" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4514" class="blob-num js-line-number" data-line-number="4514"></td>
        <td id="LC4514" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;../index.d.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L4515" class="blob-num js-line-number" data-line-number="4515"></td>
        <td id="LC4515" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;constants.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L4516" class="blob-num js-line-number" data-line-number="4516"></td>
        <td id="LC4516" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;types.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L4517" class="blob-num js-line-number" data-line-number="4517"></td>
        <td id="LC4517" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;utility.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L4518" class="blob-num js-line-number" data-line-number="4518"></td>
        <td id="LC4518" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;Velocity/_all.d.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L4519" class="blob-num js-line-number" data-line-number="4519"></td>
        <td id="LC4519" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/&lt;reference path=&quot;core.ts&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L4520" class="blob-num js-line-number" data-line-number="4520"></td>
        <td id="LC4520" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L4521" class="blob-num js-line-number" data-line-number="4521"></td>
        <td id="LC4521" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * VelocityJS.org (C) 2014-2017 Julian Shapiro.</span></td>
      </tr>
      <tr>
        <td id="L4522" class="blob-num js-line-number" data-line-number="4522"></td>
        <td id="LC4522" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4523" class="blob-num js-line-number" data-line-number="4523"></td>
        <td id="LC4523" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT license. See LICENSE file in the project root for details.</span></td>
      </tr>
      <tr>
        <td id="L4524" class="blob-num js-line-number" data-line-number="4524"></td>
        <td id="LC4524" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4525" class="blob-num js-line-number" data-line-number="4525"></td>
        <td id="LC4525" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Merge the VelocityStatic namespace onto the Velocity function for external</span></td>
      </tr>
      <tr>
        <td id="L4526" class="blob-num js-line-number" data-line-number="4526"></td>
        <td id="LC4526" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * use. This is done as a read-only way. Any attempt to change these values will</span></td>
      </tr>
      <tr>
        <td id="L4527" class="blob-num js-line-number" data-line-number="4527"></td>
        <td id="LC4527" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * be allowed.</span></td>
      </tr>
      <tr>
        <td id="L4528" class="blob-num js-line-number" data-line-number="4528"></td>
        <td id="LC4528" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span> <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> VelocityStatic) {</td>
      </tr>
      <tr>
        <td id="L4529" class="blob-num js-line-number" data-line-number="4529"></td>
        <td id="LC4529" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">_loop_3</span>(key);</td>
      </tr>
      <tr>
        <td id="L4530" class="blob-num js-line-number" data-line-number="4530"></td>
        <td id="LC4530" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4531" class="blob-num js-line-number" data-line-number="4531"></td>
        <td id="LC4531" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> console.log(&quot;Velocity keys&quot;, Object.keys(VelocityStatic));</span></td>
      </tr>
      <tr>
        <td id="L4532" class="blob-num js-line-number" data-line-number="4532"></td>
        <td id="LC4532" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span># sourceMappingURL=velocity.js.map</span></td>
      </tr>
      <tr>
        <td id="L4533" class="blob-num js-line-number" data-line-number="4533"></td>
        <td id="LC4533" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span># sourceMappingURL=velocity.js.map</span></td>
      </tr>
      <tr>
        <td id="L4534" class="blob-num js-line-number" data-line-number="4534"></td>
        <td id="LC4534" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">return</span> VelocityFn;</td>
      </tr>
      <tr>
        <td id="L4535" class="blob-num js-line-number" data-line-number="4535"></td>
        <td id="LC4535" class="blob-code blob-code-inner js-file-line">}));</td>
      </tr>
</table>

  <div class="BlobToolbar position-absolute js-file-line-actions dropdown js-menu-container js-select-menu d-none" aria-hidden="true">
    <button class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1 dropdown-toggle js-menu-target" id="js-file-line-action-button" type="button" aria-expanded="false" aria-haspopup="true" aria-label="Inline file action toolbar" aria-controls="inline-file-actions">
      <svg aria-hidden="true" class="octicon octicon-kebab-horizontal" height="16" version="1.1" viewBox="0 0 13 16" width="13"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"/></svg>
    </button>
    <div class="dropdown-menu-content js-menu-content" id="inline-file-actions">
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2">
        <li><a class="js-zeroclipboard dropdown-item" style="cursor:pointer;" id="js-copy-lines" data-original-text="Copy lines">Copy lines</a></li>
        <li><a class="js-zeroclipboard dropdown-item" id= "js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</a></li>
        <li><a href="/julianshapiro/velocity/blame/92f6981723e51895855812366739a04fef93176b/velocity.js" class="dropdown-item js-update-url-with-hash" id="js-view-git-blame">View git blame</a></li>
          <li><a href="/julianshapiro/velocity/issues/new" class="dropdown-item" id="js-new-issue">Open new issue</a></li>
      </ul>
    </div>
  </div>

  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>


  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between py-6 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2018 <span title="0.34808s from unicorn-927960408-5v567">GitHub</span>, Inc.</li>
        <li class="mr-3"><a href="https://help.github.com/articles/github-terms-of-service/" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li class="mr-3"><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li class="mr-3"><a href="https://help.github.com/articles/github-security/" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>

    <a href="https://github.com" aria-label="Homepage" class="footer-octicon" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li class="mr-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li class="mr-3"><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha512-+9SUOXJa600OraC+drMqO/eQMyohzKSHekvELcJq0CwVt+gGOELOaAX0buFR3IYP383Cmxz2mdpY4OH5WoBX/Q==" src="https://assets-cdn.github.com/assets/frameworks-fbd49439725a.js" type="application/javascript"></script>
    
    <script async="async" crossorigin="anonymous" integrity="sha512-chaYz02hYs42DXloSPI8kiuUjZJQ2OGut8qdaz81HKXRHVH7coWsCxRSIaDQAImg/4fdQSdGgXWnox47IlHOzg==" src="https://assets-cdn.github.com/assets/github-721698cf4da1.js" type="application/javascript"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>

  

  </body>
</html>

